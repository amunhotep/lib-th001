EXECUTE BLOCK (
  Q_DATE_FROM TYPE OF COLUMN TABL$J_4.DATE_COMMIT = ?DATE_FROM
 ,Q_DATE_TO   TYPE OF COLUMN TABL$J_4.DATE_COMMIT = ?DATE_TO
 ,Q_FIRM_IDS  TYPE OF COLUMN TABL$J_4.DOCSTR      = ?FIRM_IDS
)RETURNS ( 
  DATE_FROM              TYPE OF COLUMN TABL$J_4.DATE_COMMIT
 ,DATE_TO                TYPE OF COLUMN TABL$J_4.DATE_COMMIT
 ,FIRM_IDS               TYPE OF COLUMN TABL$J_4.DOCSTR
 ,J_1000017_ID           TYPE OF COLUMN TABL$J_4.ID
 ,J_1000017_DOCNUMBERSTR TYPE OF COLUMN TABL$J_4.DOCNUMBERSTR
 ,J_1000017_DATE_COMMIT  TYPE OF COLUMN TABL$J_4.DATE_COMMIT
 ,D17_SUBKONTO_ID        TYPE OF COLUMN TABL$D_1000017.SUBKONTO_ID
 ,D17_SUBKONTO_NAME      TYPE OF COLUMN TABL$D_1000017.SUBKONTO_NAME
 ,D17_PAYSUM             TYPE OF COLUMN TABL$D_1000017.PAYSUM
 ,D17_PAYSUMCLEAR        TYPE OF COLUMN TABL$D_1000017.PAYSUMCLEAR
 ,D17_PAYSUMNDP          TYPE OF COLUMN TABL$D_1000017.PAYSUMNDP
 ,J_REASON_ID            TYPE OF COLUMN TABL$D_1000017.J_REASON_ID
 ,J_REASON_TYPE_ID       TYPE OF COLUMN TABL$_TB_TYPES.ID
 ,J_REASON_TYPE_NAME     TYPE OF COLUMN TABL$_TB_TYPES.NAME
 ,J_REASON_FIRM_ID       TYPE OF COLUMN TABL$J_4.FIRM_ID
 ,J_REASON_DOCNUMBERSTR  TYPE OF COLUMN TABL$J_4.DOCNUMBERSTR
 ,J_REASON_DATE_COMMIT   TYPE OF COLUMN TABL$J_4.DATE_COMMIT
 ,J_REASON_CS_ID         TYPE OF COLUMN TABL$J_1000014.CS_ID
 ,J_REASON_CS_NAME       TYPE OF COLUMN TABL$R_CS.NAME
 ,D14_TMC_ID             TYPE OF COLUMN TABL$D_1000014.TMC_ID
 ,D14_TMC_NAME           TYPE OF COLUMN TABL$R_TMC.NAME
 ,D14_TMC_ARTICLE        TYPE OF COLUMN TABL$R_TMC.ARTICLE
 ,D14_PRICE              TYPE OF COLUMN TABL$D_1000014.PRICE
 ,D14_QUANT              TYPE OF COLUMN TABL$D_1000014.QUANT
 ,D14_TOTAL              TYPE OF COLUMN TABL$D_1000014.TOTAL
 ,J_1000026_ID           TYPE OF COLUMN TABL$J_4.ID
 ,J_1000026_DOCNUMBERSTR TYPE OF COLUMN TABL$J_4.DOCNUMBERSTR
 ,J_1000026_DATE_COMMIT  TYPE OF COLUMN TABL$J_4.DATE_COMMIT
 ,J_1000026_CS_ID        TYPE OF COLUMN TABL$J_1000014.CS_ID
 ,J_1000026_CS_NAME      TYPE OF COLUMN TABL$R_CS.NAME
 ,D26_PRICE              TYPE OF COLUMN TABL$D_1000014.PRICE
 ,D26_QUANT              TYPE OF COLUMN TABL$D_1000014.QUANT
 ,D26_TOTAL              TYPE OF COLUMN TABL$D_1000014.TOTAL
)AS
  DECLARE VARIABLE P_QUANT TYPE OF COLUMN TABL$D_1000014.QUANT;
BEGIN
  DATE_FROM = :Q_DATE_FROM;
  DATE_TO   = :Q_DATE_TO;
  FIRM_IDS  = :Q_FIRM_IDS;
  FOR 
    SELECT J.ID, J.DOCNUMBERSTR, J.DATE_COMMIT
          ,D17.SUBKONTO_ID, D17.SUBKONTO_NAME, D17.PAYSUM, D17.PAYSUMCLEAR, D17.PAYSUMNDP
          ,D17.J_REASON_ID, JR.TYPE_ID, TTJR.NAME2, JR.DOCNUMBERSTR, JR.DATE_COMMIT
          ,JR.FIRM_ID
    FROM   TABL$J_4 J, TABL$D_1000017 D17, TABL$J_4 JR, TABL$_TB_TYPES TTJR
    WHERE  (J.DATE_COMMIT BETWEEN :DATE_FROM AND :DATE_TO)
      AND  (J.TYPE_ID     = 1000017)
      AND  (J.FLAG_COMMIT = 1)
      AND  (:FIRM_IDS CONTAINING '~'||J.FIRM_ID||'~')
      AND  (D17.J_ID      = J.ID)
      AND  (D17.ACC_ID    = 361)
      AND  (JR.ID         = D17.J_REASON_ID)
      AND  (TTJR.ID       = JR.TYPE_ID)
    ORDER BY J.DATE_COMMIT, J.DOCNUMBERSTR, D17.SUBKONTO_NAME, JR.DOCNUMBERSTR    
    INTO   :J_1000017_ID, :J_1000017_DOCNUMBERSTR, :J_1000017_DATE_COMMIT
          ,:D17_SUBKONTO_ID, :D17_SUBKONTO_NAME, :D17_PAYSUM, :D17_PAYSUMCLEAR,:D17_PAYSUMNDP
          ,:J_REASON_ID, :J_REASON_TYPE_ID, :J_REASON_TYPE_NAME, :J_REASON_DOCNUMBERSTR, :J_REASON_DATE_COMMIT
          ,:J_REASON_FIRM_ID
  DO
    BEGIN
    J_REASON_CS_ID   = NULL;
    J_REASON_CS_NAME = NULL;
    SELECT FIRST 1 J14.CS_ID, C.NAME
    FROM   TABL$J_1000014 J14, TABL$R_CS C
    WHERE  (J14.J_ID = :J_REASON_ID)
      AND  (C.ID     = J14.CS_ID)
    INTO   :J_REASON_CS_ID, :J_REASON_CS_NAME;

    FOR
      SELECT D14.TMC_ID, T.NAME, T.ARTICLE
            ,(IIF( D14.NDP<0, D14.PRICE + D14.NDP, D14.PRICE)) AS PRICE
            ,D14.QUANT
      FROM   TABL$D_1000014 D14, TABL$R_TMC T
      WHERE  (D14.J_ID = :J_REASON_ID)
        AND  (T.ID     = D14.TMC_ID)
      INTO   :D14_TMC_ID, :D14_TMC_NAME, :D14_TMC_ARTICLE
            ,:D14_PRICE, :D14_QUANT
    DO
      BEGIN
      D14_TOTAL = :D14_QUANT * :D14_PRICE;
      P_QUANT   = :D14_QUANT;

      J_1000026_DATE_COMMIT = NULL;

      FOR
        SELECT P.DATE_COMMIT
        FROM   PROC$P_TMCQUANT_MOVESONDATE(:J_REASON_FIRM_ID, NULL, :D14_TMC_ID, :J_REASON_DATE_COMMIT) P, TABL$J_1000014 J14
        WHERE  (J14.J_ID = P.J_ID) 
        
          AND  (    (J14.FLAG_OLDPAYMENT = 1)
                 OR EXISTS(
                      SELECT JP171.ID
                      FROM   TABL$J_4 JP171
                      WHERE  (JP171.ID          = J14.J_PAY_ID)
                        AND  (JP171.DATE_COMMIT <= :J_1000017_DATE_COMMIT)
                        AND  (JP171.TYPE_ID     = 1000017)
                        AND  (JP171.FLAG_COMMIT = 1)
                    )
                 OR EXISTS(
                      SELECT DP17.ID
                      FROM   TABL$J_4 JP17, TABL$D_1000017 DP17
                      WHERE  (JP17.TYPE_ID     = 1000017)
                        AND  (JP17.DATE_COMMIT <= :J_1000017_DATE_COMMIT)
                        AND  (JP17.FLAG_COMMIT = 1)
                        AND  (DP17.J_ID        = JP17.ID)
                        AND  (DP17.J_REASON_ID = P.J_ID)
                    )
               )  
       
        ORDER BY P.DATE_COMMIT DESCENDING
        INTO   :J_1000026_DATE_COMMIT
      DO
        IF(:P_QUANT > 0)THEN
          BEGIN
          SELECT FIRST 1 P.J_ID, J4.DOCNUMBERSTR, J14.CS_ID, C.NAME, P.PRICE_IN, P.QUANT
          FROM   PROC$P_TMCQUANT_MOVESONDATE(:J_REASON_FIRM_ID, NULL, :D14_TMC_ID, :J_REASON_DATE_COMMIT) P
                ,TABL$J_4 J4, TABL$J_1000014 J14, TABL$R_CS C
          WHERE  (P.DATE_COMMIT = :J_1000026_DATE_COMMIT)
            AND  (J4.ID         = P.J_ID)
            AND  (J14.J_ID      = J4.ID)
            AND  (C.ID          = J14.CS_ID)
          INTO   :J_1000026_ID, :J_1000026_DOCNUMBERSTR, :J_1000026_CS_ID
                ,:J_1000026_CS_NAME, :D26_PRICE, :D26_QUANT;

          IF(:D26_QUANT > :P_QUANT)THEN
            D26_QUANT = :P_QUANT;
  
          D26_TOTAL = TRUNC( (:D26_QUANT * :D26_PRICE), 2);
          P_QUANT   = :P_QUANT - :D26_QUANT;
          SUSPEND;
          END
      END
    END
END
