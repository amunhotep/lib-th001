EXECUTE BLOCK (
  Q_DATE_FROM         TYPE OF COLUMN TABL$J_4.DATE_COMMIT = ?DATE_FROM
 ,Q_DATE_TO           TYPE OF COLUMN TABL$J_4.DATE_COMMIT = ?DATE_TO
 ,Q_FIRM_IDS          TYPE OF COLUMN TABL$J_4.DOCSTR      = ?FIRM_IDS
 ,Q_FLAG              TYPE OF COLUMN TABL$J_4.FLAG_COMMIT = ?FLAG
 ,Q_FLAG_FILIALS      TYPE OF COLUMN TABL$J_4.FLAG_COMMIT = ?FLAG_FILIALS
)RETURNS ( 
  DATE_FROM           TYPE OF COLUMN TABL$J_4.DATE_COMMIT
 ,DATE_TO             TYPE OF COLUMN TABL$J_4.DATE_COMMIT
 ,SOMETIME            TYPE OF COLUMN TABL$J_4.DATE_COMMIT
 ,FIRM_IDS            TYPE OF COLUMN TABL$J_4.DOCSTR
 ,FIRM_NAMES          TYPE OF COLUMN TABL$J_4.DOCSTR
 ,BUHG_ACCS_ID        TYPE OF COLUMN TABL$R_BUHG_ACCS.NAME
 ,BUHG_ACCS_PARENT_ID TYPE OF COLUMN TABL$R_BUHG_ACCS.NAME
 ,BUHG_ACCS_NAME      TYPE OF COLUMN TABL$R_BUHG_ACCS.NAME
 ,BUHG_ACCS_NAMEPATH  TYPE OF COLUMN TABL$J_4.DOCSTR
 ,BUHG_ACCS_IDS       TYPE OF COLUMN TABL$J_4.DOCSTR
 ,FILIAL_ID           TYPE OF COLUMN TABL$R_FILIALS.ID
 ,FILIAL_NAME         TYPE OF COLUMN TABL$R_FILIALS.NAME
 ,SALDOBEGIN          TYPE OF COLUMN TABL$J_4.DOCSUM
 ,SALDOBEGINDEB       TYPE OF COLUMN TABL$J_4.DOCSUM
 ,SALDOBEGINKRD       TYPE OF COLUMN TABL$J_4.DOCSUM
 ,DEBET               TYPE OF COLUMN TABL$J_4.DOCSUM
 ,KREDIT              TYPE OF COLUMN TABL$J_4.DOCSUM
 ,SALDOEND            TYPE OF COLUMN TABL$J_4.DOCSUM
 ,SALDOENDDEB         TYPE OF COLUMN TABL$J_4.DOCSUM
 ,SALDOENDKRD         TYPE OF COLUMN TABL$J_4.DOCSUM
 ,SALDOBEGINDEB_      TYPE OF COLUMN TABL$J_4.DOCSUM
 ,SALDOBEGINKRD_      TYPE OF COLUMN TABL$J_4.DOCSUM
 ,DEBET_              TYPE OF COLUMN TABL$J_4.DOCSUM
 ,KREDIT_             TYPE OF COLUMN TABL$J_4.DOCSUM
 ,SALDOENDDEB_        TYPE OF COLUMN TABL$J_4.DOCSUM
 ,SALDOENDKRD_        TYPE OF COLUMN TABL$J_4.DOCSUM
)AS
  DECLARE VARIABLE P_ACC_IDS        TYPE OF COLUMN TABL$P_CND.ACC_IDS_DEB;
  DECLARE VARIABLE P_DEBET          TYPE OF COLUMN TABL$J_4.DOCSUM;
  DECLARE VARIABLE P_KREDIT         TYPE OF COLUMN TABL$J_4.DOCSUM;
  DECLARE VARIABLE P_DEB_CNT        TYPE OF COLUMN TABL$J_4.ID;
  DECLARE VARIABLE P_KRD_CNT        TYPE OF COLUMN TABL$J_4.ID;
  DECLARE VARIABLE P_NAMEPATH       TYPE OF COLUMN TABL$J_4.DOCSTR;
BEGIN 
  DATE_FROM   = :Q_DATE_FROM;
  DATE_TO     = :Q_DATE_TO;
  FIRM_IDS    = :Q_FIRM_IDS;
  FILIAL_ID   = -1;
  FILIAL_NAME = NULL;
  SALDOBEGINDEB_ = 0; SALDOBEGINKRD_ = 0;
  DEBET_         = 0; KREDIT_        = 0;
  SALDOENDDEB_   = 0; SALDOENDKRD_   = 0;
  
  SELECT FIRST 1 LIST(F.NAME,'; ') FROM TABL$R_FIRMS F WHERE(:FIRM_IDS CONTAINING '~'||F.ID||'~') INTO :FIRM_NAMES;
  P_ACC_IDS = '';
  SELECT '~'||LIST(DISTINCT TMP.ACC_ID,'~')||'~'
  FROM   (SELECT DISTINCT CD.ACC_ID_DEB  AS ACC_ID FROM TABL$P_CND CD
          UNION ALL
          SELECT DISTINCT CD.ACC_ID_KRED AS ACC_ID FROM TABL$P_CND CD
          )TMP
  INTO    :P_ACC_IDS;

  FOR
    SELECT B1.ID, B1.PARENT_ID
    FROM   TABL$R_BUHG_ACCS B1
    WHERE  (B1.PARENT_ID = -1000000)
    INTO   :BUHG_ACCS_ID, :BUHG_ACCS_PARENT_ID
  DO
    BEGIN
    SALDOBEGIN    = 0; DEBET = 0; KREDIT = 0; SALDOEND  = 0;
    SALDOBEGINDEB = 0; SALDOBEGINKRD = 0;
    SALDOENDDEB   = 0; SALDOENDKRD   = 0;
    P_DEBET       = 0; P_KREDIT      = 0;
    SELECT COALESCE(SUM(C1.CND_VALUE),0)
    FROM   TABL$P_CND C1
    WHERE  (C1.DATE_COMMIT < :DATE_FROM)
      AND  (C1.ACC_IDS_DEB CONTAINING '~'||:BUHG_ACCS_ID||'~')
      AND  (:FIRM_IDS      CONTAINING '~'||C1.FIRM_ID||'~')
    INTO   :P_DEBET;
    SELECT COALESCE(SUM(C2.CND_VALUE),0)
    FROM   TABL$P_CND C2
    WHERE  (C2.DATE_COMMIT < :DATE_FROM)
      AND  (C2.ACC_IDS_KRED CONTAINING '~'||:BUHG_ACCS_ID||'~')
      AND  (:FIRM_IDS       CONTAINING '~'||C2.FIRM_ID||'~')
    INTO   :P_KREDIT;
    SELECT COALESCE(SUM(C1.CND_VALUE),0)
    FROM   TABL$P_CND C1
    WHERE  (C1.DATE_COMMIT BETWEEN :DATE_FROM AND :DATE_TO)
      AND  (C1.ACC_IDS_DEB CONTAINING '~'||:BUHG_ACCS_ID||'~')
      AND  (:FIRM_IDS      CONTAINING '~'||C1.FIRM_ID||'~')
    INTO   :DEBET;
    SELECT COALESCE(SUM(C2.CND_VALUE),0)
    FROM   TABL$P_CND C2
    WHERE  (C2.DATE_COMMIT BETWEEN :DATE_FROM AND :DATE_TO)
      AND  (C2.ACC_IDS_KRED CONTAINING '~'||:BUHG_ACCS_ID||'~')
      AND  (:FIRM_IDS       CONTAINING '~'||C2.FIRM_ID||'~')
    INTO   :KREDIT;
    SALDOBEGIN = :P_DEBET - :P_KREDIT;
    SALDOEND   = :SALDOBEGIN + :DEBET - :KREDIT;
    IF(:SALDOBEGIN >= 0)THEN SALDOBEGINDEB = :SALDOBEGIN; ELSE SALDOBEGINKRD = ABS(:SALDOBEGIN);
    IF(:SALDOEND   >= 0)THEN SALDOENDDEB   = :SALDOEND  ; ELSE SALDOENDKRD   = ABS(:SALDOEND);
    SALDOBEGINDEB_ = :SALDOBEGINDEB_ + :SALDOBEGINDEB;
    SALDOBEGINKRD_ = :SALDOBEGINKRD_ + :SALDOBEGINKRD;
    DEBET_         = :DEBET_         + :DEBET;
    KREDIT_        = :KREDIT_        + :KREDIT;
    SALDOENDDEB_   = :SALDOENDDEB_   + :SALDOENDDEB;
    SALDOENDKRD_   = :SALDOENDKRD_   + :SALDOENDKRD;
    END

  FOR
    SELECT TMP.ID, TMP.PARENT_ID, TMP.NAME, TMP.NAMEPATH
    FROM   (WITH RECURSIVE BA AS(
              SELECT B1.ID, B1.PARENT_ID, B1.NAME, CAST('' AS VARCHAR(1)) AS NAMEPATH
              FROM   TABL$R_BUHG_ACCS B1
              WHERE  (B1.PARENT_ID = -1000000)
              UNION ALL
              SELECT B2.ID, B2.PARENT_ID, B2.NAME, CAST('  '||B3.NAMEPATH AS VARCHAR(255)) AS NAMEPATH
              FROM   TABL$R_BUHG_ACCS B2, BA B3
              WHERE  (B2.PARENT_ID = B3.ID)
            )SELECT B.ID, B.PARENT_ID, B.NAME, B.NAMEPATH FROM BA B
            )TMP
    WHERE  ( (:Q_FLAG = 1) AND (:P_ACC_IDS CONTAINING '~'||TMP.ID||'~') )
      OR   ( (:Q_FLAG <> 1))      
    INTO   :BUHG_ACCS_ID, :BUHG_ACCS_PARENT_ID, :BUHG_ACCS_NAME, :P_NAMEPATH
  DO 
    BEGIN
    FILIAL_ID     = -1;
    FILIAL_NAME   = NULL;
    SALDOBEGIN    = 0; DEBET = 0; KREDIT = 0; SALDOEND  = 0;
    SALDOBEGINDEB = 0; SALDOBEGINKRD = 0;
    SALDOENDDEB   = 0; SALDOENDKRD   = 0;
    P_DEBET       = 0; P_KREDIT      = 0;
    P_DEB_CNT     = 0; P_KRD_CNT     = 0;

    IF(:Q_FLAG = 1)THEN
      BEGIN
      BUHG_ACCS_NAMEPATH = :BUHG_ACCS_NAME;
      SELECT COALESCE(SUM(C1.CND_VALUE),0)
      FROM   TABL$P_CND C1
      WHERE  (C1.DATE_COMMIT < :DATE_FROM)
        AND  (C1.ACC_ID_DEB = :BUHG_ACCS_ID)
        AND  (:FIRM_IDS      CONTAINING '~'||C1.FIRM_ID||'~')
      INTO   :P_DEBET;
      SELECT COALESCE(SUM(C2.CND_VALUE),0)
      FROM   TABL$P_CND C2
      WHERE  (C2.DATE_COMMIT < :DATE_FROM)
        AND  (C2.ACC_ID_KRED = :BUHG_ACCS_ID)
        AND  (:FIRM_IDS       CONTAINING '~'||C2.FIRM_ID||'~')
      INTO   :P_KREDIT;
      SALDOBEGIN = :P_DEBET - :P_KREDIT;
      SELECT COALESCE(SUM(CK.CND_VALUE),0), COALESCE(COUNT(CK.ID),0)
      FROM   TABL$P_CND CK
      WHERE  (CK.DATE_COMMIT BETWEEN :DATE_FROM AND :DATE_TO)
        AND  (CK.ACC_ID_DEB = :BUHG_ACCS_ID)
        AND  (:FIRM_IDS      CONTAINING '~'||CK.FIRM_ID||'~')
      INTO   :DEBET, :P_DEB_CNT;
      SELECT COALESCE(SUM(CD.CND_VALUE),0), COALESCE(COUNT(CD.ID),0)
      FROM   TABL$P_CND CD
      WHERE  (CD.DATE_COMMIT  BETWEEN :DATE_FROM AND :DATE_TO)
        AND  (CD.ACC_ID_KRED  = :BUHG_ACCS_ID)
        AND  (:FIRM_IDS       CONTAINING '~'||CD.FIRM_ID||'~')
      INTO   :KREDIT, :P_KRD_CNT;
      SALDOEND = :SALDOBEGIN + :DEBET - :KREDIT;
      IF(:SALDOBEGIN >= 0)THEN SALDOBEGINDEB = :SALDOBEGIN; ELSE SALDOBEGINKRD = ABS(:SALDOBEGIN);
      IF(:SALDOEND   >= 0)THEN SALDOENDDEB   = :SALDOEND  ; ELSE SALDOENDKRD   = ABS(:SALDOEND);
      IF(   (:SALDOBEGINDEB <> 0) OR (:SALDOBEGINKRD <> 0)
          OR(:P_DEB_CNT     <> 0) OR (:P_KRD_CNT     <> 0)
          OR(:DEBET         <> 0) OR (:KREDIT        <> 0)
          OR(:SALDOENDDEB   <> 0) OR (:SALDOENDKRD   <> 0)
      )THEN
        BEGIN
        SUSPEND;
        IF(:Q_FLAG_FILIALS = 1)THEN
          FOR
            SELECT F.ID, F.NAME 
            FROM   TABL$R_FILIALS F
            ORDER BY F.ID
            INTO   :FILIAL_ID, :FILIAL_NAME
          DO  
            BEGIN
            IF(:Q_FLAG = 1)THEN
              BUHG_ACCS_NAMEPATH = '    '||:FILIAL_NAME;
             ELSE 
              BUHG_ACCS_NAMEPATH = :P_NAMEPATH||'    '||:FILIAL_NAME;
            SALDOBEGIN    = 0; DEBET = 0; KREDIT = 0; SALDOEND  = 0;
            SALDOBEGINDEB = 0; SALDOBEGINKRD = 0;
            SALDOENDDEB   = 0; SALDOENDKRD   = 0;
            P_DEBET       = 0; P_KREDIT      = 0;
            P_DEB_CNT     = 0; P_KRD_CNT     = 0;
            SELECT COALESCE(SUM(C1.CND_VALUE),0)
            FROM   TABL$P_CND C1
            WHERE  (C1.DATE_COMMIT < :DATE_FROM)
              AND  (C1.ACC_ID_DEB = :BUHG_ACCS_ID)
              AND  (:FIRM_IDS      CONTAINING '~'||C1.FIRM_ID||'~')
              AND  ((C1.FILIAL_ID+0) = :FILIAL_ID)
            INTO   :P_DEBET;
            SELECT COALESCE(SUM(C2.CND_VALUE),0)
            FROM   TABL$P_CND C2
            WHERE  (C2.DATE_COMMIT < :DATE_FROM)
              AND  (C2.ACC_ID_KRED = :BUHG_ACCS_ID)
              AND  (:FIRM_IDS       CONTAINING '~'||C2.FIRM_ID||'~')
              AND  ((C2.FILIAL_ID+0) = :FILIAL_ID)
            INTO   :P_KREDIT;
            SALDOBEGIN = :P_DEBET - :P_KREDIT;
            SELECT COALESCE(SUM(CK.CND_VALUE),0)
            FROM   TABL$P_CND CK
            WHERE  (CK.DATE_COMMIT BETWEEN :DATE_FROM AND :DATE_TO)
              AND  (CK.ACC_ID_DEB = :BUHG_ACCS_ID)
              AND  (:FIRM_IDS      CONTAINING '~'||CK.FIRM_ID||'~')
              AND  ((CK.FILIAL_ID+0) = :FILIAL_ID)
            INTO   :DEBET;
            SELECT COALESCE(SUM(CD.CND_VALUE),0)
            FROM   TABL$P_CND CD
            WHERE  (CD.DATE_COMMIT  BETWEEN :DATE_FROM AND :DATE_TO)
              AND  (CD.ACC_ID_KRED  = :BUHG_ACCS_ID)
              AND  (:FIRM_IDS       CONTAINING '~'||CD.FIRM_ID||'~')
              AND  ((CD.FILIAL_ID+0) = :FILIAL_ID)
            INTO   :KREDIT;
            SALDOEND = :SALDOBEGIN + :DEBET - :KREDIT;
            IF(:SALDOBEGIN >= 0)THEN SALDOBEGINDEB = :SALDOBEGIN; ELSE SALDOBEGINKRD = ABS(:SALDOBEGIN);
            IF(:SALDOEND   >= 0)THEN SALDOENDDEB   = :SALDOEND  ; ELSE SALDOENDKRD   = ABS(:SALDOEND);
            SUSPEND;
            END
        END
      END
     ELSE
      BEGIN
      BUHG_ACCS_NAMEPATH = :P_NAMEPATH||:BUHG_ACCS_NAME;
      WITH RECURSIVE BA AS(
        SELECT B1.ID, B1.PARENT_ID
        FROM   TABL$R_BUHG_ACCS B1
        WHERE  (B1.ID = :BUHG_ACCS_ID)
        UNION ALL
        SELECT B2.ID, B2.PARENT_ID
        FROM   TABL$R_BUHG_ACCS B2, BA B3
        WHERE  (B2.PARENT_ID = B3.ID)
      )
      SELECT COALESCE('~'||LIST(B.ID,'~')||'~', '')
      FROM   BA B  
      WHERE  EXISTS(
               SELECT FIRST 1 C.ID
               FROM   TABL$P_CND C
               WHERE  ( (C.ACC_ID_DEB=B.ID) OR (C.ACC_ID_KRED=B.ID) )
                 AND  (:FIRM_IDS CONTAINING '~'||C.FIRM_ID||'~')
             )
      INTO :BUHG_ACCS_IDS;
      IF(:BUHG_ACCS_IDS <> '')THEN
        BEGIN
        SELECT COALESCE(SUM(C1.CND_VALUE),0)
        FROM   TABL$P_CND C1
        WHERE  (C1.DATE_COMMIT < :DATE_FROM)
          AND  (C1.ACC_IDS_DEB CONTAINING '~'||:BUHG_ACCS_ID||'~')
          AND  (:FIRM_IDS      CONTAINING '~'||C1.FIRM_ID||'~')
        INTO   :P_DEBET;
        SELECT COALESCE(SUM(C2.CND_VALUE),0)
        FROM   TABL$P_CND C2
        WHERE  (C2.DATE_COMMIT < :DATE_FROM)
          AND  (C2.ACC_IDS_KRED CONTAINING '~'||:BUHG_ACCS_ID||'~')
          AND  (:FIRM_IDS       CONTAINING '~'||C2.FIRM_ID||'~')
        INTO   :P_KREDIT;
        SALDOBEGIN = :P_DEBET - :P_KREDIT;
        SELECT COALESCE(SUM(CK.CND_VALUE),0), COALESCE(COUNT(CK.ID),0)
        FROM   TABL$P_CND CK
        WHERE  (CK.DATE_COMMIT BETWEEN :DATE_FROM AND :DATE_TO)
          AND  (CK.ACC_IDS_DEB CONTAINING '~'||:BUHG_ACCS_ID||'~')
          AND  (:FIRM_IDS      CONTAINING '~'||CK.FIRM_ID||'~')
        INTO   :DEBET, :P_DEB_CNT;
        SELECT COALESCE(SUM(CD.CND_VALUE),0), COALESCE(COUNT(CD.ID),0)
        FROM   TABL$P_CND CD
        WHERE  (CD.DATE_COMMIT  BETWEEN :DATE_FROM AND :DATE_TO)
          AND  (CD.ACC_IDS_KRED CONTAINING '~'||:BUHG_ACCS_ID||'~')
          AND  (:FIRM_IDS       CONTAINING '~'||CD.FIRM_ID||'~')
        INTO   :KREDIT, :P_KRD_CNT;
        SALDOEND = :SALDOBEGIN + :DEBET - :KREDIT;
        IF(:SALDOBEGIN >= 0)THEN SALDOBEGINDEB = :SALDOBEGIN; ELSE SALDOBEGINKRD = ABS(:SALDOBEGIN);
        IF(:SALDOEND   >= 0)THEN SALDOENDDEB   = :SALDOEND  ; ELSE SALDOENDKRD   = ABS(:SALDOEND);
        END

      IF(  (:SALDOBEGINDEB <> 0) OR (:SALDOBEGINKRD <> 0)
         OR(:P_DEB_CNT     <> 0) OR (:P_KRD_CNT     <> 0)
         OR(:DEBET         <> 0) OR (:KREDIT        <> 0)
         OR(:SALDOENDDEB   <> 0) OR (:SALDOENDKRD   <> 0)
      )THEN
        BEGIN
        SUSPEND;
        IF(:Q_FLAG_FILIALS = 1)THEN
          FOR
            SELECT F.ID, F.NAME 
            FROM   TABL$R_FILIALS F
            ORDER BY F.ID
            INTO   :FILIAL_ID, :FILIAL_NAME
          DO  
            BEGIN
            IF(:Q_FLAG = 1)THEN
              BUHG_ACCS_NAMEPATH = '    '||:FILIAL_NAME;
             ELSE 
              BUHG_ACCS_NAMEPATH = :P_NAMEPATH||'    '||:FILIAL_NAME;
            SALDOBEGIN    = 0; DEBET = 0; KREDIT = 0; SALDOEND  = 0;
            SALDOBEGINDEB = 0; SALDOBEGINKRD = 0;
            SALDOENDDEB   = 0; SALDOENDKRD   = 0;
            P_DEBET       = 0; P_KREDIT      = 0;
            P_DEB_CNT     = 0; P_KRD_CNT     = 0;
            SELECT COALESCE(SUM(CK.CND_VALUE),0)
            FROM   TABL$P_CND CK
            WHERE  (CK.DATE_COMMIT BETWEEN :DATE_FROM AND :DATE_TO)
              AND  (CK.ACC_IDS_DEB CONTAINING '~'||:BUHG_ACCS_ID||'~')
              AND  (:FIRM_IDS      CONTAINING '~'||CK.FIRM_ID||'~')
              AND  ((CK.FILIAL_ID+0) = :FILIAL_ID)
            INTO   :DEBET;
            SELECT COALESCE(SUM(CD.CND_VALUE),0)
            FROM   TABL$P_CND CD
            WHERE  (CD.DATE_COMMIT  BETWEEN :DATE_FROM AND :DATE_TO)
              AND  (CD.ACC_IDS_KRED CONTAINING '~'||:BUHG_ACCS_ID||'~')
              AND  (:FIRM_IDS       CONTAINING '~'||CD.FIRM_ID||'~')
              AND  ((CD.FILIAL_ID+0) = :FILIAL_ID)
            INTO   :KREDIT;
            SUSPEND;
            END
          END
      END
    END
END
