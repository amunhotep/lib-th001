EXECUTE BLOCK(
  Q_DATE_FROM TYPE OF COLUMN TABL$J_4.DATE_COMMIT     = ?DATE_FROM
 ,Q_DATE_TO   TYPE OF COLUMN TABL$J_4.DATE_COMMIT     = ?DATE_TO
 ,Q_PAYSRC_ID TYPE OF COLUMN TABL$J_1000016.PAYSRC_ID = ?PAYSRC_ID
)RETURNS (
  DATE_FROM   TYPE OF COLUMN TABL$J_4.DATE_COMMIT
 ,DATE_TO     TYPE OF COLUMN TABL$J_4.DATE_COMMIT
 ,DATE_COMMIT TYPE OF COLUMN TABL$J_4.DATE_COMMIT
 ,PAYSRC_ID   TYPE OF COLUMN TABL$R_PAYSRC.ID
 ,PAYSRC_NAME TYPE OF COLUMN TABL$R_PAYSRC.NAME
 ,FIRM_ID     TYPE OF COLUMN TABL$R_PAYSRC.FIRM_ID
 ,FILIAL_ID   TYPE OF COLUMN TABL$R_PAYSRC.FILIAL_ID
 ,SALDOBEG    TYPE OF COLUMN TABL$J_4.DOCSUM
 ,DEBET       TYPE OF COLUMN TABL$J_4.DOCSUM
 ,KREDIT      TYPE OF COLUMN TABL$J_4.DOCSUM
 ,SALDOEND    TYPE OF COLUMN TABL$J_4.DOCSUM
)AS
BEGIN
  DATE_FROM  = :Q_DATE_FROM;
  DATE_TO    = :Q_DATE_TO;
  PAYSRC_ID  = :Q_PAYSRC_ID; 
  SELECT FIRST 1 C.NAME, C.FIRM_ID, C.FILIAL_ID
  FROM   TABL$R_PAYSRC C
  WHERE  (C.ID = :PAYSRC_ID)
  INTO   :PAYSRC_NAME, :FIRM_ID, :FILIAL_ID;
  SALDOBEG = 0;
  DEBET    = 0;
  KREDIT   = 0;
  SALDOEND = 0;
  SELECT COALESCE(SUM(P.PAYSRC_VALUE),0)
  FROM   TABL$P_PAYSRC_MOVE P
  WHERE  (P.DATE_COMMIT < :DATE_FROM)
    AND  (P.PAYSRC_ID = :PAYSRC_ID)
    AND  (P.FLAG_DEBET = 1)
  INTO   :DEBET;
  SELECT COALESCE(SUM(P.PAYSRC_VALUE),0)
  FROM   TABL$P_PAYSRC_MOVE P
  WHERE  (P.DATE_COMMIT < :DATE_FROM)
    AND  (P.PAYSRC_ID = :PAYSRC_ID)
    AND  (P.FLAG_DEBET = 0)
  INTO   :KREDIT;
  SALDOBEG = :DEBET - :KREDIT;
  DATE_COMMIT = :DATE_FROM;
  WHILE(:DATE_COMMIT < :DATE_TO)DO
    BEGIN
    SELECT COALESCE(SUM(P.PAYSRC_VALUE),0)
    FROM   TABL$P_PAYSRC_MOVE P
    WHERE  (P.DATE_COMMIT BETWEEN :DATE_COMMIT AND DATEADD(1 DAY TO :DATE_COMMIT))
      AND  (P.PAYSRC_ID = :PAYSRC_ID)
      AND  (P.FLAG_DEBET = 1)
    INTO   :DEBET;
    SELECT COALESCE(SUM(P.PAYSRC_VALUE),0)
    FROM   TABL$P_PAYSRC_MOVE P
    WHERE  (P.DATE_COMMIT BETWEEN :DATE_COMMIT AND DATEADD(1 DAY TO :DATE_COMMIT))
      AND  (P.PAYSRC_ID = :PAYSRC_ID)
      AND  (P.FLAG_DEBET = 0)
    INTO   :KREDIT;
    SALDOEND = :SALDOBEG + :DEBET - :KREDIT;
    SUSPEND;
    DATE_COMMIT = DATEADD(1 DAY TO :DATE_COMMIT);
    SALDOBEG = :SALDOEND;
    SALDOEND = 0;
    END
END
