EXECUTE BLOCK (
   Q_FIRM_IDS              TYPE OF COLUMN TABL$J_4.DOCSTR      = ?FIRM_IDS
  ,Q_PLACE_IDS             TYPE OF COLUMN TABL$J_4.DOCSTR      = ?PLACES_IDS
  ,Q_DATE                  TYPE OF COLUMN TABL$J_4.DATE_COMMIT = ?DATE_FROM
  ,Q_CHECK_IN_FILIAL       TYPE OF COLUMN TABL$J_4.FLAG_COMMIT = ?CHECK_IN_FILIAL
  ,Q_FILIAL_DATABASE       TYPE OF COLUMN TABL$J_4.NAME        = ?FILIAL_DATABASE
)RETURNS (
   DATE_RPT                TYPE OF COLUMN TABL$J_4.DATE_COMMIT
  ,FLAG_DIFF              TYPE OF COLUMN TABL$J_4.FLAG_COMMIT  
  ,FIRM_IDS                TYPE OF COLUMN TABL$J_4.DOCSTR
  ,PLACE_IDS               TYPE OF COLUMN TABL$J_4.DOCSTR
  ,FIRM_ID                 TYPE OF COLUMN TABL$R_FIRMS.ID
  ,FIRM_NAME               TYPE OF COLUMN TABL$R_FIRMS.NAME
  ,PLACE_ID                TYPE OF COLUMN TABL$R_PLACES.ID
  ,PLACE_NAME              TYPE OF COLUMN TABL$R_PLACES.NAME
  ,PLACE_ACC_ID            TYPE OF COLUMN TABL$R_PLACES.ACC_ID
  ,TMC_GROUP_ID            TYPE OF COLUMN TABL$R_TMC_GROUP.ID
  ,TMC_GROUP_NAME          TYPE OF COLUMN TABL$R_TMC_GROUP.NAME
  ,TMC_ID                  TYPE OF COLUMN TABL$R_TMC.ID
  ,TMC_NAME                TYPE OF COLUMN TABL$R_TMC.NAME
  ,TMC_ARTICLE             TYPE OF COLUMN TABL$R_TMC.ARTICLE
  ,TMC_BARCODE             TYPE OF COLUMN TABL$R_TMC.BARCODE
  ,TMC_COMENT              TYPE OF COLUMN TABL$R_TMC.COMENT
  ,COUNTRY_ID              TYPE OF COLUMN TABL$R_TMC.COUNTRY_ID
  ,VALUTE                  TYPE OF COLUMN TABL$R_COUNTRIES.VALUTE
  ,TMC_PROBE               TYPE OF COLUMN TABL$R_TMC.PROBE
  ,TMC_MASSA               TYPE OF COLUMN TABL$R_TMC.MASSA
  ,TMC_MASSA_INS           TYPE OF COLUMN TABL$R_TMC.MASSA
  ,TMC_MASSA_NETTO         TYPE OF COLUMN TABL$R_TMC.MASSA_NETTO
  ,TMC_MASSA_              TYPE OF COLUMN TABL$R_TMC.MASSA
  ,TMC_MASSA_INS_          TYPE OF COLUMN TABL$R_TMC.MASSA
  ,TMC_MASSA_NETTO_        TYPE OF COLUMN TABL$R_TMC.MASSA_NETTO
  ,TMC_LGTH                TYPE OF COLUMN TABL$R_TMC.LGTH
  ,TMC_DIAM                TYPE OF COLUMN TABL$R_TMC.DIAM
  ,TMC_VALUE_DATE          TYPE OF COLUMN TABL$R_TMC.VALUE_DATE
  ,PRICE                   TYPE OF COLUMN TABL$P_TMC_QUANT.QUANT
  ,QUANT                   TYPE OF COLUMN TABL$P_TMC_QUANT.QUANT
  ,QUANT_EXTERNAL          TYPE OF COLUMN TABL$P_TMC_QUANT.QUANT
  ,TOTAL                   TYPE OF COLUMN TABL$P_TMC_QUANT.QUANT
)
AS
  DECLARE VARIABLE P_I                 TYPE OF COLUMN TABL$R_TMC.ID;
BEGIN
  DATE_RPT  = :Q_DATE;
  FIRM_IDS  = :Q_FIRM_IDS;
  PLACE_IDS = :Q_PLACE_IDS;
  FLAG_DIFF = 0;
  FOR
    SELECT Q.FIRM_ID, Q.PLACE_ID, Q.COUNTRY_ID, Q.PROBE, Q.TMC_ID, SUM(Q.QUANT)
    FROM   (SELECT  TQ1.FIRM_ID, TQ1.PLACE_ID, TQ1.TMC_ID, TMC.COUNTRY_ID, TMC.PROBE, TQ1.QUANT
            FROM    TABL$P_TMC_QUANT TQ1, TABL$R_TMC TMC
            WHERE  (:FIRM_IDS  CONTAINING '~'||TQ1.FIRM_ID ||'~')
              AND  (:PLACE_IDS CONTAINING '~'||TQ1.PLACE_ID||'~')
              AND  (TMC.ID = TQ1.TMC_ID)
            UNION ALL  -- DEBET
            SELECT  TQD.FIRM_ID, TQD.PLACE_ID, TQD.TMC_ID, TMC.COUNTRY_ID, TMC.PROBE, ((-1) * TQD.QUANT) AS QUANT
            FROM    TABL$P_TMC_QUANT_MOVE TQD, TABL$R_TMC TMC
            WHERE  (:FIRM_IDS  CONTAINING '~'||TQD.FIRM_ID ||'~')
              AND  (:PLACE_IDS CONTAINING '~'||TQD.PLACE_ID||'~')
              AND  (TQD.FLAG_DEBET = 1)
              AND  (TQD.DATE_COMMIT >= :DATE_RPT)
              AND  (TMC.ID = TQD.TMC_ID)
            UNION ALL  -- KREDIT
            SELECT TQK.FIRM_ID, TQK.PLACE_ID, TQK.TMC_ID, TMC.COUNTRY_ID, TMC.PROBE, TQK.QUANT
            FROM    TABL$P_TMC_QUANT_MOVE TQK, TABL$R_TMC TMC
            WHERE  (:FIRM_IDS  CONTAINING '~'||TQK.FIRM_ID ||'~')
              AND  (:PLACE_IDS CONTAINING '~'||TQK.PLACE_ID||'~')
              AND  (TQK.FLAG_DEBET = 0)
              AND  (TQK.DATE_COMMIT >= :DATE_RPT)
              AND  (TMC.ID = TQK.TMC_ID)
            )Q
    GROUP BY Q.FIRM_ID, Q.PLACE_ID, Q.COUNTRY_ID, Q.PROBE, Q.TMC_ID
    INTO    :FIRM_ID, :PLACE_ID, :COUNTRY_ID, :TMC_PROBE, :TMC_ID, :QUANT
  DO
  IF(:QUANT <> 0)THEN
    BEGIN
    SELECT FIRST 1 F.NAME           FROM TABL$R_FIRMS  F WHERE(F.ID = :FIRM_ID )INTO :FIRM_NAME;
    SELECT FIRST 1 P.NAME, P.ACC_ID FROM TABL$R_PLACES P WHERE(P.ID = :PLACE_ID)INTO :PLACE_NAME, :PLACE_ACC_ID;

    SELECT FIRST 1 TMC.NAME, TMC.ARTICLE, TMC.BARCODE, TMC.COUNTRY_ID, TMC.PROBE
          ,(SELECT FIRST 1 C.VALUTE FROM TABL$R_COUNTRIES C WHERE (C.ID = TMC.COUNTRY_ID)) AS VALUTE
          ,TMC.MASSA, (TMC.MASSA - TMC.MASSA_NETTO) AS MASSA_INS, TMC.MASSA_NETTO
          ,TMC.LGTH, TMC.DIAM, TMC.TMC_GROUP_ID, TG.NAME AS TMC_GROUP_NAME
          ,TMC.COMENT
    FROM   TABL$R_TMC TMC, TABL$R_TMC_GROUP TG
    WHERE  (TMC.ID = :TMC_ID)
      AND  (TG.ID = TMC.TMC_GROUP_ID)
    INTO   :TMC_NAME, :TMC_ARTICLE, :TMC_BARCODE, :COUNTRY_ID, :TMC_PROBE, :VALUTE
          ,:TMC_MASSA, :TMC_MASSA_INS, :TMC_MASSA_NETTO, :TMC_LGTH, :TMC_DIAM
          ,:TMC_GROUP_ID, :TMC_GROUP_NAME
          ,:TMC_COMENT;
    TMC_MASSA_       = :TMC_MASSA       * :QUANT;
    TMC_MASSA_INS_   = :TMC_MASSA_INS   * :QUANT;
    TMC_MASSA_NETTO_ = :TMC_MASSA_NETTO * :QUANT;
    PRICE        = 0;
    SELECT MAX(P.VALUE_DATE)
    FROM   TABL$R_TMC_P P
    WHERE  (P.TMC_ID = :TMC_ID)
      AND  (P.VALUE_DATE <= :DATE_RPT)
    INTO   :TMC_VALUE_DATE;
    IF(:TMC_VALUE_DATE IS NULL)THEN
      BEGIN
      SELECT FIRST 1 PR.PRICE, PR.VALUE_DATE
      FROM   TABL$R_TMC_P PR, TABL$R_TMC TMC
      WHERE  (TMC.ID        = :TMC_ID)
        AND  (PR.TMC_ID     = TMC.ID)
        AND  (PR.VALUE_DATE = TMC.VALUE_DATE)
      INTO   :PRICE, :TMC_VALUE_DATE; IF(:PRICE IS NULL)THEN PRICE = 0;
      END
     ELSE
      BEGIN
      SELECT FIRST 1 P.PRICE
      FROM   TABL$R_TMC_P P
      WHERE  (P.TMC_ID = :TMC_ID)
        AND  (P.VALUE_DATE = :TMC_VALUE_DATE)
      INTO   :PRICE;
      END
    TOTAL = :PRICE * :QUANT;
    SUSPEND;
/*
    P_I = 0;
    WHILE(:P_I < :QUANT)DO
      BEGIN
      SUSPEND;
      P_I = :P_I + 1;
      END
*/
    END
END
