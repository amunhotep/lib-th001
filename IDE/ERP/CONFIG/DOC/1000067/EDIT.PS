{$IFNDEF PEAKTOP:GLOBAL_VARIABLES.INC}{$I PEAKTOP:GLOBAL_VARIABLES.INC}{$ENDIF}
{$IFNDEF PEAKTOP:OBJ/TCOLUMNEH.INC}   {$I PEAKTOP:OBJ/TCOLUMNEH.INC}   {$ENDIF}
{$IFNDEF PEAKTOP:OBJ/TIMAGELIST.INC}  {$I PEAKTOP:OBJ/TIMAGELIST.INC}  {$ENDIF}
{$IFNDEF PEAKTOP:OBJ/TACTION.INC}     {$I PEAKTOP:OBJ/TACTION.INC}     {$ENDIF}
{$IFNDEF DB:CONFIG/OPER/GET_PIN.INC}
  {$I DB:CONFIG/OPER/GET_PIN.INC}
{$ENDIF}
const
  msg_invalid_resource  = 'Неверный файл ресурсов'; 
  msg_caption           = 'Акт принятия на хранение'; 
  msg_actsave           = 'Сохранить'; 
  msg_actsave_hint      = 'Сохранить изменения в документе'; 
  msg_actprint          = 'Печать'; 
  msg_actprint_hint     = 'Предварительный просмотр печати документа'; 
  msg_actcommit         = 'Провести'; 
  msg_actcommit_hint    = 'Провести документ'; 
  msg_actuncommit       = 'Отменить'; 
  msg_actuncommit_hint  = 'Отменить проведение документа'; 
  msg_actpodbor         = 'Подбор'; 
  msg_actpodbor_hint    = 'Добавить ТМЦ'; 
  msg_actpodbor2         = 'Группа ТМЦ'; 
  msg_actpodbor_hint2    = 'Добавить группу ТМЦ'; 
var 
  docId                 :string;
  AmunhotepForm         :TAmunhotepForm; 
  TopBar                :TxcGradientPanelVista; 
  ToolBar               :TxcGradientPanel; 
  PanelClient           :TxcGradientPanel;
  PanlelDoc             :TxcPanel;
  dbeCS_NAME            :TDBEditEh; 
  dbeNAME               :TDBEditEh; 
  dbeFILIAL_NAME        :TDBEditEh; 
  dbeUSER_NAME          :TDBEditEh; 
  dbdtpDATE_COMMIT      :TDBDateTimeEditEh; 
  dbeCS_ADDR_NAME       :TDBEditEh; 
  dbePLACE_NAME         :TDBEditEh; 
  dbeTO_PLACE_NAME      :TDBEditEh; 
  dbeWRK_NAME           :TDBEditEh; 
  dbgDoc                :TDBGridEh; 
  trJournal             :TxFBTransaction; 
  dtsJournal            :TxFBDataSet; 
  dtsDoc                :TxFBDataSet; 
  
  DSdtsJournal          :TDataSource; 
  DSdtsDoc              :TDataSource; 
  //============================================================================
  procedure CloseDataSets;
  begin
    if(dtsJournal.State = dsEdit)then
      try
        dtsJournal.Post;
      except
        dtsJournal.Cancel;
      end;
    if trJournal.InTransaction then 
      trJournal.Commit; 
  end;
  //============================================================================
  procedure RefreshView;
  begin
    CloseDataSets;
    dtsJournal.SelectSQL.Text  := 'SELECT * FROM PROC$D_1000014('''+DocId+''') ';
    dtsJournal.RefreshSQL.Text := 'SELECT * FROM PROC$D_1000014(?ID) ';
    dtsJournal.ModifySQL.Text := 
      'EXECUTE BLOCK ( '+#13#10+
      '  QID           DOMN$PSTRING  = ?ID '+#13#10+
      ' ,QNAME         DOMN$PSTRING  = ?NAME '+#13#10+
      ' ,QDATE_COMMIT  DOMN$DATETIME = ?DATE_COMMIT '+#13#10+
      ')AS'+#13#10+
      'BEGIN '+#13#10+
      '  UPDATE TABL$J_4 J SET '+#13#10+
      '     J.NAME = :QNAME '+#13#10+
      '    ,J.DATE_COMMIT = :QDATE_COMMIT '+#13#10+
      '  WHERE (J.ID = :QID); '+#13#10+
      '  '+#13#10+
      '  UPDATE TABL$J_1000014 JB1 SET '+#13#10+
      '    JB1.WRK_ID      = 0 '+#13#10+
      '   ,JB1.TMC_GRID_ID = 0 '+#13#10+
      '  WHERE (JB1.J_ID = :QID); '+#13#10+
      'END ';
    dtsDoc.DataSource := DSdtsJournal; 
    dtsDoc.SelectSQL.Text := 
      'SELECT DB.ID, DB.J_ID, DB.TMC_ID, TMC.TMC_LIST_ID, TMC.NAME AS TMC_NAME, TMC.ARTICLE AS TMC_ARTICLE, '+#13#10+
      '       TMC.EDIZM_ID AS EDIZM_ID, DB.QUANT, DB.PRICE, (DB.QUANT * DB.PRICE) AS TOTAL, DB.J_BILLS_ID '+#13#10+
      '       ,(SELECT FIRST 1 E.SHORT_NAME FROM TABL$R_EDIZM E WHERE (E.ID = TMC.EDIZM_ID)) AS EDIZM_SNAME '+#13#10+
      'FROM   TABL$D_1000014 DB, TABL$R_TMC TMC '+#13#10+
      'WHERE  (DB.J_ID = ?ID) '+#13#10+
      '  AND  (TMC.ID = DB.TMC_ID) ';    
    dtsDoc.RefreshSQL.Text := 
      'SELECT FIRST 1 DB.ID, DB.J_ID, DB.TMC_ID, TMC.TMC_LIST_ID, TMC.NAME AS TMC_NAME, TMC.ARTICLE AS TMC_ARTICLE, '+#13#10+
      '       TMC.EDIZM_ID AS EDIZM_ID, DB.QUANT, DB.PRICE, (DB.QUANT * DB.PRICE) AS TOTAL, DB.J_BILLS_ID '+#13#10+
      '       ,(SELECT FIRST 1 E.SHORT_NAME FROM TABL$R_EDIZM E WHERE (E.ID = TMC.EDIZM_ID)) AS EDIZM_SNAME '+#13#10+
      'FROM   TABL$D_1000014 DB, TABL$R_TMC TMC '+#13#10+
      'WHERE  (DB.ID = ?ID) '+#13#10+
      '  AND  (TMC.ID = DB.TMC_ID) ';    
    dtsDoc.ModifySQL.Text := 
      'UPDATE TABL$D_1000014 DB SET '+#13#10+
      '   DB.TMC_ID     = ?TMC_ID '+#13#10
      '  ,DB.QUANT      = ?QUANT '+#13#10+
      '  ,DB.PRICE      = ?PRICE '+#13#10+
      '  ,DB.J_BILLS_ID = ?J_BILLS_ID '+#13#10+
      'WHERE  (DB.ID = ?ID) ';    
    dtsDoc.DeleteSQL.Text := 'DELETE FROM TABL$D_1000014 B WHERE (B.ID = ?ID) '; 
    try 
      dtsJournal.Open; 
    except 
      // Dialogs.MessageDlg(dtsJournal.SelectSQL.Text, mtError, [mbOk]);
    end; 
  end;
  //============================================================================
  procedure dbgDoc_OnGetCellParams(Sender: TObject; Column: TColumnEh; 
              AFont: TFont; var Background: TColor; State: TGridDrawState);
  begin
   if(Column.Tag=666)then exit;
   if(not(Column.Field.DataSet.Active)or(Column.Field.DataSet.RecordCount=0))then exit;
   //if    (Column.Field.DataSet.FieldByName('FLAG_COMMIT').AsInteger=0)then aFont.Style:= aFont.Style + [fsBold     ];
   //Background := Column.Field.DataSet.FieldByName('COLOR_BGR').AsInteger;
   //aFont.Color:= Column.Field.DataSet.FieldByName('COLOR_FRG').AsInteger;
   if(Background=clWhite)then Background := Amunhotep_MainForm_StyleManager.Colors.Window;
   if(aFont.Color=Background)then aFont.Color := Amunhotep_MainForm_StyleManager.Colors.Border;
  end;
  //============================================================================
  procedure dtsJournal_AfterOpen(DataSet :TDataSet);
  begin
    dbeTO_PLACE_NAME.Visible :=    (DataSet.FieldByName('TYPE_ID').AsInteger = 1000024);  
    dbeCS_NAME.Visible       :=    (DataSet.FieldByName('TYPE_ID').AsInteger = 1000026) 
                                or (DataSet.FieldByName('TYPE_ID').AsInteger = 1000028)   
                                or (DataSet.FieldByName('TYPE_ID').AsInteger = 1000064)   
                                or (DataSet.FieldByName('TYPE_ID').AsInteger = 1000065);   
    dbeCS_ADDR_NAME.Visible  :=    (DataSet.FieldByName('TYPE_ID').AsInteger = 1000028)   
                                or (DataSet.FieldByName('TYPE_ID').AsInteger = 1000064)   
                                or (DataSet.FieldByName('TYPE_ID').AsInteger = 1000065);
    dbeWRK_NAME.Visible      :=    (DataSet.FieldByName('TYPE_ID').AsInteger = 1000028);
    if not dtsDoc.Active then
      try
        dtsDoc.Open;
      except
      end;
  end;
  //============================================================================
  procedure dtsJournal_BeforeClose(DataSet :TDataSet);
  begin
    if dtsDoc.Active then
      begin
      if(dtsDoc.State = dsEdit)then
        try
          dtsDoc.Post;
        except
          dtsDoc.Cancel;
        end;
      dtsDoc.Close;  
      end;  
  end;
  //============================================================================
  procedure dtsJournal_AfterScroll(DataSet :TDataSet);
  begin
    AmunhotepForm.Caption := DataSet.FieldByName('DOCNUMBERSTR').AsString;
    AmunhotepForm.SetCaption(AmunhotepForm.Caption);
    TopBar.Caption := '     '+DataSet.FieldByName('TYPE_NAME').AsString+' '+AmunhotepForm.Caption;
    if(DataSet.FieldByName('FLAG_COMMIT').AsInteger = 1)then
      begin
      PanelClient.Enabled := false;
      PanlelDoc.Enabled   := false;
      end
     else
      begin
      PanelClient.Enabled := true;
      PanlelDoc.Enabled   := true;
      end; 
  end;
  //============================================================================
  procedure actSave_OnExecute(Sender :TObject);
  begin
    RefreshView;
  end;
  //============================================================================
  procedure actPrint_OnExecute(Sender :TObject);
  var
    lkScName:string;
  begin
    if not dtsJournal.Active then exit;
    if(not(dtsJournal.RecordCount>0))then exit;
    lkScName := StrAbsolutePath('../'+dtsJournal.FieldByName('TYPE_ID').AsString+'/PRINT.PS', ScriptName);
    SetGlobalVariable('J_ID', dtsJournal.FieldByName('ID').AsString);
    if not call(lkScName)then
      Dialogs.MessageDlg('Ошибка в вызове скрипта '+#13#10+lkScName, mtError, [mbOk]);
  end;
  //============================================================================
  procedure actCommit_OnExecute(Sender :TObject);
  begin
    if not(Dialogs.MessageDlg('Провести документ ?', mtConfirmation, [mbYes, mbNo])=mrYes)then exit;
    CloseDataSets;
    ExecSQL(FBDataBase, 'UPDATE TABL$J_4 J SET J.FLAG_COMMIT = 1 WHERE (J.ID = '''+DocId+''')');
    RefreshView;
  end;
  //============================================================================
  procedure actCommit_OnUpdate(Sender :TObject);
  var
    lk_Enabled :Boolean;
  begin
    lk_Enabled := dtsJournal.Active;
    if(lk_Enabled)then lk_Enabled := (dtsJournal.RecordCount>0);
    if(lk_Enabled)then lk_Enabled := (dtsJournal.FieldByName('FLAG_COMMIT').AsInteger = 0);
    TCustomAction(Sender).Enabled := lk_Enabled;
  end;
  //============================================================================
  procedure actUnCommit_OnExecute(Sender :TObject);
  var
    lkPIN :string;
    lkPIN2:string;
    lkPUK :string;
  begin
    if not System_UserHasAdminRights then
      begin
      lkPIN := FormatFloat('0000', Trunc(Random() * 9999));
      lkPUK := System_GetPinCode(lkPIN);
      lkPIN2:= '';
      if Dialogs.InputQuery('Отмена проведения документа', 'Введите PIN код для числа "'+lkPIN+'"', lkPIN2)then
        begin
        if(lkPIN2 <> lkPUK)then
          begin
          Dialogs.MessageDlg('Неверно введен PIN-код !', mtWarning, [mbOk]);
          exit;
          end;
        end
       else
        exit;   
      end; 
    if not(Dialogs.MessageDlg('Отменить проводку документа ?', mtConfirmation, [mbYes, mbNo])=mrYes)then exit;
    CloseDataSets;
    ExecSQL(FBDataBase, 'UPDATE TABL$J_4 J SET J.FLAG_COMMIT = 0 WHERE (J.ID = '''+DocId+''')');
    RefreshView;
  end;
  //============================================================================
  procedure actUnCommit_OnUpdate(Sender :TObject);
  var
    lk_Enabled :Boolean;
  begin
    lk_Enabled := dtsJournal.Active;
    if(lk_Enabled)then lk_Enabled := (dtsJournal.RecordCount>0);
    if(lk_Enabled)then lk_Enabled := (dtsJournal.FieldByName('FLAG_COMMIT').AsInteger = 1);
    TCustomAction(Sender).Enabled := lk_Enabled;
  end;
  //============================================================================
  procedure actPodbor_OnExecute(Sender :TObject);
  var
    lkTMC_ID :string;
    lkSQL    :string;
  begin
    lkTMC_ID := '0';
    SetGlobalVariable('TMC_ID', lkTMC_ID);
    call(StrAbsolutePath('../../../REF/TMC/DEFAULT_DLG.PS', ScriptName));
    lkTMC_ID := GetGlobalVariable('TMC_ID');
    if((UpperCase(lkTMC_ID)<>'NULL')and(lkTMC_ID <> '0'))then
      begin
      lkSQL := 'INSERT INTO TABL$D_1000014(J_ID, TMC_ID, QUANT)VALUES('''+
        dtsJournal.FieldByName('ID').AsString+''', '''+lkTMC_ID+''', 0.000)';
      CloseDataSets;
      ExecSQL(dtsJournal.DataBase, lkSQL);
      RefreshView;
      end;
  end;
  //============================================================================
  procedure actPodborGroup_OnExecute(Sender :TObject);
  var
    lkTMC_GROUP_ID :string;
    lkSQL          :string;
  begin
    lkTMC_GROUP_ID := '0';
    SetGlobalVariable('TMC_GROUP_ID', lkTMC_GROUP_ID);
    call(StrAbsolutePath('../../../REF/TMC_GROUP/DEFAULT_DLG.PS', ScriptName));
    lkTMC_GROUP_ID := GetGlobalVariable('TMC_GROUP_ID');
    if((UpperCase(lkTMC_GROUP_ID)<>'NULL')and(lkTMC_GROUP_ID <> '0'))then
      begin
      lkSQL := 
        'EXECUTE BLOCK AS '+#13#10+
        '  DECLARE VARIABLE P_TMC_ID DOMN$INTEGER; '+#13#10+
        'BEGIN '+#13#10+
        '  FOR SELECT T.ID FROM TABL$R_TMC T WHERE (T.TMC_GROUP_ID = '''+lkTMC_GROUP_ID+''') INTO :P_TMC_ID DO '+#13#10+
        '    INSERT INTO TABL$D_BILLS(J_ID, TMC_ID, QUANT)VALUES('''+
        dtsJournal.FieldByName('ID').AsString+''', :P_TMC_ID, 0.000);'+#13#10+
        'END';
      CloseDataSets;
      ExecSQL(dtsJournal.DataBase, lkSQL);
      RefreshView;
      end;
  end;
  //============================================================================
  procedure edtCS_ADDR_NAME_OnClick(Sender :TObject; var Handled : Boolean);
  var
    temp_id:Integer;
    sql    :string;
  begin
    Handled := true;
    if not dtsJournal.Active then exit;
    temp_id := 0;
    {
    if CaseReferenceId('Выбирите адрес доставки','0', sql, true, temp_id) then
      begin
      sql := 
        'UPDATE TABL$J_BILLS JRNL SET '+#13#10+
        '  JRNL.CS_ADDR_ID = '''+IntToStr(temp_id)+''' '+#13#10+
        'WHERE (JRNL.JOURNAL_ID ='''+DocId+''') ';
      ExecSQL(FBDataBase, sql);
      RefreshView;
      end;
    }
  end;
  //============================================================================
  procedure edtPLACE_NAME_OnClick(Sender :TObject; var Handled : Boolean);
  var
    temp_id:string;
    sql    :string;
  begin
    Handled := true;
    if not dtsJournal.Active then exit;
    temp_id := dtsJournal.FieldByName('PLACE_ID').AsString;
    SetGlobalVariable('PLACE_ID', temp_id);
    call('DB:CONFIG/REF/PLACES/DEFAULT_DLG.PS');
    temp_id := GetGlobalVariable('PLACE_ID');
    if(not((StrTrimAll(temp_id)='0')or(UpperCase(temp_id)='NULL')))then
      begin
      sql := 
        'UPDATE TABL$J_1000014 JRNL SET '+#13#10+
        '  JRNL.PLACE_ID = '''+temp_id+''' '+#13#10+
        'WHERE (JRNL.J_ID ='''+dtsJournal.FieldByName('ID').AsString+''') ';
      ExecSQL(FBDataBase, sql);
      RefreshView;
      end;
  end;
  //============================================================================
  procedure edtTO_PLACE_NAME_OnClick(Sender :TObject; var Handled : Boolean);
  var
    temp_id:string;
    sql    :string;
  begin
    Handled := true;
    if not dtsJournal.Active then exit;
    temp_id := dtsJournal.FieldByName('TO_PLACE_ID').AsString;
    SetGlobalVariable('PLACE_ID', temp_id);
    call('DB:CONFIG/REF/PLACES/DEFAULT_DLG.PS');
    temp_id := GetGlobalVariable('PLACE_ID');
    if(not((StrTrimAll(temp_id)='0')or(UpperCase(temp_id)='NULL')))then
      begin
      sql := 
        'UPDATE TABL$J_1000014 JRNL SET '+#13#10+
        '  JRNL.TO_PLACE_ID = '''+temp_id+''' '+#13#10+
        'WHERE (JRNL.J_ID ='''+dtsJournal.FieldByName('ID').AsString+''') ';
      ExecSQL(FBDataBase, sql);
      RefreshView;
      end;
  end;
  //============================================================================
  procedure dbeWRK_NAME_OnClick(Sender :TObject; var Handled : Boolean);
  var
    TempId :string;
    sql    :string;
  begin
    Handled := true;
    if not dtsJournal.Active then exit;
    TempId := dtsJournal.FieldByName('WRK_ID').AsString;
    SetGlobalVariable('WRK_ID', TempId);
    call(StrAbsolutePath('../../REF/WRK/DEFAULT_DLG.PS', ScriptName));
    TempId := GetGlobalVariable('WRK_ID');
    if(not((StrTrimAll(TempId)='0')or(UpperCase(TempId)='NULL')))then
      begin
      sql := 
        'UPDATE TABL$J_1000014 JRNL SET '+#13#10+
        '  JRNL.WRK_ID = '''+TempId+''' '+#13#10+
        'WHERE (JRNL.J_ID ='''+DocId+''') ';
      ExecSQL(FBDataBase, sql);
      RefreshView;
      end;
  end;
  //============================================================================
  procedure dbeUSER_ID_OnClick(Sender :TObject; var Handled : Boolean);
  var
    TempId :string;
    sql    :string;
  begin
    Handled := true;
    if not dtsJournal.Active then exit;
    TempId := dtsJournal.FieldByName('USER_ID').AsString;
    SetGlobalVariable('USER_ID', TempId);
    call('DB:CONFIG/IDE/POLICE/USERS_DLG.PS');
    TempId := GetGlobalVariable('USER_ID');
    if(not((StrTrimAll(TempId)='')or(UpperCase(TempId)='NULL')))then
      begin
      sql := 'UPDATE TABL$J_4 JRNL SET JRNL.USER_ID = '''+TempId+''' WHERE (JRNL.ID ='''+DocId+''') ';
      ExecSQL(FBDataBase, sql);
      RefreshView;
      end;
  end;
  //==========================================================================
  procedure dbeCS_NAME_OnClick(Sender :TObject; var Handled : Boolean);
  var
    TempId:string;
    sql    :string;
  begin
    Handled := true;
    if not dtsJournal.Active then exit;
    TempId := dtsJournal.FieldByName('CS_ID').AsString;
    SetGlobalVariable('CS_ID', TempId);
    call('DB:CONFIG/REF/CS/DEFAULT_DLG.PS');
    TempId := GetGlobalVariable('CS_ID');
    if((StrTrimAll(TempId)='')or(AnsiUpperCase(TempId)='NULL'))then exit;
    sql := 
      'UPDATE TABL$J_1000014 JRNL SET '+#13#10+
      '  JRNL.CS_ID = '''+TempId+''' '+#13#10+
      'WHERE (JRNL.J_ID ='''+DocId+''') ';
    ExecSQL(FBDataBase, sql);
    RefreshView;
  end;
  //============================================================================
  function AmunhotepForm_Create:TAmunhotepForm;
  var
    lk_FileName :string;
    lk_ResBody  :string;
    lk_act      :TAction;
    lklbl       :TLabel;
    lk_Col      :TColumnEh;
    lk_Btn      :TEditButtonEh;
  begin
    lk_FileName := StrAbsolutePath('./EDIT.XFM', ScriptName);
    lk_ResBody := StringsLoadFromFile(lk_FileName);
    if(lk_ResBody='')then 
      begin
      Dialogs.MessageDlg(msg_invalid_resource+#13#10+lk_FileName, mtWarning, [mbOK]);
      exit;
      end;
    Result          := TAmunhotepForm(StrToComponent(lk_ResBody));
    DontAutoFree;
    Result.SetCaption(msg_caption);
    TopBar                                    := TxcGradientPanelVista(Result.FindComponent('TopBar'));
    ToolBar                                   := TxcGradientPanel(Result.FindComponent('ToolBar'));
    PanelClient                               := TxcGradientPanel(Result.FindComponent('PanelClient'));
    PanlelDoc                                 := TxcPanel(Result.FindComponent('PanlelDoc'));
    lklbl := TLabel(Result.FindComponent('lblCS_NAME')); lklbl.Caption := 'Контрагент';
    dbeCS_NAME                        := TDBEditEh(Result.FindComponent('dbeCS_NAME'));
    dbeCS_NAME.Color                  := Amunhotep.MainForm.StyleManager.Colors.Foreground;
    dbeCS_NAME.Font.Color             := Amunhotep.MainForm.StyleManager.Colors.Border;
    dbeCS_NAME.ReadOnly               := true;
      lk_Btn         := dbeCS_NAME.EditButtons.Add;
      lk_Btn.Visible := true;
      lk_Btn.Style   := ebsEllipsisEh;
      lk_Btn.OnClick := @dbeCS_NAME_OnClick;
    dbeNAME                                   := TDBEditEh(Result.FindComponent('dbeNAME'));
    dbeNAME.Color                             := Amunhotep.MainForm.StyleManager.Colors.Window;
    dbeNAME.Font.Color                        := Amunhotep.MainForm.StyleManager.Colors.Border;
    dbdtpDATE_COMMIT                          := TDBDateTimeEditEh(Result.FindComponent('dbdtpDATE_COMMIT'));
    dbdtpDATE_COMMIT.Color                    := Amunhotep.MainForm.StyleManager.Colors.Window;
    dbdtpDATE_COMMIT.Font.Color               := Amunhotep.MainForm.StyleManager.Colors.Border;
    dbeCS_ADDR_NAME                     := TDBEditEh(Result.FindComponent('dbeCS_ADDR_NAME'));
    dbeCS_ADDR_NAME.Color               := Amunhotep.MainForm.StyleManager.Colors.Foreground;
    dbeCS_ADDR_NAME.Font.Color          := Amunhotep.MainForm.StyleManager.Colors.Border;
    dbeCS_ADDR_NAME.ReadOnly            := true;
      lk_Btn         := dbeCS_ADDR_NAME.EditButtons.Add;
      lk_Btn.Visible := true;
      lk_Btn.Style   := ebsEllipsisEh;
      lk_Btn.OnClick := @edtCS_ADDR_NAME_OnClick;
    dbePLACE_NAME                         := TDBEditEh(Result.FindComponent('dbePLACE_NAME'));
    dbePLACE_NAME.Color                   := Amunhotep.MainForm.StyleManager.Colors.Foreground;
    dbePLACE_NAME.Font.Color              := Amunhotep.MainForm.StyleManager.Colors.Border;
    dbePLACE_NAME.ReadOnly                := true;
      lk_Btn         := dbePLACE_NAME.EditButtons.Add;
      lk_Btn.Visible := true;
      lk_Btn.Style   := ebsEllipsisEh;
      lk_Btn.OnClick := @edtPLACE_NAME_OnClick;
    dbeTO_PLACE_NAME                         := TDBEditEh(Result.FindComponent('dbeTO_PLACE_NAME'));
    dbeTO_PLACE_NAME.Color                   := Amunhotep.MainForm.StyleManager.Colors.Foreground;
    dbeTO_PLACE_NAME.Font.Color              := Amunhotep.MainForm.StyleManager.Colors.Border;
    dbeTO_PLACE_NAME.ReadOnly                := true;
      lk_Btn         := dbeTO_PLACE_NAME.EditButtons.Add;
      lk_Btn.Visible := true;
      lk_Btn.Style   := ebsEllipsisEh;
      lk_Btn.OnClick := @edtTO_PLACE_NAME_OnClick;
    dbeWRK_NAME                               := TDBEditEh(Result.FindComponent('dbeWRK_NAME'));
    dbeWRK_NAME.Color                         := Amunhotep.MainForm.StyleManager.Colors.Foreground;
    dbeWRK_NAME.Font.Color                    := Amunhotep.MainForm.StyleManager.Colors.Border;
    dbeWRK_NAME.ReadOnly                      := true;
      lk_Btn         := dbeWRK_NAME.EditButtons.Add;
      lk_Btn.Visible := true;
      lk_Btn.Style   := ebsEllipsisEh;
      lk_Btn.OnClick := @dbeWRK_NAME_OnClick;
    dbeFILIAL_NAME                            := TDBEditEh(Result.FindComponent('dbeFILIAL_NAME'));
    dbeFILIAL_NAME.Color                      := Amunhotep.MainForm.StyleManager.Colors.Foreground;
    dbeFILIAL_NAME.Font.Color                 := Amunhotep.MainForm.StyleManager.Colors.Border;
    dbeUSER_NAME                              := TDBEditEh(Result.FindComponent('dbeUSER_NAME'));
    dbeUSER_NAME.Color                        := Amunhotep.MainForm.StyleManager.Colors.Foreground;
    dbeUSER_NAME.Font.Color                   := Amunhotep.MainForm.StyleManager.Colors.Border;
      lk_Btn         := dbeUSER_NAME.EditButtons.Add;
      lk_Btn.Visible := true;
      lk_Btn.Style   := ebsEllipsisEh;
      lk_Btn.OnClick := @dbeUSER_ID_OnClick;
    dbgDoc                                    := TDBGridEh(Result.FindComponent('dbgDoc'));
    dbgDoc.Color                              := Amunhotep.MainForm.StyleManager.Colors.Window;
    dbgDoc.Font.Color                         := Amunhotep.MainForm.StyleManager.Colors.Border;
    dbgDoc.FixedColor                         := Amunhotep.MainForm.StyleManager.Colors.Foreground;
    dbgDoc.TitleFont.Color                    := Amunhotep.MainForm.StyleManager.Colors.Border;
    dbgDoc.TitleFont.Style                    := [fsBold];
    dbgDoc.FooterFont.Style                   := [fsBold];
    dbgDoc.UseMultiTitle                      := true;
    dbgDoc.OnGetCellParams                    := @dbgDoc_OnGetCellParams;
    dbgDoc.AllowedOperations                  := [alopUpdateEh, alopDeleteEh];
    dbgDoc.Columns.Clear;
    {
    lk_Col := CreateTColumnEh(dbgDoc, 'ID', '#0 ', '№ записи', 60, taRightJustify);
    lk_Col.Color                := Amunhotep.MainForm.StyleManager.Colors.Foreground + $161616;
    lk_Col.ReadOnly             := true;
    lk_Col.Footer.Color         := lk_Col.Color;
    }
    lk_Col := CreateTColumnEh(dbgDoc, 'TMC_ID'  , '#0 ', 'ТМЦ|Код', 60, taRightJustify);
    lk_Col.Color                := Amunhotep.MainForm.StyleManager.Colors.Foreground + $161616;
    lk_Col.ReadOnly             := true;
    lk_Col.Footer.Color         := lk_Col.Color;
    lk_Col := CreateTColumnEh(dbgDoc, 'TMC_NAME', '', 'ТМЦ|Наименование', 200, taLeftJustify);
    lk_Col.Color                := Amunhotep.MainForm.StyleManager.Colors.Foreground + $161616;
    lk_Col.ReadOnly             := true;
    lk_Col.Footer.Color         := lk_Col.Color;
    lk_Col.Footer.Alignment     := taLeftJustify;
    lk_Col.Footer.Value         := 'ИТОГО';
    lk_Col.Footer.ValueType     := fvtStaticText;

    lk_Col := CreateTColumnEh(dbgDoc, 'EDIZM_SNAME', '', 'ТМЦ|Ед.', 40, taLeftJustify);
    lk_Col.Color                := Amunhotep.MainForm.StyleManager.Colors.Foreground + $161616;
    lk_Col.ReadOnly             := true;
    lk_Col.Footer.Color         := lk_Col.Color;
    lk_Col := CreateTColumnEh(dbgDoc, 'PRICE'   , '#0.00', 'ТМЦ|Цена'        ,  60, taRightJustify);
    lk_Col.AlwaysShowEditButton := true; 
    lk_Col.AutoDropDown         := true;
    lk_Col.ButtonStyle          := cbsDropDown;
    lk_Col.Footer.Color         := lk_Col.Color;
    lk_Col := CreateTColumnEh(dbgDoc, 'QUANT'   , '#0.000', 'Накладная|Кол-во',  60, taRightJustify);
    lk_Col.AlwaysShowEditButton := true; 
    lk_Col.AutoDropDown         := true;
    lk_Col.ButtonStyle          := cbsDropDown;
    lk_Col.Footer.Color         := lk_Col.Color;
    lk_Col.Footer.Alignment     := taRightJustify;
    lk_Col.Footer.DisplayFormat := '#0.00 ';
    lk_Col.Footer.ValueType     := fvtSum;
    lk_Col := CreateTColumnEh(dbgDoc, 'TOTAL'   , '#0.00', 'Накладная|Сумма' ,  60, taRightJustify);
    lk_Col.Color                := Amunhotep.MainForm.StyleManager.Colors.Foreground + $161616;
    lk_Col.ReadOnly             := true;
    lk_Col.Footer.Color         := lk_Col.Color;
    lk_Col.Footer.Alignment     := taRightJustify;
    lk_Col.Footer.DisplayFormat := '#0.00 ';
    lk_Col.Footer.ValueType     := fvtSum;

    dbgDoc.SumList.Active := true;
    trJournal                                 := TxFBTransaction(Result.FindComponent('trJournal'));
    trJournal.DefaultDataBase                 := FBDataBase; 
    trJournal.Params.Text                     := 'isc_tpb_read_committed'+#13#10+'isc_tpb_rec_version'+#13#10+'isc_tpb_write'+#13#10+'isc_tpb_nowait'; 
    dtsJournal                                := TxFBDataSet(Result.FindComponent('dtsJournal'));
    dtsJournal.AfterOpen                      := @dtsJournal_AfterOpen;
    dtsJournal.AfterScroll                    := @dtsJournal_AfterScroll;
    dtsJournal.BeforeClose                    := @dtsJournal_BeforeClose;
    dtsDoc                                    := TxFBDataSet(Result.FindComponent('dtsDoc'));
    DSdtsJournal                              := TDataSource(Result.FindComponent('DSdtsJournal'));
    DSdtsDoc                                  := TDataSource(Result.FindComponent('DSdtsDoc'));
    lk_act := FindTAction(Result,'actSave'    ,msg_actsave    ,msg_actsave_hint    ,'Ctrl+S', 0,107); lk_act.OnExecute:=@actSave_OnExecute; 
    lk_act := FindTAction(Result,'actPrint'   ,msg_actprint   ,msg_actprint_hint   ,'Ctrl+P', 0,105); lk_act.OnExecute:=@actPrint_OnExecute; 
    lk_act := FindTAction(Result,'actCommit'  ,msg_actcommit  ,msg_actcommit_hint  ,'Ctrl+C', 0,298); lk_act.OnExecute:=@actCommit_OnExecute; lk_act.OnUpdate:=@actCommit_OnUpdate; 
    lk_act := FindTAction(Result,'actUnCommit',msg_actuncommit,msg_actuncommit_hint,'Ctrl+U', 0,297); lk_act.OnExecute:=@actUnCommit_OnExecute; lk_act.OnUpdate:=@actUnCommit_OnUpdate; 
    lk_act := FindTAction(Result,'actPodbor'  ,msg_actpodbor  ,msg_actPodbor_hint  ,'Ctrl+I', 0,304); lk_act.OnExecute:=@actPodbor_OnExecute; lk_act.OnUpdate:=@actCommit_OnUpdate; 
    lk_act := FindTAction(Result,'actPodborGroup',msg_actpodbor2,msg_actPodbor_hint2,'Ctrl+G',0,312); lk_act.OnExecute:=@actPodborGroup_OnExecute; lk_act.OnUpdate:=@actCommit_OnUpdate; 
    RefreshView;
    Amunhotep_MainForm_TaskBar.ButtonByForm(Result).Down := true;
  end;
  //============================================================================
begin
  docId := GetGlobalVariable('J_ID');
  if(StrTrimAll(DocId)='')then exit;
  AmunhotepForm := AmunhotepForm_Create;
end.
