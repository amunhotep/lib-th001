{$IFNDEF PEAKTOP:GLOBAL_VARIABLES.INC}{$I PEAKTOP:GLOBAL_VARIABLES.INC}{$ENDIF}
{$IFNDEF PEAKTOP:OBJ/TCOLUMNEH.INC}   {$I PEAKTOP:OBJ/TCOLUMNEH.INC}   {$ENDIF}
{$IFNDEF PEAKTOP:OBJ/TIMAGELIST.INC}  {$I PEAKTOP:OBJ/TIMAGELIST.INC}  {$ENDIF}
{$IFNDEF PEAKTOP:OBJ/TACTION.INC}     {$I PEAKTOP:OBJ/TACTION.INC}     {$ENDIF}
{$IFNDEF DB:CONFIG/OPER/GET_PIN.INC}
  {$I DB:CONFIG/OPER/GET_PIN.INC}
{$ENDIF}
const
  msg_invalid_resource   = 'Неверный файл ресурсов'; 
  msg_caption            = 'Накладная'; 
  msg_actsave            = 'Сохранить'; 
  msg_actsave_hint       = 'Сохранить изменения в документе'; 
  msg_actprint           = 'Печать'; 
  msg_actprint_hint      = 'Предварительный просмотр печати документа'; 
  msg_actcommit          = 'Провести'; 
  msg_actcommit_hint     = 'Провести документ'; 
  msg_actuncommit        = 'Отменить'; 
  msg_actuncommit_hint   = 'Отменить проведение документа'; 
  msg_actpodbor          = 'Подбор'; 
  msg_actpodbor_hint     = 'Добавить ТМЦ'; 
  msg_actpodbor2         = 'Группа ТМЦ'; 
  msg_actpodbor_hint2    = 'Добавить группу ТМЦ'; 
  msg_actpodbor3         = 'По коду'; 
  msg_actpodbor3_hint    = 'Добавить ТМЦ по коду'; 
var 
  docId                 :string;
  AmunhotepForm         :TAmunhotepForm; 
  TopBar                :TxcGradientPanelVista; 
  ToolBar               :TxcGradientPanel; 
  PanelClient           :TxcGradientPanel;
  PanlelDoc             :TxcPanel;
  edtAddItem            :TEdit;
  dbeNAME               :TDBEditEh; 
  dbeFILIAL_NAME        :TDBEditEh; 
  dbeUSER_NAME          :TDBEditEh; 
  dbdtpDATE_COMMIT      :TDBDateTimeEditEh; 
  dbePLACE_NAME         :TDBEditEh; 
  dbgDoc                :TDBGridEh; 
  trJournal             :TxFBTransaction; 
  dtsJournal            :TxFBDataSet; 
  dtsDoc                :TxFBDataSet; 
  DSdtsJournal          :TDataSource; 
  DSdtsDoc              :TDataSource; 
  //============================================================================
  procedure CloseDataSets;
  begin
    if dtsJournal.Active then
      begin
      if(dtsJournal.State = dsEdit)then
        try
          dtsJournal.Post;
        except
          dtsJournal.Cancel;
        end;
      dtsJournal.Close;
      end;
    if trJournal.InTransaction then 
      trJournal.Commit; 
  end;
  //============================================================================
  procedure RefreshDetail;
  var
    lkOrderBy :string;
    i :Integer;
  begin
    if dtsDoc.Active then dtsDoc.Close;
    lkOrderBy := 'ID';
    for i:=0 to dbgDoc.Columns.Count-1 do
      if(dbgDoc.Columns[i].Title.SortMarker <> smNoneEh)then
        begin
        lkOrderBy := dbgDoc.Columns[i].FieldName; 
        if(dbgDoc.Columns[i].Title.SortMarker = smDownEh)then
          lkOrderBy := lkOrderBy + ' ASCENDING '
         else 
          lkOrderBy := lkOrderBy + ' DESCENDING ';
        break;
        end;
    dtsDoc.SelectSQL.Text  := 'SELECT P.* FROM PROC$D_GET_1000014('''+DocId+''') P ORDER BY P.'+lkOrderBy;
    dtsDoc.RefreshSQL.Text := 'SELECT P.* FROM PROC$D_GET_1000014('''+DocId+''') P WHERE (P.ID = ?ID)'
    dtsDoc.ModifySQL.Text := 
      'UPDATE TABL$D_1000014 DB SET '+#13#10+
      '   DB.TMC_ID     = ?TMC_ID '+#13#10
      '  ,DB.QUANT      = ?QUANT '+#13#10+
      '  ,DB.PRICE      = ?PRICE '+#13#10+
      '  ,DB.J_BILLS_ID = ?J_BILLS_ID '+#13#10+
      'WHERE  (DB.ID = ?ID) ';    
    dtsDoc.DeleteSQL.Text := 'DELETE FROM TABL$D_1000014 B WHERE (B.ID = ?ID) ';
    try 
      dtsDoc.Open;
     except
     
     end; 
  end;
  //============================================================================
  procedure RefreshView;
  begin
    CloseDataSets;
    dtsJournal.SelectSQL.Text  := 'SELECT * FROM PROC$D_1000014('''+DocId+''') ';
    dtsJournal.RefreshSQL.Text := 'SELECT * FROM PROC$D_1000014(?ID) ';
    dtsJournal.ModifySQL.Text := 
      'EXECUTE BLOCK ( '+#13#10+
      '  QID           DOMN$PSTRING  = ?ID '+#13#10+
      ' ,QNAME         DOMN$PSTRING  = ?NAME '+#13#10+
      ' ,QDATE_COMMIT  DOMN$DATETIME = ?DATE_COMMIT '+#13#10+
      ')AS'+#13#10+
      'BEGIN '+#13#10+
      '  UPDATE TABL$J_4 J SET '+#13#10+
      '     J.NAME = :QNAME '+#13#10+
      '    ,J.DATE_COMMIT = :QDATE_COMMIT '+#13#10+
      '  WHERE (J.ID = :QID); '+#13#10+
      '  '+#13#10+
      '  UPDATE TABL$J_1000014 JB1 SET '+#13#10+
      '    JB1.WRK_ID      = 0 '+#13#10+
      '   ,JB1.TMC_GRID_ID = 0 '+#13#10+
      '  WHERE (JB1.J_ID = :QID); '+#13#10+
      'END ';
    try 
      dtsJournal.Open; 
    except 
      // Dialogs.MessageDlg(dtsJournal.SelectSQL.Text, mtError, [mbOk]);
    end; 
  end;
  //============================================================================
  procedure dbgDoc_OnGetCellParams(Sender: TObject; Column: TColumnEh; 
              AFont: TFont; var Background: TColor; State: TGridDrawState);
  begin
   if(Column.Tag=666)then exit;
   if(not(Column.Field.DataSet.Active)or(Column.Field.DataSet.RecordCount=0))then exit;
   //if    (Column.Field.DataSet.FieldByName('FLAG_COMMIT').AsInteger=0)then aFont.Style:= aFont.Style + [fsBold     ];
   //Background := Column.Field.DataSet.FieldByName('COLOR_BGR').AsInteger;
   //aFont.Color:= Column.Field.DataSet.FieldByName('COLOR_FRG').AsInteger;
   if(Background=clWhite)then Background := Amunhotep_MainForm_StyleManager.Colors.Window;
   if(aFont.Color=Background)then aFont.Color := Amunhotep_MainForm_StyleManager.Colors.Border;
  end;
  //============================================================================
  procedure dbgDoc_OnTitleClick(Column :TColumnEh); 
  var 
    i     :Integer; 
    lkDBG :TCustomDBGridEh; 
    lkSM  :TSortMarkerEh;
  begin 
    lkSM  := Column.Title.SortMarker;
    lkDBG := TDBGridColumnsEh(Column.Collection).Grid;
    for i:=0 to lkDBG.Columns.Count-1 do 
      lkDBG.Columns[i].Title.SortMarker := smNoneEh;
    if(lkSM <> smDownEh)then   
      Column.Title.SortMarker := smDownEh
     else  
      Column.Title.SortMarker := smUpEh;
    RefreshDetail; 
  end; 
  //============================================================================
  procedure dtsJournal_AfterOpen(DataSet :TDataSet);
  begin
    RefreshDetail;
  end;
  //============================================================================
  procedure dtsJournal_BeforeClose(DataSet :TDataSet);
  begin
    if dtsDoc.Active then
      begin
      if(dtsDoc.State = dsEdit)then
        try
          dtsDoc.Post;
        except
          dtsDoc.Cancel;
        end;
      dtsDoc.Close;  
      end;  
  end;
  //============================================================================
  procedure dtsJournal_AfterScroll(DataSet :TDataSet);
  begin
    AmunhotepForm.Caption := DataSet.FieldByName('TYPE_NAME').AsString+' '+DataSet.FieldByName('DOCNUMBERSTR').AsString;
    AmunhotepForm.SetCaption(AmunhotepForm.Caption);
    TopBar.Caption := '     '+AmunhotepForm.Caption;
    if(DataSet.FieldByName('FLAG_COMMIT').AsInteger = 1)then
      begin
      PanelClient.Enabled := false;
      PanlelDoc.Enabled   := false;
      end
     else
      begin
      PanelClient.Enabled := true;
      PanlelDoc.Enabled   := true;
      end; 
  end;
  //============================================================================
  procedure dtsDoc_AfterOpen(DataSet :TDataSet);
  begin
    DataSet.Last;
  end;
  //============================================================================
  procedure dtsDoc_AfterDelete(DataSet :TDataSet);
  begin
    RefreshView;
  end;
  //============================================================================
  procedure actSave_OnExecute(Sender :TObject);
  begin
    RefreshView;
  end;
  //============================================================================
  procedure actPrint_OnExecute(Sender :TObject);
  var
    lkScName:string;
  begin
    if not dtsJournal.Active then exit;
    if(not(dtsJournal.RecordCount>0))then exit;
    lkScName := StrAbsolutePath('../'+dtsJournal.FieldByName('TYPE_ID').AsString+'/PRINT.PS', ScriptName);
    SetGlobalVariable('J_ID', dtsJournal.FieldByName('ID').AsString);
    if not call(lkScName)then
      Dialogs.MessageDlg('Ошибка в вызове скрипта '+#13#10+lkScName, mtError, [mbOk]);
  end;
  //============================================================================
  procedure actCommit_OnExecute(Sender :TObject);
  begin
    if not(Dialogs.MessageDlg('Провести документ ?', mtConfirmation, [mbYes, mbNo])=mrYes)then exit;
    CloseDataSets;
    ExecSQL(FBDataBase, 'UPDATE TABL$J_4 J SET J.FLAG_COMMIT = 1 WHERE (J.ID = '''+DocId+''')');
    RefreshView;
  end;
  //============================================================================
  procedure actCommit_OnUpdate(Sender :TObject);
  var
    lk_Enabled :Boolean;
  begin
    lk_Enabled := dtsJournal.Active;
    if(lk_Enabled)then lk_Enabled := (dtsJournal.RecordCount>0);
    if(lk_Enabled)then lk_Enabled := (dtsJournal.FieldByName('FLAG_COMMIT').AsInteger = 0);
    TCustomAction(Sender).Enabled := lk_Enabled;
  end;
  //============================================================================
  procedure actUnCommit_OnExecute(Sender :TObject);
  var
    lkPIN :string;
    lkPIN2:string;
    lkPUK :string;
  begin
    if not System_UserHasAdminRights then
      begin
      lkPIN := FormatFloat('0000', Trunc(Random() * 9999));
      lkPUK := System_GetPinCode(lkPIN);
      lkPIN2:= '';
      if Dialogs.InputQuery('Отмена проведения документа', 'Введите PIN код для числа "'+lkPIN+'"', lkPIN2)then
        begin
        if(lkPIN2 <> lkPUK)then
          begin
          Dialogs.MessageDlg('Неверно введен PIN-код !', mtWarning, [mbOk]);
          exit;
          end;
        end
       else
        exit;   
      end; 
    if not(Dialogs.MessageDlg('Отменить проводку документа ?', mtConfirmation, [mbYes, mbNo])=mrYes)then exit;
    CloseDataSets;
    ExecSQL(FBDataBase, 'UPDATE TABL$J_4 J SET J.FLAG_COMMIT = 0 WHERE (J.ID = '''+DocId+''')');
    RefreshView;
  end;
  //============================================================================
  procedure actUnCommit_OnUpdate(Sender :TObject);
  var
    lk_Enabled :Boolean;
  begin
    lk_Enabled := dtsJournal.Active;
    if(lk_Enabled)then lk_Enabled := (dtsJournal.RecordCount>0);
    if(lk_Enabled)then lk_Enabled := (dtsJournal.FieldByName('FLAG_COMMIT').AsInteger = 1);
    TCustomAction(Sender).Enabled := lk_Enabled;
  end;
  //============================================================================
  procedure actPodbor_OnExecute(Sender :TObject);
  var
    lkTMC_ID :string;
    lkSQL    :string;
  begin
    lkTMC_ID := '0';
    SetGlobalVariable('TMC_ID', lkTMC_ID);
    call(StrAbsolutePath('../../REF/TMC/DEFAULT_DLG.PS', ScriptName));
    lkTMC_ID := GetGlobalVariable('TMC_ID');
    if((UpperCase(lkTMC_ID)<>'') and (lkTMC_ID <> '0'))then
      begin
      lkSQL := 'INSERT INTO TABL$D_1000014(J_ID, TMC_ID, QUANT)VALUES('''+DocId+''', '''+lkTMC_ID+''', 1.000)';
      CloseDataSets;
      ExecSQL(dtsJournal.DataBase, lkSQL);
      RefreshView;
      end;
  end;
  //============================================================================
  procedure AddItemToDoc(const aItemNumber:string);
  var
    lkItemNumber :string;
    lkSQL, lkS, lkS2 :string;
    lkJ_ID :string;
    lkFirmId :Integer;
  begin
    lkFirmId := dtsJournal.FieldByName('FIRM_ID').AsInteger;
    lkItemNumber := StrCiphersOnlyInt(aItemNumber);
    // kill checksum
    if(Length(lkItemNumber) > 0)then
      Delete(lkItemNumber, Length(lkItemNumber), 1);
    // kill leading zeros
    if(Length(lkItemNumber) > 0)then
      while((Length(lkItemNumber) > 0) and (lkItemNumber[1] = '0'))do
        Delete(lkItemNumber, 1, 1);
    if(not((Length(lkItemNumber) = 7)or(Length(lkItemNumber) = 9)))then
      begin
      Dialogs.MessageDlg('Неверный номер документа ДЗИ или код ТМЦ !', mtWarning, [mbOk]);
      exit;
      end;
    if(Length(lkItemNumber) = 7)then
      begin
      if(lkFirmId < 2)then
        begin
        GetField(FBDataBase, 'TABL$R_TMC', 'COALESCE(COUNT(ID),0)', 'ID = '''+lkItemNumber+''' ', lkS);
        if(lkS = '0')then
          begin
          Dialogs.MessageDlg('ТМЦ с штрих-кодом "'+lkItemNumber+'" не существует в базе данных !', mtError, [mbOk]);
          exit;
          end;
        end
       else
        begin 
        GetField(FBDataBase, 'TABL$R_TMC', 'COALESCE(COUNT(ID),0)', 'TRIM(BARCODE) = '''+lkItemNumber+''' ', lkS);
        if(lkS = '0')then
          begin
          Dialogs.MessageDlg('ТМЦ с штрих-кодом "'+lkItemNumber+'" не существует в базе данных !', mtError, [mbOk]);
          exit;
          end;
        GetField(FBDataBase, 'TABL$R_TMC', 'FIRST 1 ID', 'TRIM(BARCODE) = '''+lkItemNumber+''' ', lkS);
        WriteLn('331:'+lkS);
        lkItemNumber := lkS;
        end;
      GetField(FBDataBase, 'TABL$P_TMC_QUANT', 'CAST(COALESCE(SUM(QUANT),0) AS INTEGER)', '(TMC_ID = '''+lkItemNumber+''')AND((PLACE_ID+0) = '''+
        dtsJournal.FieldByName('PLACE_ID').AsString+''')AND((FIRM_ID+0) = '''+
        dtsJournal.FieldByName('FIRM_ID').AsString+''')', lkS2);
      if(lkS2 = '0')then
        begin
        GetField(FBDataBase, 'TABL$P_TMC_QUANT', 'CAST(COALESCE(SUM(QUANT),0) AS INTEGER)', '(TMC_ID = '''+lkItemNumber+''')AND((PLACE_ID+0) = '''+
          dtsJournal.FieldByName('PLACE_ID').AsString+''')AND((FIRM_ID+0) <> '''+dtsJournal.FieldByName('FIRM_ID').AsString+''')', lkS);
        if(Dialogs.MessageDlg('ТМЦ с кодом "'+lkItemNumber+'" проходит по другой фирме учета.'+#13#10+'Добавить его в акт сверки ?', mtConfirmation, [mbYes, mbNo]) <> mrYes)then
          exit;
        end;
      lkSQL := 'INSERT INTO TABL$D_1000014(J_ID, TMC_ID, QUANT)VALUES('''+DocId+''', '''+lkItemNumber+''', '''+lkS2+''')';
      CloseDataSets;
      ExecSQL(dtsJournal.DataBase, lkSQL);
      RefreshView;
      end
     else
      begin
      GetField(FBDataBase, 'TABL$J_4', 'COALESCE(COUNT(ID),0)', '(TRIM(DOCNUMBERSTR) = '''+lkItemNumber+''') AND (TYPE_ID = 1000062) ', lkS);
      if(lkS = '0')then
        begin
        Dialogs.MessageDlg('Залог с номером "'+lkItemNumber+'" на существует в базе данных !', mtError, [mbOk]);
        exit;
        end;
      GetField(FBDataBase, 'TABL$J_4', 'ID', '(TRIM(DOCNUMBERSTR) = '''+lkItemNumber+''') AND (TYPE_ID = 1000062) ', lkJ_ID);
      GetField(FBDataBase, 'TABL$J_CHILDS JC, TABL$J_4 J ', 'COALESCE(J.ID, 0)', '(JC.J_ID = '''+lkJ_ID+''') AND (J.ID = JC.J_CHILD_ID) AND (J.TYPE_ID = 1000064) ', lkJ_ID);
      WriteLn('J_ID = '+lkJ_ID);
      if( (lkJ_ID = '0') or (StrTrimAll(lkJ_ID) = '') )then
        begin
        Dialogs.MessageDlg('Залог с номером "'+lkItemNumber+'" не имеет под собой ДЗИ !', mtError, [mbOk]);
        exit;
        end;
      GetField(FBDataBase, 'TABL$J_4', 'COALESCE(FIRM_ID, -1)', 'ID = '''+lkJ_ID+''' ', lkS);
      WriteLn('FIRM_ID = '+lkS);
      if(lkS <> dtsJournal.FieldByName('FIRM_ID').AsString)then
        begin
        Dialogs.MessageDlg('Документ с номером "'+lkItemNumber+'" проведен по другой фирме учета !', mtError, [mbOk]);
        exit;
        end;
      lkSQL :=   
        'EXECUTE BLOCK AS '+#13#10+
        '  DECLARE VARIABLE P_TMC_ID TYPE OF COLUMN TABL$D_1000014.TMC_ID; '+#13#10+
        '  DECLARE VARIABLE P_QUANT  TYPE OF COLUMN TABL$D_1000014.QUANT; '+#13#10+
        'BEGIN '+#13#10+
        '  FOR '+#13#10+
        '    SELECT DISTINCT D.TMC_ID '+#13#10+
        '    FROM   TABL$D_1000014 D '+#13#10+
        '    WHERE  (D.J_ID = '''+lkJ_ID+''') '+#13#10+
        '    INTO   :P_TMC_ID '+#13#10+
        '  DO '+#13#10+
        '    BEGIN '+#13#10+
        '    SELECT FIRST 1 P.QUANT FROM PROC$P_TMC_QUANT_ON_DATE('''+dtsJournal.FieldByName('FIRM_ID').AsString+
          ''', :P_TMC_ID, '''+dtsJournal.FieldByName('PLACE_ID').AsString+''', '''+
          FormatDateTime('dd.mm.yyyy hh:nn:ss', dtsJournal.FieldByName('DATE_COMMIT').AsDateTime)+''') P INTO :P_QUANT; '+#13#10+
        '    IF(:P_QUANT <> 0)THEN '+#13#10+
        '      UPDATE OR INSERT INTO TABL$D_1000014(J_ID, TMC_ID, QUANT) '+#13#10+
        '        VALUES('''+DocId+''', :P_TMC_ID, :P_QUANT) '+#13#10+
        '        MATCHING (J_ID, TMC_ID); '+#13#10+
        '    END '+#13#10+
        'END  ';      
      CloseDataSets;
      ExecSQL(dtsJournal.DataBase, lkSQL);
      RefreshView;
      end; 
  end;
  //============================================================================
  procedure edtAddItem_OnEnter(Sender :TObject);
  begin
    TEdit(Sender).Text := '';
  end;
  //============================================================================
  procedure edtAddItem_OnKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
  var
    lkID :string;
    lkMR :Integer;
  begin
    if(Key <> 13)then exit;
    if(dtsJournal.FieldByName('FLAG_COMMIT').AsInteger = 1)then
      begin
      Dialogs.MessageDlg('Документ уже проведен !', mtError, [mbOk]);
      exit;
      end;
    lkID := TEdit(Sender).Text;
    AddItemToDoc(lkID);
    TEdit(Sender).Text := '';
    TEdit(Sender).SetFocus;
  end;
  //============================================================================
  procedure actPodborId_OnExecute(Sender :TObject);
  var
    lkTMC_ID   :Integer;
    lkSQL, lkS :string;
  begin
    lkTMC_ID := 0;
    if(not(Dialogs.InputQueryInteger('Подбор ТМЦ по коду', 'Введите код ТМЦ', lkTMC_ID)))then exit;
    GetField(FBDataBase, 'TABL$R_TMC', 'COUNT(ID)', 'ID = '''+IntToStr(lkTMC_ID)+''' ', lkS);
    if(lkS <> '0')then
      begin
      lkSQL := 'INSERT INTO TABL$D_1000014(J_ID, TMC_ID, QUANT)VALUES('''+DocId+''', '''+IntToStr(lkTMC_ID)+''', 1)';
      CloseDataSets;
      ExecSQL(dtsJournal.DataBase, lkSQL);
      RefreshView;
      end;
  end;
  //============================================================================
  procedure actPodborGroup_OnExecute(Sender :TObject);
  var
    lkTMC_GROUP_ID :string;
    lkSQL          :string;
  begin
    lkTMC_GROUP_ID := '0';
    SetGlobalVariable('TMC_GROUP_ID', lkTMC_GROUP_ID);
    call(StrAbsolutePath('../../REF/TMC_GROUP/DEFAULT_DLG.PS', ScriptName));
    lkTMC_GROUP_ID := GetGlobalVariable('TMC_GROUP_ID');
    if((UpperCase(lkTMC_GROUP_ID)<>'NULL')and(lkTMC_GROUP_ID <> '0'))then
      begin
      lkSQL := 
        'EXECUTE BLOCK AS '+#13#10+
        '  DECLARE VARIABLE P_TMC_ID DOMN$INTEGER; '+#13#10+
        'BEGIN '+#13#10+
        '  FOR SELECT T.ID FROM TABL$R_TMC T WHERE (T.TMC_GROUP_ID = '''+lkTMC_GROUP_ID+''') INTO :P_TMC_ID DO '+#13#10+
        '    INSERT INTO TABL$D_1000014(J_ID, TMC_ID, QUANT)VALUES('''+DocId+''', :P_TMC_ID, 0.000);'+#13#10+
        'END';
      CloseDataSets;
      ExecSQL(dtsJournal.DataBase, lkSQL);
      RefreshView;
      end;
  end;
  //============================================================================
  procedure edtPLACE_NAME_OnClick(Sender :TObject; var Handled : Boolean);
  var
    temp_id:string;
    sql    :string;
  begin
    Handled := true;
    if not dtsJournal.Active then exit;
    temp_id := dtsJournal.FieldByName('PLACE_ID').AsString;
    SetGlobalVariable('PLACE_ID', temp_id);
    call('DB:CONFIG/REF/PLACES/DEFAULT_DLG.PS');
    temp_id := GetGlobalVariable('PLACE_ID');
    if(not((StrTrimAll(temp_id)='0')or(UpperCase(temp_id)='NULL')))then
      begin
      sql := 
        'UPDATE TABL$J_1000014 JRNL SET '+#13#10+
        '  JRNL.PLACE_ID = '''+temp_id+''' '+#13#10+
        'WHERE (JRNL.J_ID ='''+dtsJournal.FieldByName('ID').AsString+''') ';
      ExecSQL(FBDataBase, sql);
      RefreshView;
      end;
  end;
  //============================================================================
  procedure dbeUSER_ID_OnClick(Sender :TObject; var Handled : Boolean);
  var
    TempId :string;
    sql    :string;
  begin
    Handled := true;
    if not dtsJournal.Active then exit;
    TempId := dtsJournal.FieldByName('USER_ID').AsString;
    SetGlobalVariable('USER_ID', TempId);
    call(StrAbsolutePath('../../REF/_USERS/DEFAULT_DLG.PS', ScriptName));
    TempId := GetGlobalVariable('USER_ID');
    if(not((StrTrimAll(TempId)='')or(UpperCase(TempId)='NULL')))then
      begin
      sql := 'UPDATE TABL$J_4 JRNL SET JRNL.USER_ID = '''+TempId+''' WHERE (JRNL.ID ='''+DocId+''') ';
      ExecSQL(FBDataBase, SQL);
      RefreshView;
      end;
  end;
  //============================================================================
  procedure AmunhotepForm_OnClose(Sender :TObject; var Action :TCloseAction);
  begin
    Action := caFree;
    CloseDataSets;
  end;
  //============================================================================
  function AmunhotepForm_Create:TAmunhotepForm;
  var
    lk_FileName :string;
    lk_ResBody  :string;
    lkStr       :string;
    lkAct       :TAction;
    lklbl       :TLabel;
    lk_Col      :TColumnEh;
    lk_Btn      :TEditButtonEh;
  begin
    lk_FileName := StrAbsolutePath('./EDIT.XFM', ScriptName);
    lk_ResBody := StringsLoadFromFile(lk_FileName);
    if(lk_ResBody='')then 
      begin
      Dialogs.MessageDlg(msg_invalid_resource+#13#10+lk_FileName, mtWarning, [mbOK]);
      exit;
      end;
    Result := TAmunhotepForm(StrToComponent(lk_ResBody));
    Result.OnClose := @AmunhotepForm_OnClose;
    DontAutoFree;
    Result.SetCaption(msg_caption);
    TopBar                                    := TxcGradientPanelVista(Result.FindComponent('TopBar'));
    ToolBar                                   := TxcGradientPanel(Result.FindComponent('ToolBar'));
    PanelClient                               := TxcGradientPanel(Result.FindComponent('PanelClient'));
    PanlelDoc                                 := TxcPanel(Result.FindComponent('PanlelDoc'));
    edtAddItem := TEdit(Result.FindComponent('edtAddItem'));
    with edtAddItem do
      begin
      Text       := '';
      Color      := Amunhotep.MainForm.StyleManager.Colors.Window;
      Font.Color := Amunhotep.MainForm.StyleManager.Colors.Border;
      OnEnter    := @edtAddItem_OnEnter;
      OnKeyDown  := @edtAddItem_OnKeyDown;
      end;
    dbeNAME                                   := TDBEditEh(Result.FindComponent('dbeNAME'));
    dbeNAME.Color                             := Amunhotep.MainForm.StyleManager.Colors.Window;
    dbeNAME.Font.Color                        := Amunhotep.MainForm.StyleManager.Colors.Border;
    dbdtpDATE_COMMIT                          := TDBDateTimeEditEh(Result.FindComponent('dbdtpDATE_COMMIT'));
    dbdtpDATE_COMMIT.Color                    := Amunhotep.MainForm.StyleManager.Colors.Window;
    dbdtpDATE_COMMIT.Font.Color               := Amunhotep.MainForm.StyleManager.Colors.Border;
    dbePLACE_NAME                         := TDBEditEh(Result.FindComponent('dbePLACE_NAME'));
    dbePLACE_NAME.Color                   := Amunhotep.MainForm.StyleManager.Colors.Foreground;
    dbePLACE_NAME.Font.Color              := Amunhotep.MainForm.StyleManager.Colors.Border;
    dbePLACE_NAME.ReadOnly                := true;
      lk_Btn         := dbePLACE_NAME.EditButtons.Add;
      lk_Btn.Visible := true;
      lk_Btn.Style   := ebsEllipsisEh;
      lk_Btn.OnClick := @edtPLACE_NAME_OnClick;
    dbeFILIAL_NAME                            := TDBEditEh(Result.FindComponent('dbeFILIAL_NAME'));
    dbeFILIAL_NAME.Color                      := Amunhotep.MainForm.StyleManager.Colors.Foreground;
    dbeFILIAL_NAME.Font.Color                 := Amunhotep.MainForm.StyleManager.Colors.Border;
    dbeUSER_NAME                              := TDBEditEh(Result.FindComponent('dbeUSER_NAME'));
    dbeUSER_NAME.Color                        := Amunhotep.MainForm.StyleManager.Colors.Foreground;
    dbeUSER_NAME.Font.Color                   := Amunhotep.MainForm.StyleManager.Colors.Border;
      lk_Btn         := dbeUSER_NAME.EditButtons.Add;
      lk_Btn.Visible := true;
      lk_Btn.Style   := ebsEllipsisEh;
      lk_Btn.OnClick := @dbeUSER_ID_OnClick;
    dbgDoc                                    := TDBGridEh(Result.FindComponent('dbgDoc'));
    dbgDoc.Color                              := Amunhotep.MainForm.StyleManager.Colors.Window;
    dbgDoc.Font.Color                         := Amunhotep.MainForm.StyleManager.Colors.Border;
    dbgDoc.FixedColor                         := Amunhotep.MainForm.StyleManager.Colors.Foreground;
    dbgDoc.TitleFont.Color                    := Amunhotep.MainForm.StyleManager.Colors.Border;
    dbgDoc.TitleFont.Style                    := [fsBold];
    dbgDoc.FooterFont.Style                   := [fsBold];
    dbgDoc.UseMultiTitle                      := true;
    dbgDoc.VTitleMargin := 2;
//    dbgDoc.TitleButtons := true;
    dbgDoc.OnGetCellParams                    := @dbgDoc_OnGetCellParams;
    dbgDoc.OnTitleClick                       := @dbgDoc_OnTitleClick;
    dbgDoc.AllowedOperations                  := [alopUpdateEh, alopDeleteEh];
    dbgDoc.Columns.Clear;
    lk_Col := CreateTColumnEh(dbgDoc, 'ID', '#0 ', '№ записи', 60, taRightJustify);
    lk_Col.Color                := Amunhotep.MainForm.StyleManager.Colors.Foreground + $161616;
    lk_Col.ReadOnly             := true;
    lk_Col.Footer.Color         := lk_Col.Color;
    lk_Col := CreateTColumnEh(dbgDoc, 'TMC_LIST_ID', '', 'ТМЦ|Каль.', 20, taLeftJustify);
    lk_Col.Color                := Amunhotep.MainForm.StyleManager.Colors.Foreground + $161616;
    lk_Col.ReadOnly             := true;
    lk_Col.Footer.Color         := lk_Col.Color;
    lk_Col.KeyList.Text         := '0'+#13#10+'1';
    lk_Col.PickList.Text        := ' '+#13#10+'Калькул.';
    lk_Col.NotInKeyListIndex    := 1;
    lk_Col.ImageList            := CreateTImageList(dbgDoc, 'ilCalc', [13,14]);
    lk_Col := CreateTColumnEh(dbgDoc, 'TMC_ID'  , '#0 ', 'ТМЦ|Код', 60, taRightJustify);
    lk_Col.Color                := Amunhotep.MainForm.StyleManager.Colors.Foreground + $161616;
    lk_Col.ReadOnly             := true;
    lk_Col.Footer.Color         := lk_Col.Color;
    lk_Col := CreateTColumnEh(dbgDoc, 'TMC_NAME', '', 'ТМЦ|Наименование', 200, taLeftJustify);
    lk_Col.Color                := Amunhotep.MainForm.StyleManager.Colors.Foreground + $161616;
    lk_Col.ReadOnly             := true;
    lk_Col.Footer.Color         := lk_Col.Color;
    lk_Col.Footer.Alignment     := taLeftJustify;
    lk_Col.Footer.Value         := 'ИТОГО';
    lk_Col.Footer.ValueType     := fvtStaticText;
    lk_Col := CreateTColumnEh(dbgDoc, 'TMC_ARTICLE', '', 'ТМЦ|Артикул', 72, taLeftJustify);
    lk_Col.Color                := Amunhotep.MainForm.StyleManager.Colors.Foreground + $161616;
    lk_Col.ReadOnly             := true;
    lk_Col.Footer.Color         := lk_Col.Color;
    lk_Col := CreateTColumnEh(dbgDoc, 'TMC_BARCODE', '','ТМЦ|штрих-код', 72, taLeftJustify);
    lk_Col.Color                := Amunhotep.MainForm.StyleManager.Colors.Foreground + $161616;
    lk_Col.ReadOnly             := true;
    lk_Col.Footer.Color         := lk_Col.Color;
    lk_Col := CreateTColumnEh(dbgDoc, 'TMC_GROUP_NAME', '', 'ТМЦ|Группа', 72, taLeftJustify);
    lk_Col.Color                := Amunhotep.MainForm.StyleManager.Colors.Foreground + $161616;
    lk_Col.ReadOnly             := true;
    lk_Col.Footer.Color         := lk_Col.Color;
    lk_Col := CreateTColumnEh(dbgDoc, 'VALUTE_NAME', '', 'ТМЦ|Материал', 48, taLeftJustify);
    lk_Col.Color                := Amunhotep.MainForm.StyleManager.Colors.Foreground + $161616;
    lk_Col.ReadOnly             := true;
    lk_Col.Footer.Color         := lk_Col.Color;
    lk_Col := CreateTColumnEh(dbgDoc, 'PROBE', '', 'ТМЦ|Проба', 32, taLeftJustify);
    lk_Col.Color                := Amunhotep.MainForm.StyleManager.Colors.Foreground + $161616;
    lk_Col.ReadOnly             := true;
    lk_Col.Footer.Color         := lk_Col.Color;
    lk_Col := CreateTColumnEh(dbgDoc, 'LGTH', '# ### ### ##0.00', 'ТМЦ|Длина|см', 40, taRightJustify);
    lk_Col.Color                := Amunhotep.MainForm.StyleManager.Colors.Foreground + $161616;
    lk_Col.ReadOnly             := true;
    lk_Col.Footer.Color         := lk_Col.Color;
    lk_Col := CreateTColumnEh(dbgDoc, 'DIAM', '# ### ### ##0.0', 'ТМЦ|Размер|мм', 40, taRightJustify);
    lk_Col.Color                := Amunhotep.MainForm.StyleManager.Colors.Foreground + $161616;
    lk_Col.ReadOnly             := true;
    lk_Col.Footer.Color         := lk_Col.Color;
    lk_Col := CreateTColumnEh(dbgDoc, 'MASSA'   , '#0.000', 'ТМЦ|Масса|Общая'        ,  60, taRightJustify);
    lk_Col.Color                := Amunhotep.MainForm.StyleManager.Colors.Foreground + $161616;
    lk_Col.ReadOnly             := true;
    lk_Col.Footer.Color         := lk_Col.Color;
    lk_Col := CreateTColumnEh(dbgDoc, 'MASSA_INS'   , '#0.000', 'ТМЦ|Масса|Вставок'        ,  60, taRightJustify);
    lk_Col.Color                := Amunhotep.MainForm.StyleManager.Colors.Foreground + $161616;
    lk_Col.ReadOnly             := true;
    lk_Col.Footer.Color         := lk_Col.Color;
    lk_Col := CreateTColumnEh(dbgDoc, 'MASSA_NETTO'   , '#0.000', 'ТМЦ|Масса|Чистая'        ,  60, taRightJustify);
    lk_Col.Color                := Amunhotep.MainForm.StyleManager.Colors.Foreground + $161616;
    lk_Col.ReadOnly             := true;
    lk_Col.Footer.Color         := lk_Col.Color;


    lk_Col := CreateTColumnEh(dbgDoc, 'EDIZM_SHORT', '', 'ТМЦ|Ед.', 40, taLeftJustify);
    lk_Col.Color                := Amunhotep.MainForm.StyleManager.Colors.Foreground + $161616;
    lk_Col.ReadOnly             := true;
    lk_Col.Footer.Color         := lk_Col.Color;
    lk_Col := CreateTColumnEh(dbgDoc, 'PRICE'   , '#0.00', 'ТМЦ|Цена'        ,  72, taRightJustify);
    lk_Col.AlwaysShowEditButton := true; 
    lk_Col.AutoDropDown         := true;
    lk_Col.ButtonStyle          := cbsDropDown;
    lk_Col.Footer.Color         := lk_Col.Color;
    lk_Col := CreateTColumnEh(dbgDoc, 'QUANT'   , '#0.000', 'Накладная|Кол-во',  60, taRightJustify);
    lk_Col.AlwaysShowEditButton := true; 
    lk_Col.AutoDropDown         := true;
    lk_Col.ButtonStyle          := cbsDropDown;
    lk_Col.Footer.Color         := lk_Col.Color;
    lk_Col.Footer.Alignment     := taRightJustify;
    lk_Col.Footer.DisplayFormat := '#0.00 ';
    lk_Col.Footer.ValueType     := fvtSum;
    lk_Col := CreateTColumnEh(dbgDoc, 'TOTAL'   , '#0.00', 'Накладная|Сумма' ,  60, taRightJustify);
    lk_Col.Color                := Amunhotep.MainForm.StyleManager.Colors.Foreground + $161616;
    lk_Col.ReadOnly             := true;
    lk_Col.Footer.Color         := lk_Col.Color;
    lk_Col.Footer.Alignment     := taRightJustify;
    lk_Col.Footer.DisplayFormat := '#0.00 ';
    lk_Col.Footer.ValueType     := fvtSum;
    dbgDoc.SumList.Active := true;
    trJournal                                 := TxFBTransaction(Result.FindComponent('trJournal'));
    trJournal.DefaultDataBase                 := FBDataBase; 
    trJournal.Params.Text                     := 'isc_tpb_read_committed'+#13#10+'isc_tpb_rec_version'+#13#10+'isc_tpb_write'+#13#10+'isc_tpb_nowait'; 
    dtsJournal                                := TxFBDataSet(Result.FindComponent('dtsJournal'));
    dtsJournal.AfterOpen                      := @dtsJournal_AfterOpen;
    dtsJournal.AfterScroll                    := @dtsJournal_AfterScroll;
    dtsJournal.BeforeClose                    := @dtsJournal_BeforeClose;
    dtsDoc                                    := TxFBDataSet(Result.FindComponent('dtsDoc'));
    dtsDoc.AfterOpen                          := @dtsDoc_AfterOpen;
    dtsDoc.AfterDelete                        := @dtsDoc_AfterDelete;
    DSdtsJournal                              := TDataSource(Result.FindComponent('DSdtsJournal'));
    DSdtsDoc                                  := TDataSource(Result.FindComponent('DSdtsDoc'));
    lkAct := FindTAction(Result,'actSave'        ,msg_actsave      ,msg_actsave_hint      ,'Ctrl+S'    ,0,107); lkAct.OnExecute:=@actSave_OnExecute; 
    lkAct := FindTAction(Result,'actPrint'       ,msg_actprint     ,msg_actprint_hint     ,'Ctrl+P'    ,0,105); lkAct.OnExecute:=@actPrint_OnExecute; 
    lkAct := FindTAction(Result,'actCommit'      ,msg_actcommit    ,msg_actcommit_hint    ,'Ctrl+C'    ,0,298); lkAct.OnExecute:=@actCommit_OnExecute;       lkAct.OnUpdate:=@actCommit_OnUpdate; 
    lkAct := FindTAction(Result,'actUnCommit'    ,msg_actuncommit  ,msg_actuncommit_hint  ,'Ctrl+U'    ,0,297); lkAct.OnExecute:=@actUnCommit_OnExecute;     lkAct.OnUpdate:=@actUnCommit_OnUpdate;
    lkAct := FindTAction(Result,'actPodbor'      ,msg_actpodbor    ,msg_actPodbor_hint    ,'Ctrl+I'    ,0,304); lkAct.OnExecute:=@actPodbor_OnExecute;       lkAct.OnUpdate:=@actCommit_OnUpdate; 
    lkAct := FindTAction(Result,'actPodborGroup' ,msg_actpodbor2   ,msg_actPodbor_hint2   ,'Ctrl+G'    ,0,312); lkAct.OnExecute:=@actPodborGroup_OnExecute;  lkAct.OnUpdate:=@actCommit_OnUpdate; 
    lkAct := FindTAction(Result,'actPodborId'    ,msg_actpodbor3   ,msg_actPodbor3_hint   ,'Ctrl+D' ,0,304); lkAct.OnExecute:=@actPodborId_OnExecute;     lkAct.OnUpdate:=@actCommit_OnUpdate; 
    RefreshView;
    Amunhotep_MainForm_TaskBar.ButtonByForm(Result).Down := true;
  end;
  //============================================================================
begin
  docId := GetGlobalVariable('J_ID');
  if(StrTrimAll(DocId)='')then exit;
  AmunhotepForm := AmunhotepForm_Create;
end.
