EXECUTE BLOCK (
  Q_J_ID TYPE OF COLUMN TABL$J_4.ID = ?J_ID
)RETURNS(
  ID                   TYPE OF COLUMN TABL$J_4.ID,
  NAME                 TYPE OF COLUMN TABL$J_4.NAME,
  FLAG_WARN            TYPE OF COLUMN TABL$J_4.FLAG_DELETE,
  FLAG_DELETE          TYPE OF COLUMN TABL$J_4.FLAG_DELETE,
  FLAG_COMMIT          TYPE OF COLUMN TABL$J_4.FLAG_COMMIT,
  TYPE_ID              TYPE OF COLUMN TABL$J_4.TYPE_ID,
  TYPE_NAME            TYPE OF COLUMN TABL$_TB_DOCS.NAME,
  COLOR_FRG            TYPE OF COLUMN TABL$_TB_DOCS.COLOR_FRG,
  COLOR_BGR            TYPE OF COLUMN TABL$_TB_DOCS.COLOR_BGR,
  DOCNUMBER            TYPE OF COLUMN TABL$J_4.DOCNUMBER,
  DOCSUM               TYPE OF COLUMN TABL$J_4.DOCSUM,
  DOCSUMVAL            TYPE OF COLUMN TABL$J_4.DOCSUMVAL,
  VALUTE_ID            TYPE OF COLUMN TABL$J_4.VALUTE_ID,
  VALUTE_NAME          TYPE OF COLUMN TABL$R_COUNTRIES.VALUTE,
  VALUTE_SHORT         TYPE OF COLUMN TABL$R_COUNTRIES.VALUTE_SHORT,
  FIRM_ID              TYPE OF COLUMN TABL$J_4.FIRM_ID,
  FIRM_NAME            TYPE OF COLUMN TABL$R_FIRMS.NAME,
  FILIAL_ID            TYPE OF COLUMN TABL$J_4.FILIAL_ID,
  FILIAL_NAME          TYPE OF COLUMN TABL$R_FILIALS.NAME,
  FILIAL_PREFIX        TYPE OF COLUMN TABL$R_FILIALS.PREFIX,
  FILIAL_GUID          TYPE OF COLUMN TABL$R_FILIALS.GUID,
  FILIAL_DATABASE_NAME TYPE OF COLUMN TABL$R_FILIALS.DATABASE_NAME,
  FILIAL_ADDRESS       TYPE OF COLUMN TABL$R_FILIALS.ADDRESS,
  FILIAL_PHONE         TYPE OF COLUMN TABL$R_FILIALS.PHONE,
  FILIAL_COMMAND_ID    TYPE OF COLUMN TABL$R_FILIALS.COMMAND_ID,
  FILIAL_WRK_ID        TYPE OF COLUMN TABL$R_FILIALS.WRK_ID,
  FILIAL_GRAPHIK       TYPE OF COLUMN TABL$R_FILIALS.GRAPHIK,
  USER_ID              TYPE OF COLUMN TABL$J_4.USER_ID,
  USER_NAME            TYPE OF COLUMN TABL$_USERS.NAME,
  WRK_DOVER            TYPE OF COLUMN TABL$R_WRK.DOVER,
  DATE_COMMIT          TYPE OF COLUMN TABL$J_4.DATE_COMMIT,
  DOCNUMBERSTR         TYPE OF COLUMN TABL$J_4.DOCNUMBERSTR,
  DOCSTR               TYPE OF COLUMN TABL$J_4.DOCSTR,
  CS_ID                TYPE OF COLUMN TABL$J_1000062.CS_ID,
  CS_NAME              TYPE OF COLUMN TABL$R_CS.NAME,
  CS_INN               TYPE OF COLUMN TABL$R_CS.INN,
  CS_AMOUNT            TYPE OF COLUMN TABL$R_CS_P.AMOUNT,
  CS_DOC_NAME          TYPE OF COLUMN TABL$R_CS_DOCS.NAME,
  CS_COMENT            TYPE OF COLUMN TABL$R_CS.COMENT,
  CS_ADDR_ID           TYPE OF COLUMN TABL$J_1000062.CS_ADDR_ID,
  CS_ADDR_NAME         TYPE OF COLUMN TABL$R_CS_ADDR.NAME,
  TMC_GROUP_ID         TYPE OF COLUMN TABL$J_1000062.TMC_GROUP_ID,
  TMC_GROUP_NAME       TYPE OF COLUMN TABL$R_TMC_GROUP.NAME,
  DAYSCNT              TYPE OF COLUMN TABL$J_1000062.DAYSCNT,
  DATE_RETURN          TYPE OF COLUMN TABL$J_1000062.DATE_RETURN,
  DATE_LAST            TYPE OF COLUMN TABL$J_1000062.DATE_LAST,
  DOCSUMLEFT           TYPE OF COLUMN TABL$J_1000062.DOCSUMLEFT,
  DOCSUMCALCBEGIN      TYPE OF COLUMN TABL$J_1000062.DOCSUMCALCBEGIN,
  DOCSUMCALC           TYPE OF COLUMN TABL$J_1000062.DOCSUMCALC,
  STATE_ID             TYPE OF COLUMN TABL$R_ENTPS_STATES.ID,
  STATE_NAME           TYPE OF COLUMN TABL$R_ENTPS_STATES.NAME,
  COUNTRIESTP_ID       TYPE OF COLUMN TABL$J_1000062.COUNTRIESTP_ID,
  COUNTRIESTP_NAME     TYPE OF COLUMN TABL$R_COUNTRIESTP.NAME,
  COUNTRIESTP_PC       TYPE OF COLUMN TABL$R_COUNTRIESTP.PC,
  CASHSUM              TYPE OF COLUMN TABL$J_4.DOCSUM,
  SUM_PC               TYPE OF COLUMN TABL$J_4.DOCSUM,
  SUMTOTAL             TYPE OF COLUMN TABL$J_4.DOCSUM,
  FLAG_RECALC          TYPE OF COLUMN TABL$J_4.FLAG_COMMIT,
  ENT_CS_ID            TYPE OF COLUMN TABL$R_CS.ID,
  ENT_CS_NAME          TYPE OF COLUMN TABL$R_CS.NAME,
  ENT_CS_INN           TYPE OF COLUMN TABL$R_CS.INN,
  ENT_CS_NDS_PAYED     TYPE OF COLUMN TABL$R_CS.NDS_PAYED,
  ENT_CS_NDS_CODE      TYPE OF COLUMN TABL$R_CS.NDS_CODE,
  ENT_CS_ADDR_ID       TYPE OF COLUMN TABL$R_CS_ADDR.ID,
  ENT_CS_ADDR_NAME     TYPE OF COLUMN TABL$R_CS_ADDR.NAME)
AS
  DECLARE VARIABLE P_CS_ADDR_ID TYPE OF COLUMN TABL$J_1000062.CS_ADDR_ID;
  DECLARE VARIABLE P_VAL_DATE   TYPE OF COLUMN TABL$J_4.DATE_COMMIT;
  DECLARE VARIABLE P_PC_DAY     TYPE OF COLUMN TABL$J_1000062.DAYSCNT;
  DECLARE VARIABLE P_MINDAYS    TYPE OF COLUMN TABL$J_1000062.DAYSCNT;
  DECLARE VARIABLE P_PRICE_NEW  TYPE OF COLUMN TABL$D_1000014.PRICE_TMC;
  DECLARE VARIABLE P_PRICE_TMP  TYPE OF COLUMN TABL$D_1000014.PRICE_TMC;
  DECLARE VARIABLE P_ACT_ID     TYPE OF COLUMN TABL$J_4.ID;
  DECLARE VARIABLE P_QUANT      TYPE OF COLUMN TABL$D_1000014.QUANT;
  DECLARE VARIABLE P_QUANTPLACE TYPE OF COLUMN TABL$D_1000014.QUANT;
  DECLARE VARIABLE P_DAYS       TYPE OF COLUMN TABL$J_1000062.DAYSCNT;
  DECLARE VARIABLE P_DAYSGONE   TYPE OF COLUMN TABL$J_1000062.DAYSCNT;
BEGIN
  SELECT FIRST 1 P.VAL FROM PROC$C_ENT_PS_DEFAULTDAYSCOUNT P INTO :P_DAYS;
  SELECT FIRST 1 P.VAL FROM PROC$C_ENT_PS_MINIMALDAYSCOUNT P INTO :P_MINDAYS;

  SELECT FIRST 1 P.ENT_CS_ID, P.ENT_CS_NAME, P.ENT_CS_INN, P.ENT_CS_NDS_PAYED,
         P.ENT_CS_NDS_CODE, P.ENT_CS_ADDR_ID, P.ENT_CS_ADDR_NAME
  FROM   PROC$D_ENT_CONST(:Q_J_ID) P
  INTO   :ENT_CS_ID, :ENT_CS_NAME, :ENT_CS_INN, :ENT_CS_NDS_PAYED,
         :ENT_CS_NDS_CODE, :ENT_CS_ADDR_ID, :ENT_CS_ADDR_NAME;

  SELECT FIRST 1 PR.ID, PR.NAME, PR.FLAG_DELETE, PR.FLAG_COMMIT, PR.TYPE_ID, PR.TYPE_NAME, PR.COLOR_FRG, PR.COLOR_BGR,
         PR.DOCNUMBER, PR.DOCSUM, PR.DOCSUMVAL, PR.VALUTE_ID, PR.VALUTE_NAME, PR.VALUTE_SHORT, PR.FIRM_ID, PR.FIRM_NAME,
         PR.FILIAL_ID, PR.FILIAL_NAME, PR.USER_ID, PR.USER_NAME, PR.WRK_DOVER, PR.DATE_COMMIT, PR.DOCNUMBERSTR,PR.DOCSTR,
           PR.FILIAL_PREFIX, PR.FILIAL_GUID, PR.FILIAL_DATABASE_NAME, PR.FILIAL_ADDRESS, PR.FILIAL_PHONE,
           PR.FILIAL_COMMAND_ID, PR.FILIAL_WRK_ID, PR.FILIAL_GRAPHIK,
         JB.CS_ID, CS.NAME, CS.INN, CS.COMENT, JB.CS_ADDR_ID, JB.TMC_GROUP_ID, TG.NAME, JB.DAYSCNT, JB.DATE_RETURN,
         JB.DOCSUMCALC, JB.DOCSUMCALCBEGIN, JB.DATE_LAST, JB.DOCSUMLEFT,
         JB.COUNTRIESTP_ID, (SELECT FIRST 1 T.NAME FROM TABL$R_COUNTRIESTP T WHERE (T.ID = JB.COUNTRIESTP_ID)) AS COUNTRIESTP_NAME
         ,(SELECT FIRST 1 T.PC FROM TABL$R_COUNTRIESTP T WHERE (T.ID = JB.COUNTRIESTP_ID)) AS COUNTRIESTP_PC
  FROM   PROC$D_4(:Q_J_ID) PR, TABL$J_1000062 JB, TABL$R_CS CS, TABL$R_TMC_GROUP TG, TABL$R_FILIALS FL
  WHERE  (JB.J_ID = PR.ID)
    AND  (CS.ID = JB.CS_ID)
    AND  (TG.ID = JB.TMC_GROUP_ID)
    AND  (FL.ID = PR.FILIAL_ID)
  INTO   :ID, :NAME, :FLAG_DELETE, :FLAG_COMMIT, :TYPE_ID, :TYPE_NAME, :COLOR_FRG, :COLOR_BGR,
         :DOCNUMBER, :DOCSUM, :DOCSUMVAL, :VALUTE_ID, :VALUTE_NAME, :VALUTE_SHORT, :FIRM_ID, :FIRM_NAME,
         :FILIAL_ID, :FILIAL_NAME, :USER_ID, :USER_NAME, :WRK_DOVER, :DATE_COMMIT, :DOCNUMBERSTR,:DOCSTR,
           :FILIAL_PREFIX, :FILIAL_GUID, :FILIAL_DATABASE_NAME, :FILIAL_ADDRESS, :FILIAL_PHONE,
           :FILIAL_COMMAND_ID, :FILIAL_WRK_ID, :FILIAL_GRAPHIK,
         :CS_ID, :CS_NAME, :CS_INN, :CS_COMENT, :CS_ADDR_ID, :TMC_GROUP_ID, :TMC_GROUP_NAME, :DAYSCNT, :DATE_RETURN,
         :DOCSUMCALC, :DOCSUMCALCBEGIN, :DATE_LAST, :DOCSUMLEFT,
         :COUNTRIESTP_ID, :COUNTRIESTP_NAME, :COUNTRIESTP_PC;

--  SELECT FIRST 1 P.PC  FROM PROC$R_COUNTRIESTP_GET_PC(:COUNTRIESTP_ID) P INTO :P_PC_DAY;
  SELECT FIRST 1 P.PC FROM PROC$D_1000062_GET_PC(:ID, :DATE_RETURN) P INTO :P_PC_DAY;

  P_CS_ADDR_ID = :CS_ADDR_ID;
  IF((:CS_ADDR_ID IS NULL)OR(:CS_ADDR_ID = 0))THEN
    SELECT FIRST 1 CSA.ID FROM TABL$R_CS_ADDR CSA WHERE(CSA.CS_ID = :CS_ID) INTO :P_CS_ADDR_ID;
  SELECT FIRST 1 PR.ADDRESS_NAME_FULL FROM PROC$R_CS_ADDR_GET(:P_CS_ADDR_ID) PR INTO :CS_ADDR_NAME;

  CS_AMOUNT = 0;

  SELECT MAX(P.VALUE_DATE)
  FROM   TABL$R_CS_P P
  WHERE  (P.CS_ID = :CS_ID)
    AND  (P.VALUE_DATE <= CURRENT_TIMESTAMP)
  INTO   :P_VAL_DATE;

  IF(:P_VAL_DATE IS NULL)THEN
    BEGIN
    CS_AMOUNT = 0.000;
    END
   ELSE
    BEGIN
    SELECT FIRST 1 PW.AMOUNT
    FROM   TABL$R_CS_P PW
    WHERE  (PW.CS_ID = :CS_ID)
      AND  (PW.VALUE_DATE = :P_VAL_DATE)
    INTO   :CS_AMOUNT;
    IF(:CS_AMOUNT IS NULL)THEN CS_AMOUNT = 0;
    END

  SELECT FIRST 1 P.DOC_NAME FROM PROC$R_CS_DOCS_FRIST(:CS_ID) P INTO :CS_DOC_NAME;

  SELECT FIRST 1 J.ID
  FROM   TABL$J_CHILDS JC, TABL$J_4 J
  WHERE  (JC.J_ID = :ID)
    AND  (J.ID = JC.J_CHILD_ID)
    AND  (J.TYPE_ID = 1000064)
  INTO  :P_ACT_ID;

  STATE_ID = 0;
  IF(EXISTS(SELECT JC1.ID
            FROM   TABL$J_CHILDS JC1, TABL$J_4 J1
            WHERE  (JC1.J_ID = :ID)
              AND  (J1.ID = JC1.J_CHILD_ID)
              AND  (J1.TYPE_ID = 1000066)
              AND  (J1.FLAG_COMMIT = 1)       ))THEN
    BEGIN
    STATE_ID = 2;
    END
   ELSE
    BEGIN
    IF(EXISTS(SELECT JC.ID
              FROM   TABL$J_CHILDS JC, TABL$J_4 J, TABL$J_CHILDS JC2, TABL$J_4 J2
              WHERE  (JC.J_ID = :ID)
                AND  (J.ID = JC.J_CHILD_ID)
                AND  (J.TYPE_ID = 1000064)
                AND  (J.FLAG_COMMIT = 1)
                AND  (JC2.J_ID = J.ID)
                AND  (J2.ID = JC2.J_CHILD_ID)
                AND  (J2.TYPE_ID = 1000065)
                AND  (J2.FLAG_COMMIT = 1)))THEN
      BEGIN
      SELECT SUM(P.QUANT)
      FROM   TABL$D_1000014 DB, TABL$J_1000014 JB, TABL$J_4 J,  TABL$P_TMC_QUANT P
      WHERE  (DB.J_ID = :P_ACT_ID)
        AND  (JB.J_ID = DB.J_ID)
        AND  (J.ID = JB.J_ID)
        AND  ((P.FIRM_ID+0) = J.FIRM_ID)
        AND  (P.TMC_ID = DB.TMC_ID)
        AND  ((P.PLACE_ID+0) = JB.PLACE_ID)
      INTO   :P_QUANT; IF (:P_QUANT IS NULL)THEN P_QUANT = 0;

      IF(:P_QUANT > 0)THEN
        STATE_ID = 4;
       ELSE
        STATE_ID = 1;
      END
    END

  SELECT FIRST 1 P.VAL FROM PROC$O_ENT_PS_DAYSCOUNT(:DATE_LAST, CURRENT_TIMESTAMP) P INTO :P_DAYSGONE;

  IF(:P_DAYSGONE > :P_DAYS)THEN
    FLAG_WARN = 1;
   ELSE
    FLAG_WARN = 0;
  SELECT FIRST 1 P.NAME FROM TABL$R_ENTPS_STATES P WHERE (P.ID = :STATE_ID) INTO :STATE_NAME;


  CASHSUM = 0;

  SELECT FIRST 1 PS.ACCOUNT_VALUE
  FROM   TABL$R_FILIALS FL, TABL$R_PAYSRC PS
  WHERE  (FL.ID = :FILIAL_ID)
    AND  (PS.FILIAL_ID = FL.ID)
    AND  (PS.ACC_ID = 301)
    AND  (PS.FIRM_ID = :FIRM_ID)
    AND  (PS.COUNTRY_ID = 1000071)
    AND  (PS.TYPE_ID = 2)
  INTO   :CASHSUM;

  IF(:DAYSCNT > :P_MINDAYS)THEN
    BEGIN
    SUM_PC    = :DOCSUM * ((:DAYSCNT * :P_PC_DAY * (100 - :CS_AMOUNT)) / 10000000);
    END
   ELSE
    BEGIN
    SUM_PC    = :DOCSUM * ((:P_MINDAYS * :P_PC_DAY) / 100000);
    END

  SUMTOTAL = :DOCSUM + :SUM_PC;

  FLAG_RECALC = 0;

  IF((:FLAG_COMMIT = 1)AND(:STATE_ID IN (0,4)))THEN
    BEGIN
    P_PRICE_NEW = 0;
    FOR
      SELECT (SELECT SUM(P.QUANT)
              FROM   TABL$P_TMC_QUANT P
              WHERE  (P.TMC_ID       = DB.TMC_ID)
                AND  ((P.FIRM_ID+0)  = J.FIRM_ID)
                AND  ((P.PLACE_ID+0) = JB.PLACE_ID)
             ),
             (SELECT SUM(TMC.MASSA_NETTO * COALESCE(CE.KURS,0))
              FROM   TABL$R_COUNTRIESEX CE
              WHERE  (CE.COUNTRY_ID = TMC.COUNTRY_ID)
                AND  (CE.NAME       = TMC.PROBE)
                AND  (CE.COUNTRIESTP_ID = :COUNTRIESTP_ID)
             )
      FROM   TABL$D_1000014 DB, TABL$J_1000014 JB, TABL$J_4 J, TABL$R_TMC TMC
      WHERE  (DB.J_ID = :P_ACT_ID)
        AND  (JB.J_ID = DB.J_ID)
        AND  (J.ID = JB.J_ID)
        AND  (TMC.ID = DB.TMC_ID)
      INTO   :P_QUANTPLACE, :P_PRICE_TMP
    DO
      BEGIN
      IF(:P_QUANTPLACE IS NULL)THEN P_QUANTPLACE = 0;
      IF(:P_PRICE_TMP  IS NULL)THEN P_PRICE_TMP  = 0;
      P_PRICE_NEW = :P_PRICE_NEW + (:P_QUANTPLACE * :P_PRICE_TMP);
      END


    IF(ABS(:P_PRICE_NEW - :DOCSUMCALC) > 0.01)THEN
      FLAG_RECALC = 1;
    END

  SUSPEND;
END
