EXECUTE BLOCK RETURNS (
   RELATION_NAME DOMN$PSTRING
  ,TRIGGER_NAME  DOMN$PSTRING
  ,PSQL          DOMN$BLOB_SQL
)AS
  DECLARE VARIABLE P_COUNTER    DOMN$INTEGER;
  DECLARE VARIABLE P_FIELD_NAME DOMN$PSTRING;
  DECLARE VARIABLE P_REF_TABLE  DOMN$PSTRING;
  DECLARE VARIABLE P_REF_FIELD  DOMN$PSTRING;
  DECLARE VARIABLE P_SQL1       DOMN$BLOB_TEXT;
  DECLARE VARIABLE P_SQL2       DOMN$BLOB_TEXT;
BEGIN
  FOR
    SELECT TRIM(R.RDB$RELATION_NAME)
    FROM   RDB$RELATIONS R
    WHERE  (R.RDB$VIEW_BLR IS NULL)
      AND  (R.RDB$SYSTEM_FLAG <> 1)
      AND  (  (R.RDB$RELATION_NAME STARTING WITH 'TABL$B_')
--            OR(R.RDB$RELATION_NAME STARTING WITH 'TABL$D_')
--            OR(R.RDB$RELATION_NAME STARTING WITH 'TABL$J_')
            OR(R.RDB$RELATION_NAME STARTING WITH 'TABL$O_')
--            OR(R.RDB$RELATION_NAME STARTING WITH 'TABL$P_')
            OR(R.RDB$RELATION_NAME STARTING WITH 'TABL$R_')
            OR(R.RDB$RELATION_NAME STARTING WITH 'TABL$W_')
           )
      AND  (EXISTS(SELECT RF.RDB$FIELD_NAME
                   FROM   RDB$RELATION_FIELDS RF
                   WHERE  (RF.RDB$RELATION_NAME = R.RDB$RELATION_NAME)
                     AND  (TRIM(RF.RDB$FIELD_NAME) = 'ID')
                   ))
    ORDER BY R.RDB$RELATION_NAME
    INTO   :RELATION_NAME
  DO
    BEGIN
    P_COUNTER = 0;
    P_SQL1    = '';
    P_SQL2    = '';
    FOR
      SELECT SEG.RDB$FIELD_NAME AS TC,
             RC1.RDB$RELATION_NAME AS TB_EX, SEG1.RDB$FIELD_NAME AS TC_EX
      FROM   RDB$RELATION_CONSTRAINTS RC, RDB$INDEX_SEGMENTS SEG,
             RDB$REF_CONSTRAINTS RF, RDB$RELATION_CONSTRAINTS RC1, RDB$INDEX_SEGMENTS SEG1
      WHERE  (TRIM(RC.RDB$RELATION_NAME) = :RELATION_NAME)
        AND  (TRIM(RC.RDB$CONSTRAINT_TYPE) = 'FOREIGN KEY')
        AND  (SEG.RDB$INDEX_NAME = RC.RDB$INDEX_NAME)
        AND  (RF.RDB$CONSTRAINT_NAME = RC.RDB$CONSTRAINT_NAME)
        AND  (RC1.RDB$CONSTRAINT_NAME = RF.RDB$CONST_NAME_UQ)
        AND  (SEG1.RDB$INDEX_NAME = RC1.RDB$INDEX_NAME)
      INTO   :P_FIELD_NAME, :P_REF_TABLE, :P_REF_FIELD
    DO
      BEGIN
      IF(TRIM(:P_REF_TABLE) <> '')THEN
        BEGIN
        P_SQL1 = :P_SQL1||
          '  IF(NEW.'||TRIM(:P_FIELD_NAME)||' IS NULL)THEN SELECT FIRST 1 T'||:P_COUNTER||'.'||TRIM(:P_REF_FIELD)||
          ' FROM '||TRIM(:P_REF_TABLE)||' T'||:P_COUNTER||' INTO NEW.'||TRIM(:P_FIELD_NAME)||'; '||ASCII_CHAR(13)||ASCII_CHAR(10);
        END
       ELSE
        BEGIN
        P_SQL2 = :P_SQL2||
          '  IF(NEW.'||TRIM(:P_FIELD_NAME)||' IS NULL)THEN NEW.'||TRIM(:P_FIELD_NAME)||' = 0; '||ASCII_CHAR(13)||ASCII_CHAR(10);
        END
      P_COUNTER = :P_COUNTER + 1;
      END

    IF(:P_COUNTER > 0)THEN
      BEGIN
      TRIGGER_NAME = SUBSTRING(:RELATION_NAME FROM 5);
      TRIGGER_NAME = 'TRIG'||:TRIGGER_NAME;
      IF(CHAR_LENGTH(:TRIGGER_NAME) > 23)THEN
        TRIGGER_NAME = SUBSTRING(:TRIGGER_NAME FROM 1 FOR 23);
      TRIGGER_NAME = :TRIGGER_NAME||'_BIU_255';
      PSQL =
        'CREATE OR ALTER TRIGGER '||:TRIGGER_NAME||' FOR '||:RELATION_NAME||' '||ASCII_CHAR(13)||ASCII_CHAR(10)||
        'ACTIVE BEFORE INSERT OR UPDATE POSITION 255 '||ASCII_CHAR(13)||ASCII_CHAR(10)||
        'AS '||ASCII_CHAR(13)||ASCII_CHAR(10)||
        'BEGIN '||ASCII_CHAR(13)||ASCII_CHAR(10)||
        '  -- This trigger was created automatically for soft filling relation constraints '||ASCII_CHAR(13)||ASCII_CHAR(10)||
        :P_SQL1||:P_SQL2||
        'END '||ASCII_CHAR(13)||ASCII_CHAR(10);
      SUSPEND;
      END
    END
END
