EXECUTE BLOCK (
  Q_J_ID TYPE OF COLUMN TABL$J_4.ID = ?J_ID
)AS
  DECLARE VARIABLE P_J_ID_1000129   TYPE OF COLUMN TABL$J_4.ID;
  DECLARE VARIABLE P_J_ID_1000136   TYPE OF COLUMN TABL$J_4.ID;
  DECLARE VARIABLE P_J_ID_1000142   TYPE OF COLUMN TABL$J_4.ID;
  DECLARE VARIABLE P_J_ID_DUMMY     TYPE OF COLUMN TABL$J_4.ID;

  DECLARE VARIABLE P_FIRM_ID        TYPE OF COLUMN TABL$J_4.FIRM_ID;
  DECLARE VARIABLE P_DATE_COMMIT    TYPE OF COLUMN TABL$J_4.DATE_COMMIT;
  DECLARE VARIABLE P_DATE_COMMIT2   TYPE OF COLUMN TABL$J_4.DATE_COMMIT;
  DECLARE VARIABLE P_CS_ID          TYPE OF COLUMN TABL$J_1000141.CS_ID;
  DECLARE VARIABLE P_CS_ADDR_ID     TYPE OF COLUMN TABL$J_1000141.CS_ADDR_ID;
  DECLARE VARIABLE P_CS_DOC_ID      TYPE OF COLUMN TABL$J_1000141.CS_DOC_ID;
  DECLARE VARIABLE P_PLACE_ID       TYPE OF COLUMN TABL$J_1000141.PLACE_ID;
  DECLARE VARIABLE P_WRK_ID         TYPE OF COLUMN TABL$J_1000141.WRK_ID;

  DECLARE VARIABLE P_ROWID          TYPE OF COLUMN TABL$D_1000141.ID;
  DECLARE VARIABLE P_COUNTER        TYPE OF COLUMN TABL$D_1000141.ID;
  DECLARE VARIABLE P_NAME           TYPE OF COLUMN TABL$D_1000141.NAME;
  DECLARE VARIABLE P_TMC_GROUP_ID   TYPE OF COLUMN TABL$D_1000141.TMC_GROUP_ID;
  DECLARE VARIABLE P_TMC_CTGR_ID    TYPE OF COLUMN TABL$D_1000141.TMC_CTGR_ID;
  DECLARE VARIABLE P_DEV_COUNTRY_ID TYPE OF COLUMN TABL$D_1000141.DEV_COUNTRY_ID;
  DECLARE VARIABLE P_BRAND_ID       TYPE OF COLUMN TABL$D_1000141.BRAND_ID;
  DECLARE VARIABLE P_YEAR_ID        TYPE OF COLUMN TABL$D_1000141.YEAR_ID;
  DECLARE VARIABLE P_STATEFINE      TYPE OF COLUMN TABL$D_1000141.STATEFINE;
  DECLARE VARIABLE P_COMENT         TYPE OF COLUMN TABL$D_1000141.COMENT;
  DECLARE VARIABLE P_MODELNAME      TYPE OF COLUMN TABL$D_1000141.MODELNAME;
  DECLARE VARIABLE P_SERIAL         TYPE OF COLUMN TABL$D_1000141.SERIAL;
  DECLARE VARIABLE P_IMG            TYPE OF COLUMN TABL$D_1000141.IMG;
  DECLARE VARIABLE P_PRICE          TYPE OF COLUMN TABL$D_1000141.PRICE;
  DECLARE VARIABLE P_QUANT          TYPE OF COLUMN TABL$D_1000141.QUANT;

  DECLARE VARIABLE P_TMC_ID         TYPE OF COLUMN TABL$R_TMC.ID;
  DECLARE VARIABLE P_TMC_NAME       TYPE OF COLUMN TABL$R_TMC.NAME;
  DECLARE VARIABLE P_TMC_GROUP_NAME TYPE OF COLUMN TABL$R_TMC_GROUP.NAME;
BEGIN
  UPDATE TABL$J_4 J SET J.FLAG_COMMIT = 1 WHERE (J.ID = :Q_J_ID);

  SELECT FIRST 1 J.FIRM_ID, JZ.CS_ID, JZ.CS_ADDR_ID, JZ.CS_DOC_ID, JZ.PLACE_ID, JZ.WRK_ID, J.DATE_COMMIT
  FROM   TABL$J_4 J, TABL$J_1000141 JZ
  WHERE  (J.ID = :Q_J_ID)
    AND  (JZ.J_ID = J.ID)
  INTO   :P_FIRM_ID, :P_CS_ID, :P_CS_ADDR_ID, :P_CS_DOC_ID, :P_PLACE_ID, :P_WRK_ID, :P_DATE_COMMIT2;

  SELECT FIRST 1 P.J_ID FROM PROC$J_INS_4(:P_FIRM_ID, 1000129, :Q_J_ID) P INTO :P_J_ID_1000129;
  UPDATE TABL$J_4 J SET J.DATE_COMMIT = :P_DATE_COMMIT2 WHERE (J.ID = :P_J_ID_1000129); 
  
  UPDATE OR INSERT INTO TABL$J_1000014(J_ID, CS_ID, CS_ADDR_ID, CS_DOC_ID, PLACE_ID, TAX_ID, TO_PLACE_ID, WRK_ID, TMC_GRID_ID)
    VALUES (:P_J_ID_1000129, :P_CS_ID, :P_CS_ADDR_ID, :P_CS_DOC_ID, :P_PLACE_ID, 1000008, 0, :P_WRK_ID, 0)
    MATCHING(J_ID);
  SELECT FIRST 1 J.DATE_COMMIT FROM TABL$J_4 J WHERE(J.ID = :P_J_ID_1000129) INTO :P_DATE_COMMIT;

  P_COUNTER = 0;
  FOR
    SELECT  D.ID, D.NAME, D.TMC_GROUP_ID, D.TMC_CTGR_ID, D.DEV_COUNTRY_ID, D.BRAND_ID
           ,D.MODELNAME, D.SERIAL, D.STATEFINE, D.YEAR_ID, D.COMENT, D.IMG
           ,D.PRICE, D.QUANT
    FROM   TABL$D_1000141 D
    WHERE  (D.J_ID = :Q_J_ID)
    ORDER BY D.ID
    INTO   :P_ROWID, :P_NAME, :P_TMC_GROUP_ID, :P_TMC_CTGR_ID, :P_DEV_COUNTRY_ID, :P_BRAND_ID
          ,:P_MODELNAME, :P_SERIAL, :P_STATEFINE, :P_YEAR_ID, :P_COMENT, :P_IMG
          ,:P_PRICE, :P_QUANT
  DO
    BEGIN
    IF(:P_NAME IS NULL)THEN P_NAME = ''; P_TMC_NAME = :P_NAME;

    INSERT INTO TABL$R_TMC (NAME, FLAG_DELETE, FLAG_LOCKED, ARTICLE, NUMSHOW
      ,EDIZM_ID, TMC_GROUP_ID, TMC_TYPE_ID, TMC_LIST_ID, COUNTRY_ID, PROBE, MASSA
      ,MASSA_NETTO, LIMIT, DEV_COUNTRY_ID, TMC_BRAND_ID, YEAR_ID, STATEFINE, COMENT
      ,MODELNAME, IMG, LGTH, DIAM
    )VALUES (:P_TMC_NAME, 0, 0, '', :P_SERIAL, 1000000, :P_TMC_GROUP_ID, 1000005, 0
      ,0, '', 0, 0, 0, :P_DEV_COUNTRY_ID, :P_BRAND_ID
      ,:P_YEAR_ID, :P_STATEFINE, :P_COMENT, :P_MODELNAME, :P_IMG, 0, 0
    )RETURNING ID INTO :P_TMC_ID;

    INSERT INTO TABL$R_TMC_P (TMC_ID, PRICE, PRICE_IN, PRICE_1, PRICE_2, PRICE_3, PRICE_4, PRICE_5, J_ID, VALUE_DATE)
      VALUES (:P_TMC_ID, :P_PRICE, :P_PRICE,:P_PRICE,:P_PRICE,:P_PRICE,:P_PRICE, :P_PRICE, :P_J_ID_1000129, :P_DATE_COMMIT);
    INSERT INTO TABL$D_1000014 (J_ID, NAME, TMC_ID, PRICE, QUANT, J_BILLS_ID, PRICE_TMC)
      VALUES (:P_J_ID_1000129, '', :P_TMC_ID, :P_PRICE, :P_QUANT, :Q_J_ID, :P_PRICE);
    P_COUNTER = :P_COUNTER + 1;  
    END
  IF(:P_COUNTER > 0)THEN
    BEGIN
    UPDATE TABL$J_4 J SET J.FLAG_COMMIT = 1 WHERE (J.ID = :P_J_ID_1000129);
    END
   ELSE
    BEGIN
--    DELETE FROM TABL$J_4 J WHERE (J.ID = :P_J_ID_1000129);
    END 

  SELECT FIRST 1 P.J_ID FROM PROC$J_INS_1000136(:P_FIRM_ID, :P_CS_ID, NULL) P INTO :P_J_ID_1000136;
  UPDATE TABL$J_4 J SET J.DATE_COMMIT = :P_DATE_COMMIT2 WHERE (J.ID = :P_J_ID_1000136); 
  UPDATE OR INSERT INTO TABL$J_1000014(J_ID, CS_ID, CS_ADDR_ID, CS_DOC_ID, PLACE_ID, WRK_ID)
    VALUES (:P_J_ID_1000136, :P_CS_ID, :P_CS_ADDR_ID, :P_CS_DOC_ID, :P_PLACE_ID, :P_WRK_ID)
    MATCHING(J_ID);
  SELECT FIRST 1 P.J_ID
  FROM   PROC$J_INS_1000136_1000014(:Q_J_ID, :P_J_ID_1000136) P
  INTO   :P_J_ID_DUMMY;
  UPDATE OR INSERT INTO TABL$J_CHILDS(J_ID, J_CHILD_ID)
    VALUES(:Q_J_ID, :P_J_ID_1000136)
    MATCHING(J_ID, J_CHILD_ID);
  UPDATE TABL$J_4 J SET J.FLAG_COMMIT = 1 WHERE (J.ID = :P_J_ID_1000136);

  -- Акт списания запчастей
  SELECT FIRST 1 P.J_ID FROM PROC$J_INS_1000142(:P_FIRM_ID, NULL) P INTO :P_J_ID_1000142;
  UPDATE OR INSERT INTO TABL$J_1000014(J_ID, PLACE_ID, WRK_ID)
    VALUES (:P_J_ID_1000136, :P_PLACE_ID, :P_WRK_ID)
    MATCHING(J_ID);
  SELECT FIRST 1 P.J_ID
  FROM   PROC$J_INS_1000142_1000014(:Q_J_ID, :P_J_ID_1000142) P
  INTO   :P_J_ID_DUMMY;
  
  P_COUNTER = 0;
  SELECT COALESCE(COUNT(D.ID),0)
  FROM   TABL$D_1000014 D
  WHERE  (D.J_ID = :P_J_ID_1000142)
  INTO   :P_COUNTER;
  IF(:P_COUNTER > 0)THEN
    BEGIN
    UPDATE OR INSERT INTO TABL$J_CHILDS(J_ID, J_CHILD_ID)
      VALUES(:Q_J_ID, :P_J_ID_1000142)
      MATCHING(J_ID, J_CHILD_ID);
    END
   ELSE
    BEGIN
--    DELETE FROM TABL$J_4 J WHERE (J.ID = :P_J_ID_1000142);
    END
END
