{$IFNDEF PEAKTOP:GLOBAL_VARIABLES.INC}         {$I PEAKTOP:GLOBAL_VARIABLES.INC}         {$ENDIF}
{$IFNDEF PEAKTOP:OBJ/TCOLUMNEH.INC}            {$I PEAKTOP:OBJ/TCOLUMNEH.INC}            {$ENDIF}
{$IFNDEF PEAKTOP:OBJ/TIMAGELIST.INC}           {$I PEAKTOP:OBJ/TIMAGELIST.INC}           {$ENDIF}
{$IFNDEF PEAKTOP:OBJ/TACTION.INC}              {$I PEAKTOP:OBJ/TACTION.INC}              {$ENDIF}
{$IFNDEF PEAKTOP:OBJ/TXCGRADIENTPANELVISTA.INC}{$I PEAKTOP:OBJ/TXCGRADIENTPANELVISTA.INC}{$ENDIF}
{$IFNDEF PEAKTOP:IDE/ERP/DBO/FILENAMES.INC}    {$I PEAKTOP:IDE/ERP/DBO/FILENAMES.INC}    {$ENDIF}
{$IFNDEF PEAKTOP:IDE/ERP/DBO/DBGRID/GETCELLPARAMS_JRNL.INC}{$I PEAKTOP:IDE/ERP/DBO/DBGRID/GETCELLPARAMS_JRNL.INC}{$ENDIF}
const
  msg_invalid_resource   = 'Неверный файл ресурсов'; 
  msg_caption            = 'Производственная программа'; 
  msg_actrefresh         = 'Сохранить'; 
  msg_actrefresh_hint    = 'Сохранить изменения в документе'; 
  msg_actcommit          = 'Провести'; 
  msg_actcommit_hint     = 'Провести документ'; 
  msg_actuncommit        = 'Отменить'; 
  msg_actuncommit_hint   = 'Отменить проведение документа'; 
  msg_actprint           = 'Печать'; 
  msg_actprint_hint      = 'Печать документа'; 
  msg_actdocdocscan      = 'Сканировать'; 
  msg_actdocdocscan_hint = 'Сканировать на наличие новых накладных'; 
  msg_actdocdocdel       = 'Удалить'; 
  msg_actdocdocdel_hint  = 'Удалить документ из производственной программы'+#13#10+' (не удалает накладной !)'; 
  msg_actdocwrkins       = 'Заполнить'; 
  msg_actdocwrkins_hint  = 'Заполнить имеющимися сотрудниками'; 
  msg_actdocwrkadd       = 'Добавить'; 
  msg_actdocwrkadd_hint  = 'Добавить сотрудника'; 
  msg_actdocwrkdel       = 'Удалить'; 
  msg_actdocwrkdel_hint  = 'Удалить сотрудника'; 
var 
  DocForm          :TAmunhotepForm; 
  TopBar           :TxcGradientPanelVista; 
  ImgLogo          :TImage; 
  ToolBar          :TxcGradientPanelVista; 
  PanelTop         :TxcGradientPanel; 
  PCDoc            :TxcPageControlEx; 
  tsDoc            :TxcTabSheet; 
  tsDocWrk         :TxcTabSheet; 
  ToolBarDoc       :TxcGradientPanelVista; 
  ToolBarDocWrk    :TxcGradientPanelVista; 
  dbgDoc           :TDBGridEh; 
  dbgDocWrk        :TDBGridEh; 
  trJrnl           :TxFBTransaction; 
  dtsJrnl          :TxFBDataSet; 
  dtsDoc           :TxFBDataSet; 
  dtsDocWrk        :TxFBDataSet; 
  DSdtsJrnl        :TDataSource; 
  DSdtsDoc         :TDataSource; 
  DSdtsDocWrk      :TDataSource; 
  dbeDOCNUMBER     :TDBEditEh; 
  dbdtpDATE_COMMIT :TDBDateTimeEditEh; 
  dbeUSER_NAME     :TDBEditEh; 
  dbeFIRM_NAME     :TDBEditEh; 
  dbeFILIAL_NAME   :TDBEditEh; 
  dbeNAME          :TDBEditEh; 
  //============================================================================
  procedure CloseDataSets;
  begin
    if dtsJrnl.Active then
      begin
      if(dtsJrnl.State <> dsBrowse)then
        try dtsJrnl.Post; except dtsJrnl.Cancel; end;
      dtsJrnl.Close;
      end;
    if trJrnl.InTransaction then
      trJrnl.Commit;
  end;
  //============================================================================
  procedure RefreshView;
  begin
    CloseDataSets;
    dtsJrnl.SelectSQL.Text  := 'SELECT P.* FROM PROC$D_4('''+DocForm.FileName+''') P ';
    dtsJrnl.RefreshSQL.Text := 'SELECT P.* FROM PROC$D_4(?ID) P ';
    dtsJrnl.ModifySQL.Text  := 
      'UPDATE TABL$J_4 J1 SET '+#13#10+
      '  J1.NAME        = ?NAME '+#13#10+
      ' ,J1.DATE_COMMIT = ?DATE_COMMIT '+#13#10+
      'WHERE (J1.ID = ?ID);';
    dtsDoc.DataSource      := DSdtsJrnl;  
    dtsDoc.SelectSQL.Text  := 'SELECT P.* FROM PROC$D_GET_1000101DOC(?ID) P ';
    dtsDoc.RefreshSQL.Text := 'SELECT FIRST 1 P.* FROM PROC$D_GET_1000101DOC(?J_ID) P WHERE (P.D_ID = ?D_ID) ';
    dtsDoc.DeleteSQL.Text  := 'DELETE FROM TABL$D_1000101 D0001 WHERE (D0001.ID = ?D_ID)';  

    dtsDocWrk.DataSource := DSdtsJrnl;  
    dtsDocWrk.SelectSQL.Text := 
      'SELECT D0001.J_ID, D0001.FLAG_DELETE, D0001.ID, D0001.WRK_ID '+#13#10+
      '      ,D0001.WRK_POST_ID, D0001.KOEF, D0001.NAME, D0001.CALCSUM '+#13#10+           
      '      ,(SELECT FIRST 1 T0003.NAME FROM TABL$R_WRK T0003 WHERE (T0003.ID = D0001.WRK_ID)) AS WRK_ID_ '+#13#10+
      '      ,(SELECT FIRST 1 T0005.NAME FROM TABL$R_WRK_POSTS T0005 WHERE (T0005.ID = D0001.WRK_POST_ID)) AS WRK_POST_ID_ '+#13#10+
      'FROM   TABL$D_1000101WRK D0001 '+#13#10+ 
      'WHERE (D0001.J_ID = ?ID) '+#13#10+
      'ORDER BY WRK_POST_ID_, WRK_ID_ '+#13#10;
    dtsDocWrk.RefreshSQL.Text := 
      'SELECT FIRST 1 D0001.J_ID, D0001.FLAG_DELETE, D0001.ID, D0001.WRK_ID '+#13#10+
      '      ,D0001.WRK_POST_ID, D0001.KOEF, D0001.NAME, D0001.CALCSUM '+#13#10+           
      '      ,(SELECT FIRST 1 T0003.NAME FROM TABL$R_WRK T0003 WHERE (T0003.ID = D0001.WRK_ID)) AS WRK_ID_ '+#13#10+
      '      ,(SELECT FIRST 1 T0005.NAME FROM TABL$R_WRK_POSTS T0005 WHERE (T0005.ID = D0001.WRK_POST_ID)) AS WRK_POST_ID_ '+#13#10+
      'FROM   TABL$D_1000101WRK D0001 '+#13#10+ 
      'WHERE (D0001.ID = ?ID) ';
    dtsDocWrk.ModifySQL.Text := 
      'UPDATE TABL$D_1000101WRK D0001 SET '+#13#10+
      '  D0001.NAME = ?NAME '+#13#10+
      ' ,D0001.KOEF = ?KOEF '+#13#10+
      'WHERE (D0001.ID = ?ID)';  
    dtsDocWrk.DeleteSQL.Text := 'DELETE FROM TABL$D_1000101WRK D0001 WHERE (D0001.ID = ?ID)';  
    try 
      dtsJrnl.Open; 
    except 
      // Dialogs.MessageDlg(qrRef.SQL.Text, mtError, [mbOk]);
    end;
  end;
  //============================================================================
  procedure dbgDocWrk_OnGetCellParams(Sender: TObject; Column: TColumnEh; 
              AFont: TFont; var Background: TColor; State: TGridDrawState);
  begin
   if(Column.Tag=666)then exit;
   if(not(Column.Field.DataSet.Active))then exit;
   if(not(Column.Field.DataSet.RecordCount > 0))then exit;
   //if    (Column.Field.DataSet.FieldByName('FLAG_COMMIT').AsInteger=0)then aFont.Style:= aFont.Style + [fsBold     ];
   //Background := Column.Field.DataSet.FieldByName('COLOR_BGR').AsInteger;
   //aFont.Color:= Column.Field.DataSet.FieldByName('COLOR_FRG').AsInteger;
   if(Background=clWhite)then Background := Amunhotep_MainForm_StyleManager.Colors.Window;
   if(aFont.Color=Background)then aFont.Color := Amunhotep_MainForm_StyleManager.Colors.Border;
  end;
  //============================================================================
  procedure actRefresh_OnExecute(Sender :TObject);
  begin
    RefreshView;
  end;
  //============================================================================
  procedure actCommit_OnExecute(Sender :TObject);
  begin
    if not(Dialogs.MessageDlg('Провести документ ?', mtConfirmation, [mbYes, mbNo])=mrYes)then exit;
    CloseDataSets;
    ExecSQL(FBDataBase, 'UPDATE TABL$J_4 J SET J.FLAG_COMMIT = 1 WHERE (J.ID = '''+DocForm.FileName+''')');
    RefreshView;
  end;
  //============================================================================
  procedure actCommit_OnUpdate(Sender :TObject);
  var
    lk_Enabled :Boolean;
  begin
    lk_Enabled := dtsJrnl.Active;
    if(lk_Enabled)then lk_Enabled := (dtsJrnl.RecordCount>0);
    if(lk_Enabled)then lk_Enabled := (dtsJrnl.FieldByName('FLAG_COMMIT').AsInteger = 0);
    TCustomAction(Sender).Enabled := lk_Enabled;
  end;
  //============================================================================
  procedure actUnCommit_OnExecute(Sender :TObject);
  begin
    if not(Dialogs.MessageDlg('Отменить проводку документа ?', mtConfirmation, [mbYes, mbNo])=mrYes)then exit;
    CloseDataSets;
    ExecSQL(FBDataBase, 'UPDATE TABL$J_4 J SET J.FLAG_COMMIT = 0 WHERE (J.ID = '''+DocForm.FileName+''')');
    RefreshView;
  end;
  //============================================================================
  procedure actUnCommit_OnUpdate(Sender :TObject);
  var
    lk_Enabled :Boolean;
  begin
    lk_Enabled := dtsJrnl.Active;
    if(lk_Enabled)then lk_Enabled := (dtsJrnl.RecordCount>0);
    if(lk_Enabled)then lk_Enabled := (dtsJrnl.FieldByName('FLAG_COMMIT').AsInteger = 1);
    TCustomAction(Sender).Enabled := lk_Enabled;
  end;
  //============================================================================
  procedure actPrint_OnExecute(Sender :TObject);
  begin
    SetGlobalVariable('J_ID', DocForm.FileName);
    call(StrAbsolutePath('./PRINT.PS', ScriptName));
  end;
  //============================================================================
  procedure actCalcWrk_OnExecute(Sender :TObject);
  var
    lkSQL :string;
  begin
    lkSQL := 'EXECUTE PROCEDURE PROC$D_CALC_1000101_WRK('''+dtsJrnl.FieldByName('ID').AsString+''')';
    CloseDataSets;
    ExecSQL(FBDataBase, lkSQL);
    RefreshView;
  end;
  //============================================================================
  procedure actDocDocScan_OnExecute(Sender :TObject);
  begin
    SetGlobalVariable('J_ID', DocForm.FileName);
    call(StrAbsolutePath('./NEW.PS', ScriptName));
    RefreshView;
  end;
  //============================================================================
  procedure actDocDocDel_OnExecute(Sender :TObject);
  var
    lkSQL :string;
  begin
    if(Dialogs.MessageDlg(msg_actdocdocdel_hint+' ?', mtConfirmation, [mbYes, mbNo]) <> mrYes)then exit;
    lkSQL := 'DELETE FROM TABL$D_1000101 D0001 WHERE (D0001.ID = '''+dtsDoc.FieldByName('D_ID').AsString+''')';
    CloseDataSets;
    ExecSQL(FBDataBase, lkSQL);
    RefreshView;
  end;
  //============================================================================
  procedure actDocDocDel_OnUpdate(Sender :TObject);
  var
    lk_Enabled :Boolean;
  begin
    lk_Enabled := dtsJrnl.Active;
    if(lk_Enabled)then lk_Enabled := (dtsJrnl.RecordCount>0);
    if(lk_Enabled)then lk_Enabled := (dtsJrnl.FieldByName('FLAG_COMMIT').AsInteger = 0);
    if(lk_Enabled)then lk_Enabled := dtsDoc.Active;
    if(lk_Enabled)then lk_Enabled := (dtsDoc.RecordCount > 0);
    TCustomAction(Sender).Enabled := lk_Enabled;
  end;
  //============================================================================
  procedure actDocWrkIns_OnExecute(Sender :TObject);
  var
    lkSQL  :string;
  begin
    if(Dialogs.MessageDlg(msg_actdocwrkins_hint+' ?', mtConfirmation, [mbYes, mbNo]) <> mrYes)then exit;
    lkSQL  := 
      'EXECUTE BLOCK AS '+#13#10+
      '  DECLARE VARIABLE P_J_ID        TYPE OF COLUMN TABL$D_1000101WRK.J_ID; '+#13#10+
      '  DECLARE VARIABLE P_DATE        TYPE OF COLUMN TABL$J_4.DATE_COMMIT; '+#13#10+
      '  DECLARE VARIABLE P_FIRM_ID     TYPE OF COLUMN TABL$J_4.FIRM_ID; '+#13#10+
      '  DECLARE VARIABLE P_WRK_ID      TYPE OF COLUMN TABL$D_1000101WRK.WRK_ID; '+#13#10+
      '  DECLARE VARIABLE P_WRK_POST_ID TYPE OF COLUMN TABL$D_1000101WRK.WRK_POST_ID; '+#13#10+
      'BEGIN '+#13#10+
      '  P_J_ID = '+dtsJrnl.FieldByName('ID').AsString+'; '+#13#10+
      '  SELECT FIRST 1 J.DATE_COMMIT, J.FIRM_ID '+#13#10+
      '  FROM   TABL$J_4 J '+#13#10+
      '  WHERE  (J.ID = :P_J_ID) '+#13#10+
      '  INTO   :P_DATE, :P_FIRM_ID; '+#13#10+
      '  DELETE FROM TABL$D_1000101WRK W WHERE (W.J_ID = :P_J_ID); '+#13#10+
      '  FOR '+#13#10+
      '    SELECT WW.WRK_ID, WW.WRK_POST_ID '+#13#10+
      '    FROM   TABL$R_WRK_WORK WW '+#13#10+
      '    WHERE  ((WW.DATE_BEGIN <= :P_DATE) OR (WW.DATE_END >= :P_DATE)) '+#13#10+
      '      AND  (WW.FIRM_ID = :P_FIRM_ID) '+#13#10+
      '      AND  (WW.WRK_POST_ID IN (1000008, 1000009, 1000010)) '+#13#10+
      '    ORDER BY WW.WRK_POST_ID, WW.WRK_ID '+#13#10+
      '    INTO   :P_WRK_ID, :P_WRK_POST_ID '+#13#10+
      '  DO '+#13#10+
      '    INSERT INTO TABL$D_1000101WRK(J_ID, WRK_ID, WRK_POST_ID, KOEF) '+#13#10+
      '      VALUES(:P_J_ID, :P_WRK_ID, :P_WRK_POST_ID, 100); '+#13#10+
      'END';
    CloseDataSets;
    ExecSQL(FBDataBase, lkSQL);
    RefreshView;
  end;
  //============================================================================
  procedure actDocWrkAdd_OnExecute(Sender :TObject);
  begin
  end;
  //============================================================================
  procedure actDocWrkDel_OnExecute(Sender :TObject);
  var
    lkSQL :string;
  begin
    if(Dialogs.MessageDlg(msg_actdocwrkdel_hint+' ?', mtConfirmation, [mbYes, mbNo]) <> mrYes)then exit;
    lkSQL := 'DELETE FROM TABL$D_1000101WRK D0001 WHERE (D0001.ID = '''+dtsDocWrk.FieldByName('ID').AsString+''')';
    CloseDataSets;
    ExecSQL(FBDataBase, lkSQL);
    RefreshView;
  end;
  //============================================================================
  procedure actDocWrkDel_OnUpdate(Sender :TObject);
  var
    lk_Enabled :Boolean;
  begin
    lk_Enabled := dtsJrnl.Active;
    if(lk_Enabled)then lk_Enabled := (dtsJrnl.RecordCount>0);
    if(lk_Enabled)then lk_Enabled := (dtsJrnl.FieldByName('FLAG_COMMIT').AsInteger = 0);
    if(lk_Enabled)then lk_Enabled := dtsDocWrk.Active;
    if(lk_Enabled)then lk_Enabled := (dtsDocWrk.RecordCount > 0);
    TCustomAction(Sender).Enabled := lk_Enabled;
  end;
  //============================================================================
  procedure dtsJrnl_AfterOpen(DataSet :TDataSet);
  begin
    if not dtsDocWrk.Active then dtsDocWrk.Open;
    if not dtsDoc.Active then dtsDoc.Open;
  end;
  //============================================================================
  procedure dtsJrnl_BeforeClose(DataSet :TDataSet);
  begin
    if dtsDocWrk.Active then
      begin
      if(dtsDocWrk.State <> dsBrowse)then
        try dtsDocWrk.Post; except dtsDocWrk.Cancel; end;
      dtsDocWrk.Close;
      end;
    if dtsDoc.Active then
      begin
      if(dtsDoc.State <> dsBrowse)then
        try dtsDoc.Post; except dtsDoc.Cancel; end;
      dtsDoc.Close;
      end;
  end;
  //============================================================================
  procedure dtsJrnl_AfterScroll(DataSet :TDataSet);
  var
    lkCap :string;
  begin
    lkCap := DataSet.FieldByName('TYPE_NAME').AsString+' № '+DataSet.FieldByName('DOCNUMBERSTR').AsString; 
    TopBar.Caption := '      '+lkCap;
    DocForm.SetCaption('['+DataSet.FieldByName('DOCNUMBERSTR').AsString+'] '+lkCap);
  end;
  //============================================================================
  procedure dtsDoc_AfterOpen(DataSet :TDataSet);
  begin
  end;
  //============================================================================
  procedure dtsDoc_BeforeClose(DataSet :TDataSet);
  begin
  end;
  //============================================================================
  procedure dtsDoc_AfterScroll(DataSet :TDataSet);
  begin
  end;
  //============================================================================
  procedure dtsDocWrk_AfterOpen(DataSet :TDataSet);
  begin
  end;
  //============================================================================
  procedure dtsDocWrk_BeforeClose(DataSet :TDataSet);
  begin
  end;
  //============================================================================
  procedure dtsDocWrk_AfterScroll(DataSet :TDataSet);
  begin
  end;
  //============================================================================
  procedure dbeUSER_NAME_OnEditButtonClick(Sender :TObject; var Handled : Boolean);
  var
    lkVariableName :string;
    lkBUFFER_ID    :string;
    lkSQL          :string;
  begin
  {
     lkVariableName := 'TABLE_ID';
     lkBUFFER_ID := DataSet.FieldByName('FIRM_ID').AsString;
     SetGlobalVariable(lkVariableName, lkBUFFER_ID);
     call(StrAbsolutePath('../../REF/FIRMS/DEFAULT_DLG.PS', ScriptName));
     lkBUFFER_ID := GetGlobalVariable(lkVariableName);
     if( (UpperCase(lkBUFFER_ID)<>'NULL') and (StrTrimAll(lkBUFFER_ID)<>'0') )then
       begin
       lkSQL := 'UPDATE TABL$R_ TB SET TB.FIRM_ID = '''+lkBUFFER_ID+''' WHERE(TB.ID = '''+DocId+''')';
       CloseDataSets;
       ExecSQL(FBDataBase, lkSQL);
       RefreshView;
       Handled := true; 
       end;
  }
  end;
  //============================================================================
  procedure dbeFIRM_NAME_OnEditButtonClick(Sender :TObject; var Handled : Boolean);
  var
    lkVariableName :string;
    lkBUFFER_ID    :string;
    lkSQL          :string;
  begin
  {
     lkVariableName := 'TABLE_ID';
     lkBUFFER_ID := DataSet.FieldByName('FIRM_ID').AsString;
     SetGlobalVariable(lkVariableName, lkBUFFER_ID);
     call(StrAbsolutePath('../../REF/FIRMS/DEFAULT_DLG.PS', ScriptName));
     lkBUFFER_ID := GetGlobalVariable(lkVariableName);
     if( (UpperCase(lkBUFFER_ID)<>'NULL') and (StrTrimAll(lkBUFFER_ID)<>'0') )then
       begin
       lkSQL := 'UPDATE TABL$R_ TB SET TB.FIRM_ID = '''+lkBUFFER_ID+''' WHERE(TB.ID = '''+DocId+''')';
       CloseDataSets;
       ExecSQL(FBDataBase, lkSQL);
       RefreshView;
       Handled := true; 
       end;
  }
  end;
  //============================================================================
  procedure dbeFILIAL_NAME_OnEditButtonClick(Sender :TObject; var Handled : Boolean);
  var
    lkVariableName :string;
    lkBUFFER_ID    :string;
    lkSQL          :string;
  begin
  {
     lkVariableName := 'TABLE_ID';
     lkBUFFER_ID := DataSet.FieldByName('FIRM_ID').AsString;
     SetGlobalVariable(lkVariableName, lkBUFFER_ID);
     call(StrAbsolutePath('../../REF/FIRMS/DEFAULT_DLG.PS', ScriptName));
     lkBUFFER_ID := GetGlobalVariable(lkVariableName);
     if( (UpperCase(lkBUFFER_ID)<>'NULL') and (StrTrimAll(lkBUFFER_ID)<>'0') )then
       begin
       lkSQL := 'UPDATE TABL$R_ TB SET TB.FIRM_ID = '''+lkBUFFER_ID+''' WHERE(TB.ID = '''+DocId+''')';
       CloseDataSets;
       ExecSQL(FBDataBase, lkSQL);
       RefreshView;
       Handled := true; 
       end;
  }
  end;
  //============================================================================
  procedure DocForm_OnClose(Sender :TObject; var Action :TCloseAction);
  begin
    Action := caFree;
  end; 
  //============================================================================
  function DocForm_Create(const aJ_ID :string):TAmunhotepForm;
  var
    lkFileName :string;
    lkResBody  :string;
    lkStrm     :TMemoryStream;
    lkAct      :TAction;
    lkCol      :TColumnEh;
    i          :Integer;
  begin
    DontAutoFree;
    lkFileName := StrAbsolutePath('./EDIT.XFM', ScriptName);
    lkResBody  := StringsLoadFromFile(lkFileName);
    if(lkResBody = '')then 
      begin
      Dialogs.MessageDlg(msg_invalid_resource+#13#10+lkFileName, mtWarning, [mbOK]);
      exit;
      end;
    Result          := TAmunhotepForm(StrToComponent(lkResBody));
    Result.OnClose  := @DocForm_OnClose;
    Result.FileName := aJ_ID;
    try
      lkStrm := TMemoryStream.Create;
      if StreamLoadFromFile(PrepareAbsoleteFileName(ERP_FILENAME_ICO_DOC),lkStrm)then
        Result.Icon.LoadFromStream(lkStrm);
    finally
     lkStrm.Free;
    end;
    Result.SetCaption(msg_caption);
    TopBar := TxcGradientPanelVista(Result.FindComponent('TopBar')); 
    with TopBar do 
      begin 
      Caption    := #$20#$20#$20#$20#$20#$20+msg_caption; 
      Font.Color := Amunhotep.MainForm.StyleManager.Colors.Window; 
      Font.Name  := 'Verdana'; 
      Font.Size  := 14; 
      Font.Style := [fsBold]; 
      end; 
    ImgLogo := TImage(Result.FindComponent('ImgLogo')); 
    try 
      lkStrm  := TMemoryStream.Create; 
      if StreamLoadFromFile(PrepareAbsoleteFileName(ERP_FILENAME_BMP_DOC), lkStrm)then 
        ImgLogo.Picture.Bitmap.LoadFromStream(lkStrm); 
    finally 
      lkStrm.Free; 
    end; 
    ToolBar       := TxcGradientPanelVista(Result.FindComponent('ToolBar'      )); TxcGradientPanelVista_SetColorsToolBar(ToolBar      ); ToolBar.Font.Style       := [fsBold];
    ToolBarDoc    := TxcGradientPanelVista(Result.FindComponent('ToolBarDoc'   )); TxcGradientPanelVista_SetColorsToolBar(ToolBarDoc   ); ToolBarDoc.Font.Style    := [fsBold];
    ToolBarDocWrk := TxcGradientPanelVista(Result.FindComponent('ToolBarDocWrk')); TxcGradientPanelVista_SetColorsToolBar(ToolBarDocWrk); ToolBarDocWrk.Font.Style := [fsBold];
    PanelTop      := TxcGradientPanel(Result.FindComponent('PanelTop'));
    PCDoc         := TxcPageControlEx(Result.FindComponent('PCDoc'));
    tsDoc         := TxcTabSheet(Result.FindComponent('tsDoc'   )); tsDoc.ImageIndex    :=  31;
    tsDocWrk      := TxcTabSheet(Result.FindComponent('tsDocWrk')); tsDocWrk.ImageIndex := 348;
    PCDoc.ActivePageIndex := 0;
    dbeDOCNUMBER                         := TDBEditEh(Result.FindComponent('dbeDOCNUMBER'));
    with dbeDOCNUMBER do 
      begin 
      Color      := Amunhotep.MainForm.StyleManager.Colors.Window;
      Font.Color := Amunhotep.MainForm.StyleManager.Colors.Border;
      end; 
    dbdtpDATE_COMMIT                     := TDBDateTimeEditEh(Result.FindComponent('dbdtpDATE_COMMIT'));
    with dbdtpDATE_COMMIT do 
      begin 
      Color      := Amunhotep.MainForm.StyleManager.Colors.Window;
      Font.Color := Amunhotep.MainForm.StyleManager.Colors.Border;
      end; 
    dbeUSER_NAME                         := TDBEditEh(Result.FindComponent('dbeUSER_NAME'));
    with dbeUSER_NAME do 
      begin 
      Color      := Amunhotep.MainForm.StyleManager.Colors.Window;
      Font.Color := Amunhotep.MainForm.StyleManager.Colors.Border;
      end; 
    dbeFIRM_NAME                         := TDBEditEh(Result.FindComponent('dbeFIRM_NAME'));
    with dbeFIRM_NAME do 
      begin 
      Color      := Amunhotep.MainForm.StyleManager.Colors.Window;
      Font.Color := Amunhotep.MainForm.StyleManager.Colors.Border;
      end; 
    dbeFILIAL_NAME                       := TDBEditEh(Result.FindComponent('dbeFILIAL_NAME'));
    with dbeFILIAL_NAME do 
      begin 
      Color      := Amunhotep.MainForm.StyleManager.Colors.Window;
      Font.Color := Amunhotep.MainForm.StyleManager.Colors.Border;
      end; 
    dbeNAME                              := TDBEditEh(Result.FindComponent('dbeNAME'));
    with dbeNAME do 
      begin 
      Color      := Amunhotep.MainForm.StyleManager.Colors.Window;
      Font.Color := Amunhotep.MainForm.StyleManager.Colors.Border;
      end; 
    dbgDoc := TDBGridEh(Result.FindComponent('dbgDoc'));
    with dbgDoc do 
      begin 
      AllowedOperations := [];
      Color      := Amunhotep.MainForm.StyleManager.Colors.Window;
      Font.Color := Amunhotep.MainForm.StyleManager.Colors.Border;
      FixedColor      := Amunhotep.MainForm.StyleManager.Colors.Foreground;
      TitleFont.Color := Amunhotep.MainForm.StyleManager.Colors.Border;
      TitleFont.Style := [fsBold];
      UseMultiTitle   := true;
      DrawMemoText    := true; 
      FrozenCols      := 0; 
      FooterRowCount  := 0; 
      SumList.Active  := false; 
      OnGetCellParams := @ERP_DBGridEh_OnGetCellParams_Jrnl;
      end; 
    dbgDocWrk                            := TDBGridEh(Result.FindComponent('dbgDocWrk'));
    with dbgDocWrk do 
      begin 
      AllowedOperations := [alopUpdateEh];
      Color      := Amunhotep.MainForm.StyleManager.Colors.Window;
      Font.Color := Amunhotep.MainForm.StyleManager.Colors.Border;
      FixedColor      := Amunhotep.MainForm.StyleManager.Colors.Foreground;
      TitleFont.Color := Amunhotep.MainForm.StyleManager.Colors.Border;
      TitleFont.Style := [fsBold];
      UseMultiTitle   := true;
      DrawMemoText    := true; 
      FrozenCols      := 0; 
      FooterRowCount  := 0; 
      SumList.Active  := false; 
      OnGetCellParams := @dbgDocWrk_OnGetCellParams;
      Columns.Clear;  
      lkCol := CreateTColumnEh(dbgDocWrk,'ID'          ,'# ### ##0'   ,'№ записи'           , 60,taRightJustify);
      with lkCol do
        begin
        Color    := FixedColor;
        ReadOnly := false;
        end;
      lkCol := CreateTColumnEh(dbgDocWrk,'WRK_ID_'     ,''            ,'Сотрудник|Ф.И.О.'   ,120,taLeftJustify );
      with lkCol do
        begin
        Color    := FixedColor;
        ReadOnly := false;
        end;
      lkCol := CreateTColumnEh(dbgDocWrk,'WRK_POST_ID_',''            ,'Сотрудник|Должность',140,taLeftJustify );
      with lkCol do
        begin
        Color    := FixedColor;
        ReadOnly := false;
        end;{
      lkCol := CreateTColumnEh(dbgDocWrk,'KOEF'        ,'# ### ##0.00','Коэффф. участия'    , 72,taRightJustify);
      with lkCol do
        begin
        AlwaysShowEditButton := true;
        ButtonStyle          := cbsDropDown;
        AutoDropDown         := true;
        ReadOnly             := false;
        end; }
      lkCol := CreateTColumnEh(dbgDocWrk,'CALCSUM'      ,'# ### ##0.00','заработано'        , 72,taRightJustify);
      with lkCol do
        begin
        Color    := dbgDocWrk.FixedColor;
        ReadOnly := true;
        end;
      lkCol := CreateTColumnEh(dbgDocWrk,'NAME'        ,''            ,'Примечание'         ,340,taLeftJustify );
      end; 
    trJrnl                               := TxFBTransaction(Result.FindComponent('trJrnl'));
    with trJrnl do 
      begin 
      DefaultDataBase := FBDataBase; 
      Params.Clear; 
      Params.Add('isc_tpb_read_committed'); 
      Params.Add('isc_tpb_write'); 
      Params.Add('isc_tpb_rec_version'); 
      Params.Add('isc_tpb_nowait'); 
      end; 
    dtsJrnl                              := TxFBDataSet(Result.FindComponent('dtsJrnl'));
    with dtsJrnl do
      begin 
      AfterOpen   := @dtsJrnl_AfterOpen;
      BeforeClose := @dtsJrnl_BeforeClose;
      AfterScroll := @dtsJrnl_AfterScroll;
      end 
    dtsDoc                               := TxFBDataSet(Result.FindComponent('dtsDoc'));
    with dtsDoc do
      begin 
      AfterOpen   := @dtsDoc_AfterOpen;
      BeforeClose := @dtsDoc_BeforeClose;
      AfterScroll := @dtsDoc_AfterScroll;
      end 
    DSdtsJrnl                            := TDataSource(Result.FindComponent('DSdtsJrnl'));
    DSdtsDoc                             := TDataSource(Result.FindComponent('DSdtsDoc'));
    dtsDocWrk                            := TxFBDataSet(Result.FindComponent('dtsDocWrk'));
    with dtsDocWrk do
      begin 
      AfterOpen   := @dtsDocWrk_AfterOpen;
      BeforeClose := @dtsDocWrk_BeforeClose;
      AfterScroll := @dtsDocWrk_AfterScroll;
      end 
    DSdtsDocWrk                          := TDataSource(Result.FindComponent('DSdtsDocWrk'));
    lkAct := FindTAction(Result,'actRefresh'   ,msg_actrefresh   ,msg_actrefresh_hint   ,'F5'      , 0,170); lkAct.OnExecute:=@actRefresh_OnExecute   ; 
    lkAct := FindTAction(Result,'actCommit'    ,msg_actcommit    ,msg_actcommit_hint    ,'Ctrl+C'  , 0,298); lkAct.OnExecute:=@actCommit_OnExecute    ; lkAct.OnUpdate:=@actCommit_OnUpdate; 
    lkAct := FindTAction(Result,'actUnCommit'  ,msg_actuncommit  ,msg_actuncommit_hint  ,'Ctrl+U'  , 0,297); lkAct.OnExecute:=@actUnCommit_OnExecute  ; lkAct.OnUpdate:=@actUnCommit_OnUpdate; 
    lkAct := FindTAction(Result,'actPrint'     ,msg_actprint     ,msg_actprint_hint     ,'Ctrl+P'  , 0,105); lkAct.OnExecute:=@actPrint_OnExecute     ;
    lkAct := FindTAction(Result,'actCalcWrk'   ,'Рассчитать'     ,'Рассчитать зп сотрудников','Ctrl+F9' , 0,262); lkAct.OnExecute:=@actCalcWrk_OnExecute   ;
    lkAct := FindTAction(Result,'actDocDocScan',msg_actdocdocscan,msg_actdocdocscan_hint,'Alt+Ins' , 0,307); lkAct.OnExecute:=@actDocDocScan_OnExecute; lkAct.OnUpdate:=@actCommit_OnUpdate; 
    lkAct := FindTAction(Result,'actDocDocDel' ,msg_actdocdocdel ,msg_actdocdocdel_hint ,'Alt+Del' , 0,309); lkAct.OnExecute:=@actDocDocDel_OnExecute ; lkAct.OnUpdate:=@actDocDocDel_OnUpdate; 
    lkAct := FindTAction(Result,'actDocWrkIns' ,msg_actdocwrkins ,msg_actdocwrkins_hint ,'Ctrl+F7' , 0,528); lkAct.OnExecute:=@actDocWrkIns_OnExecute ; lkAct.OnUpdate:=@actCommit_OnUpdate; 
    lkAct := FindTAction(Result,'actDocWrkAdd' ,msg_actdocwrkadd ,msg_actdocwrkadd_hint ,'Ctrl+Ins', 0,521); lkAct.OnExecute:=@actDocWrkAdd_OnExecute ; lkAct.OnUpdate:=@actCommit_OnUpdate;
    lkAct.Visible := false; 
    lkAct := FindTAction(Result,'actDocWrkDel' ,msg_actdocwrkdel ,msg_actdocwrkdel_hint ,'Ctrl+Del', 0,523); lkAct.OnExecute:=@actDocWrkDel_OnExecute ; lkAct.OnUpdate:=@actDocWrkDel_OnUpdate; 
    RefreshView;
    Amunhotep.MainForm.TaskBar.ButtonByForm(Result).Down := true;
  end;
  //============================================================================
begin
  DocForm := DocForm_Create(GetGlobalVariable('J_ID'));
end.
