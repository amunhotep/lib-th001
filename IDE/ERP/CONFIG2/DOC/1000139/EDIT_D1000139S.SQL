EXECUTE BLOCK (
   Q_J_ID TYPE OF COLUMN TABL$J_4.ID = ?ID
)RETURNS (
   ID                 TYPE OF COLUMN TABL$D_1000139.ID
  ,NAME               TYPE OF COLUMN TABL$D_1000139.NAME
  ,FLAG_DELETE        TYPE OF COLUMN TABL$D_1000139.FLAG_DELETE
  ,J_ID               TYPE OF COLUMN TABL$D_1000139.J_ID
  ,ACC_ID             TYPE OF COLUMN TABL$D_1000139.ACC_ID
  ,ACC_NAME           TYPE OF COLUMN TABL$R_BUHG_ACCS.NAME
  ,SUBKONTO_ID        TYPE OF COLUMN TABL$D_1000139.SUBKONTO_ID
  ,SUBKONTO_NAME      TYPE OF COLUMN TABL$D_1000139.NAME
  ,SUBKONTO_VALUE     TYPE OF COLUMN TABL$D_1000139.SUBKONTO_VALUE
  ,J_ORD_ID           TYPE OF COLUMN TABL$D_1000139.J_ORD_ID
  ,J_TYPE_ID_ORD      TYPE OF COLUMN TABL$J_4.TYPE_ID
  ,J_TYPE_NAME_ORD    TYPE OF COLUMN TABL$_TB_DOCS.NAME
  ,J_DOCNUMBERSTR_ORD TYPE OF COLUMN TABL$J_4.DOCNUMBERSTR
  ,J_DATE_COMMIT_ORD  TYPE OF COLUMN TABL$J_4.DATE_COMMIT
  ,J_DOCSUM_ORD       TYPE OF COLUMN TABL$J_4.DOCSUM
)AS
BEGIN
  FOR
    SELECT  DB.ID, DB.NAME, DB.FLAG_DELETE, DB.J_ID, DB.ACC_ID, DB.SUBKONTO_ID, DB.SUBKONTO_VALUE, DB.J_ORD_ID
           ,(SELECT FIRST 1 B.NAME FROM TABL$R_BUHG_ACCS B WHERE (B.ID = DB.ACC_ID))
    FROM   TABL$D_1000139 DB
    WHERE  (DB.J_ID = :Q_J_ID)
    ORDER BY DB.ID
    INTO    :ID, :NAME, :FLAG_DELETE, :J_ID, :ACC_ID, :SUBKONTO_ID, :SUBKONTO_VALUE, :J_ORD_ID
           ,:ACC_NAME
  DO
    BEGIN
    J_TYPE_ID_ORD      = 0;
    J_TYPE_NAME_ORD    = '';
    J_DOCNUMBERSTR_ORD = '';
    J_DATE_COMMIT_ORD  = NULL;
    J_DOCSUM_ORD       = 0;
    IF(:J_ORD_ID <> 0)THEN
      BEGIN
      SELECT FIRST 1 J.TYPE_ID, DD.NAME, J.DOCNUMBERSTR, J.DATE_COMMIT, J.DOCSUM
      FROM   TABL$J_4 J, TABL$_TB_DOCS DD
      WHERE  (J.ID  = :J_ORD_ID)
        AND  (DD.ID = J.TYPE_ID)
      INTO   :J_TYPE_ID_ORD, :J_TYPE_NAME_ORD, :J_DOCNUMBERSTR_ORD,:J_DATE_COMMIT_ORD, :J_DOCSUM_ORD;
      END
    SUBKONTO_NAME = '';
    SELECT FIRST 1 P.SUBKONTO_NAME FROM PROC$R_BUHG_ACCS_SUBKONTO(:ACC_ID, :SUBKONTO_ID) P INTO :SUBKONTO_NAME;
    SUSPEND;
    END
END
