EXECUTE BLOCK(
  Q_DATE_FROM  TYPE OF COLUMN TABL$J_4.DATE_COMMIT = ?DATE_FROM
 ,Q_DATE_TO    TYPE OF COLUMN TABL$J_4.DATE_COMMIT = ?DATE_TO
 ,Q_TMC_ID     TYPE OF COLUMN TABL$R_TMC.ID        = ?TMC_ID
)RETURNS(
  DATE_FROM              TYPE OF COLUMN TABL$J_4.DATE_COMMIT
 ,DATE_TO                TYPE OF COLUMN TABL$J_4.DATE_COMMIT
 ,TMC_ID                 TYPE OF COLUMN TABL$R_TMC.ID
 ,TMC_NAME               TYPE OF COLUMN TABL$R_TMC.NAME
 ,TMC_EDIZM_ID           TYPE OF COLUMN TABL$R_TMC.EDIZM_ID
 ,TMC_EDIZM_SHORT_NAME   TYPE OF COLUMN TABL$R_EDIZM.SHORT_NAME
 ,TMC_VALUE_DATE         TYPE OF COLUMN TABL$R_TMC_P.VALUE_DATE
 ,TMC_PRICE              TYPE OF COLUMN TABL$R_TMC_P.PRICE
 ,TMC_PRICE_IN           TYPE OF COLUMN TABL$R_TMC_P.PRICE

 ,LVL                    TYPE OF COLUMN TABL$R_TMC.ID
 ,LVLS                   TYPE OF COLUMN TABL$J_4.DOCSTR
 ,TMC_LIST_ID            TYPE OF COLUMN TABL$R_TMC_LISTQUANT.TMC_LIST_ID
 ,L_TMC_ID               TYPE OF COLUMN TABL$R_TMC_LIST.TMC_ID
 ,L_TMC_PARENT_ID        TYPE OF COLUMN TABL$R_TMC_LIST.TMC_ID
 ,L_TMC_NAME             TYPE OF COLUMN TABL$R_TMC.NAME
 ,L_TMC_EDIZM_ID         TYPE OF COLUMN TABL$R_TMC.EDIZM_ID
 ,L_TMC_EDIZM_SHORT_NAME TYPE OF COLUMN TABL$R_EDIZM.SHORT_NAME
 ,L_TMC_VALUE_DATE       TYPE OF COLUMN TABL$R_TMC_P.VALUE_DATE
 ,L_TMC_PRICE            TYPE OF COLUMN TABL$R_TMC_P.PRICE
 ,L_TMC_PRICELIST        TYPE OF COLUMN TABL$R_TMC_P.PRICE
 ,L_TMC_PRICELISTPC      TYPE OF COLUMN TABL$R_TMC_P.PRICE
 ,L_NETTO                TYPE OF COLUMN TABL$R_TMC_LISTQUANT.NETTO
 ,L_QUANT                TYPE OF COLUMN TABL$R_TMC_LISTQUANT.QUANT
 ,L_QUANT_ROOT           TYPE OF COLUMN TABL$R_TMC_LISTQUANT.QUANT

 ,SALES_QUANT            TYPE OF COLUMN TABL$D_1000014.QUANT
 ,SALES_TOTAL            TYPE OF COLUMN TABL$D_1000014.QUANT
 ,SALES_AVG              TYPE OF COLUMN TABL$D_1000014.QUANT
 ,SALES_PRICE            TYPE OF COLUMN TABL$D_1000014.QUANT
 ,SALES_PRICE_IN         FLOAT
 ,SALES_PRICEPC          FLOAT
)AS
  DECLARE VARIABLE P_CNT TYPE OF COLUMN TABL$R_TMC.ID;
BEGIN
  P_CNT     = 0;
  TMC_ID    = :Q_TMC_ID;
  DATE_FROM = :Q_DATE_FROM;
  DATE_TO   = :Q_DATE_TO;

  SELECT FIRST 1 T.NAME, T.EDIZM_ID, E.SHORT_NAME
  FROM   TABL$R_TMC T, TABL$R_EDIZM E
  WHERE  (T.ID = :Q_TMC_ID)
    AND  (E.ID = T.EDIZM_ID)
  INTO   :TMC_NAME, :TMC_EDIZM_ID, :TMC_EDIZM_SHORT_NAME;

  TMC_VALUE_DATE = NULL;
  SELECT MAX(P11.VALUE_DATE)
  FROM   TABL$R_TMC_P P11
  WHERE  (P11.TMC_ID = :TMC_ID)
    AND  (P11.VALUE_DATE <= :DATE_FROM)
  INTO   :TMC_VALUE_DATE;
  IF(:TMC_VALUE_DATE IS NULL)THEN
    BEGIN
    SELECT MAX(P12.VALUE_DATE)
    FROM   TABL$R_TMC_P P12
    WHERE  (P12.TMC_ID = :TMC_ID)
    INTO   :TMC_VALUE_DATE;
    END
  SELECT FIRST 1 P13.PRICE, P13.PRICE_IN
  FROM   TABL$R_TMC_P P13
  WHERE  (P13.TMC_ID     = :TMC_ID)
    AND  (P13.VALUE_DATE = :TMC_VALUE_DATE)
  INTO   :TMC_PRICE, :TMC_PRICE_IN;

  FOR
    SELECT P.LVL, P.LVLS, P.L_TMC_PARENT_ID, P.TMC_LIST_ID, P.L_TMC_ID, P.L_TMC_NAME, P.L_TMC_EDIZM_ID
          ,P.L_TMC_EDIZM_SHORT_NAME, P.L_TMC_VALUE_DATE, P.L_TMC_PRICE
          ,P.L_NETTO, P.L_QUANT, P.L_QUANT_ROOT
          ,P.L_TMC_PRICELIST, P.L_TMC_PRICELISTPC
    FROM   PROC$R_TMC_INLISTS(0, '', :TMC_ID, :TMC_PRICE_IN, 1, :DATE_FROM) P
    INTO   :LVL, :LVLS, :L_TMC_PARENT_ID, :TMC_LIST_ID, :L_TMC_ID, :L_TMC_NAME, :L_TMC_EDIZM_ID
          ,:L_TMC_EDIZM_SHORT_NAME, :L_TMC_VALUE_DATE, :L_TMC_PRICE
          ,:L_NETTO, :L_QUANT, :L_QUANT_ROOT
          ,:L_TMC_PRICELIST, :L_TMC_PRICELISTPC
  DO
    BEGIN
    SALES_QUANT    = 0;
    SALES_TOTAL    = 0;
    SALES_AVG      = 0;
    SALES_PRICE    = 0;
    SALES_PRICE_IN = 0;
    SALES_PRICEPC  = 0;

    SELECT COALESCE(SUM(D14.QUANT),0), COALESCE(SUM(D14.TOTAL),0)
    FROM   TABL$J_4 J, TABL$D_1000014 D14
    WHERE  (J.DATE_COMMIT BETWEEN :DATE_FROM AND :DATE_TO)
      AND  (J.TYPE_ID = 1000075)
      AND  (J.FLAG_COMMIT = 1)
      AND  (D14.J_ID      = J.ID)
      AND  (D14.TMC_ID    = :L_TMC_ID)
    INTO   :SALES_QUANT, :SALES_TOTAL;

    IF(:SALES_QUANT <> 0)THEN
      BEGIN
      SALES_AVG      = :SALES_TOTAL / :SALES_QUANT;
      SALES_PRICE    = :SALES_AVG    * :L_TMC_PRICELISTPC / 100;
      SALES_PRICE_IN = :TMC_PRICE_IN * :L_QUANT_ROOT;
      IF(:SALES_PRICE_IN <> 0)THEN
        SALES_PRICEPC = (:SALES_PRICE * 100) / :SALES_PRICE_IN;
      END


    P_CNT = :P_CNT + 1;
    SUSPEND;
    END

  IF(:P_CNT = 0)THEN
    SUSPEND;
END
