EXECUTE BLOCK (
   Q_FIRM_IDS    TYPE OF COLUMN TABL$J_4.DOCSTR      = ?FIRM_IDS
  ,Q_PLACE_IDS   TYPE OF COLUMN TABL$J_4.DOCSTR      = ?PLACE_IDS
  ,Q_DATE_FROM   TYPE OF COLUMN TABL$J_4.DATE_COMMIT = ?DATE_FROM
  ,Q_DATE_TO     TYPE OF COLUMN TABL$J_4.DATE_COMMIT = ?DATE_TO
)RETURNS (
   DATE_FROM                 TYPE OF COLUMN TABL$J_4.DATE_COMMIT
  ,DATE_TO                   TYPE OF COLUMN TABL$J_4.DATE_COMMIT
  ,FIRM_IDS                  TYPE OF COLUMN TABL$J_4.DOCSTR
  ,PLACE_IDS                 TYPE OF COLUMN TABL$J_4.DOCSTR
  ,FIRM_ID                   TYPE OF COLUMN TABL$R_FIRMS.ID
  ,FIRM_NAME                 TYPE OF COLUMN TABL$R_FIRMS.NAME
  ,PLACE_ID                  TYPE OF COLUMN TABL$R_PLACES.ID
  ,PLACE_NAME                TYPE OF COLUMN TABL$R_PLACES.NAME
  ,FLAG_DEBET                TYPE OF COLUMN TABL$J_4.FLAG_COMMIT
  ,PARTY                     TYPE OF COLUMN TABL$J_4.DOCNUMBERSTR
  ,TMC_GROUP_ID              TYPE OF COLUMN TABL$R_TMC_GROUP.ID
  ,TMC_GROUP_NAME            TYPE OF COLUMN TABL$R_TMC_GROUP.NAME
  ,TMC_CTGR_ID               TYPE OF COLUMN TABL$R_TMC.TMC_CTGR_ID
  ,TMC_CTGR_NAME             TYPE OF COLUMN TABL$R_TMC_CTGR.NAME
  ,TMC_CTGR_PATH             TYPE OF COLUMN TABL$R_TMC_CTGR.PATH
  ,TMC_ID                    TYPE OF COLUMN TABL$R_TMC.ID
  ,TMC_LIST_ID               TYPE OF COLUMN TABL$R_TMC.TMC_LIST_ID
  ,TMC_NAME                  TYPE OF COLUMN TABL$R_TMC.NAME
  ,TMC_ARTICLE               TYPE OF COLUMN TABL$R_TMC.ARTICLE
  ,TMC_BARCODE               TYPE OF COLUMN TABL$R_TMC.BARCODE
  ,TMC_NUMSHOW               TYPE OF COLUMN TABL$R_TMC.NUMSHOW
  ,COUNTRY_ID                TYPE OF COLUMN TABL$R_TMC.COUNTRY_ID
  ,VALUTE                    TYPE OF COLUMN TABL$R_COUNTRIES.VALUTE
  ,TMC_PROBE                 TYPE OF COLUMN TABL$R_TMC.PROBE
  ,TMC_MASSA                 TYPE OF COLUMN TABL$R_TMC.MASSA
  ,TMC_MASSA_INS             TYPE OF COLUMN TABL$R_TMC.MASSA
  ,TMC_MASSA_NETTO           TYPE OF COLUMN TABL$R_TMC.MASSA_NETTO
  ,TMC_LGTH                  TYPE OF COLUMN TABL$R_TMC.LGTH
  ,TMC_DIAM                  TYPE OF COLUMN TABL$R_TMC.DIAM
  ,TMC_EDIZM_ID              TYPE OF COLUMN TABL$R_TMC.EDIZM_ID
  ,TMC_EDIZM_NAME            TYPE OF COLUMN TABL$R_EDIZM.NAME
  ,TMC_EDIZM_SHORT_NAME      TYPE OF COLUMN TABL$R_EDIZM.SHORT_NAME
  ,TMC_BRAND_ID              TYPE OF COLUMN TABL$R_TMC.TMC_BRAND_ID
  ,TMC_BRAND_NAME            TYPE OF COLUMN TABL$R_TMC_BRANDS.NAME
  ,TMC_DEV_BRAND_ID          TYPE OF COLUMN TABL$R_TMC.DEV_TMC_BRAND_ID
  ,TMC_DEV_BRAND_NAME        TYPE OF COLUMN TABL$R_TMC_BRANDS.NAME
  ,TMC_TYPE_ID               TYPE OF COLUMN TABL$R_TMC.TMC_TYPE_ID
  ,TMC_TYPE_NAME             TYPE OF COLUMN TABL$R_TMC_TYPES.NAME
  ,SBEG_PRICE                TYPE OF COLUMN TABL$P_TMCQUANT.PRICE
  ,SBEG_QUANT                TYPE OF COLUMN TABL$P_TMCQUANT.QUANT
  ,SBEG_TOTAL                TYPE OF COLUMN TABL$P_TMCQUANT.TOTAL
  ,SDEB_PRICE                TYPE OF COLUMN TABL$P_TMCQUANT.PRICE
  ,SDEB_QUANT                TYPE OF COLUMN TABL$P_TMCQUANT.QUANT
  ,SDEB_TOTAL                TYPE OF COLUMN TABL$P_TMCQUANT.TOTAL
  ,SKRD_PRICE                TYPE OF COLUMN TABL$P_TMCQUANT.PRICE
  ,SKRD_QUANT                TYPE OF COLUMN TABL$P_TMCQUANT.QUANT
  ,SKRD_TOTAL                TYPE OF COLUMN TABL$P_TMCQUANT.TOTAL
  ,SKRD_TOTALS               TYPE OF COLUMN TABL$P_TMCQUANT.TOTAL
  ,SKRD_TOTALG               TYPE OF COLUMN TABL$P_TMCQUANT.TOTAL
  ,SEND_PRICE                TYPE OF COLUMN TABL$P_TMCQUANT.PRICE
  ,SEND_QUANT                TYPE OF COLUMN TABL$P_TMCQUANT.QUANT
  ,SEND_TOTAL                TYPE OF COLUMN TABL$P_TMCQUANT.TOTAL
  ,TMCQUANT_ID               TYPE OF COLUMN TABL$P_TMCQUANT.ID
  ,J_ID                      TYPE OF COLUMN TABL$J_4.ID
  ,D_ID                      TYPE OF COLUMN TABL$J_4.ID
  ,J_IDS_DEB                 TYPE OF COLUMN TABL$J_4.DOCSTR
  ,J_IDS_KRD                 TYPE OF COLUMN TABL$J_4.DOCSTR
)
AS
  DECLARE VARIABLE P_PRICE  TYPE OF COLUMN TABL$P_TMCQUANT.PRICE;
  DECLARE VARIABLE P_QUANT  TYPE OF COLUMN TABL$P_TMCQUANT.QUANT;
  DECLARE VARIABLE P_TOTAL  TYPE OF COLUMN TABL$P_TMCQUANT.TOTAL;
  DECLARE VARIABLE P_TOTALS TYPE OF COLUMN TABL$P_TMCQUANT.TOTAL;
BEGIN
  DATE_FROM  = :Q_DATE_FROM;
  DATE_TO    = :Q_DATE_TO;
  FIRM_IDS   = :Q_FIRM_IDS;
  PLACE_IDS  = :Q_PLACE_IDS;
  FOR 
    SELECT DISTINCT T.TMC_ID 
    FROM   TABL$P_TMCQUANT T
    WHERE  (:PLACE_IDS CONTAINING '~'||T.PLACE_ID||'~') 
    INTO  :TMC_ID 
  DO
    BEGIN
    SELECT FIRST 1 TMC.TMC_LIST_ID, TMC.NAME, TMC.ARTICLE, TMC.NUMSHOW, TMC.BARCODE, TMC.COUNTRY_ID, TMC.PROBE
          ,(SELECT FIRST 1 C.VALUTE FROM TABL$R_COUNTRIES C WHERE (C.ID = TMC.COUNTRY_ID)) AS VALUTE
          ,TMC.MASSA, (TMC.MASSA - TMC.MASSA_NETTO) AS MASSA_INS, TMC.MASSA_NETTO, TMC.LGTH, TMC.DIAM
          ,TMC.TMC_GROUP_ID, TG.NAME AS TMC_GROUP_NAME
          ,TMC.TMC_CTGR_ID, CG.NAME, CG.PATH
          ,TMC.EDIZM_ID, ED.NAME, ED.SHORT_NAME
          ,TMC.TMC_BRAND_ID, B1.NAME, TMC.DEV_TMC_BRAND_ID, B2.NAME
          ,TMC.TMC_TYPE_ID, TT.NAME
    FROM   TABL$R_TMC TMC, TABL$R_TMC_TYPES TT, TABL$R_TMC_GROUP TG, TABL$R_TMC_CTGR CG
          ,TABL$R_EDIZM ED, TABL$R_TMC_BRANDS B1, TABL$R_TMC_BRANDS B2
    WHERE  (TMC.ID = :TMC_ID)
      AND  (TT.ID = TMC.TMC_TYPE_ID)
      AND  (TG.ID = TMC.TMC_GROUP_ID)
      AND  (CG.ID = TMC.TMC_CTGR_ID)
      AND  (ED.ID = TMC.EDIZM_ID)
      AND  (B1.ID = TMC.TMC_BRAND_ID)
      AND  (B2.ID = TMC.DEV_TMC_BRAND_ID)
    INTO   :TMC_LIST_ID, :TMC_NAME, :TMC_ARTICLE, :TMC_NUMSHOW, :TMC_BARCODE, :COUNTRY_ID, :TMC_PROBE
          ,:VALUTE, :TMC_MASSA, :TMC_MASSA_INS, :TMC_MASSA_NETTO, :TMC_LGTH, :TMC_DIAM
          ,:TMC_GROUP_ID, :TMC_GROUP_NAME
          ,:TMC_CTGR_ID, :TMC_CTGR_NAME, :TMC_CTGR_PATH
          ,:TMC_EDIZM_ID, :TMC_EDIZM_NAME, :TMC_EDIZM_SHORT_NAME
          ,:TMC_BRAND_ID, :TMC_BRAND_NAME, :TMC_DEV_BRAND_ID, :TMC_DEV_BRAND_NAME
          ,:TMC_TYPE_ID, :TMC_TYPE_NAME
          ;
    FOR
      SELECT Q.FIRM_ID, Q.PLACE_ID, Q.J_ID, Q.ID
      FROM   TABL$P_TMCQUANT Q
      WHERE  (Q.TMC_ID      = :TMC_ID)
        AND  (Q.DATE_COMMIT <= :DATE_TO)
        AND  (Q.FLAG_DEBET  = 1)
        AND  (:FIRM_IDS CONTAINING '~'||Q.FIRM_ID||'~')
        AND  (:PLACE_IDS CONTAINING '~'||Q.PLACE_ID||'~')
      ORDER BY Q.FIRM_ID, Q.PLACE_ID, Q.DATE_COMMIT
      INTO    :FIRM_ID, :PLACE_ID, :J_ID, :TMCQUANT_ID
    DO
      BEGIN
      SELECT FIRST 1 F.NAME FROM TABL$R_FIRMS  F WHERE(F.ID = :FIRM_ID )INTO :FIRM_NAME;
      SELECT FIRST 1 P.NAME FROM TABL$R_PLACES P WHERE(P.ID = :PLACE_ID)INTO :PLACE_NAME;
  
      SBEG_PRICE = 0; SBEG_QUANT = 0; SBEG_TOTAL = 0;
      SDEB_PRICE = 0; SDEB_QUANT = 0; SDEB_TOTAL = 0;
      SKRD_PRICE = 0; SKRD_QUANT = 0; SKRD_TOTAL = 0;
      SEND_PRICE = 0; SEND_QUANT = 0; SEND_TOTAL = 0;
      SKRD_TOTALS = 0; SKRD_TOTALG = 0;
  
      FLAG_DEBET = -1;
      J_IDS_KRD  = '';
      J_IDS_DEB  = '';
      SELECT FIRST 1 COALESCE(Q1.PRICE_IN,0), COALESCE(Q1.QUANT_IN,0), COALESCE(Q1.TOTAL_IN,0)
      FROM   TABL$P_TMCQUANT Q1
      WHERE  (Q1.ID = :TMCQUANT_ID)
        AND  (Q1.DATE_COMMIT <= :DATE_FROM)
      INTO   :SBEG_PRICE, :SBEG_QUANT, :SBEG_TOTAL;
      SELECT COALESCE(AVG(Q1.PRICE_IN),0), COALESCE(SUM(Q1.QUANT_IN),0), COALESCE(SUM(Q1.TOTAL_IN),0)
            ,COALESCE('~'||LIST(Q1.J_ID,'~')||'~', '')
      FROM   TABL$P_TMCQUANT Q1
      WHERE  (Q1.ID = :TMCQUANT_ID)
        AND  (Q1.DATE_COMMIT  BETWEEN :DATE_FROM AND :DATE_TO)
        AND  (Q1.FLAG_DEBET = 1)
      INTO   :SDEB_PRICE, :SDEB_QUANT, :SDEB_TOTAL
            ,:J_IDS_DEB;
      SELECT COALESCE(AVG(Q1.PRICE_IN),0), COALESCE(SUM(Q1.QUANT),0), COALESCE(SUM(Q1.PRICE_IN * Q1.QUANT),0), COALESCE(SUM(Q1.TOTAL),0)
            ,COALESCE('~'||LIST(Q1.J_ID,'~')||'~', '')
      FROM   TABL$P_TMCQUANT Q1
      WHERE  (Q1.ROOT_ID = :TMCQUANT_ID)
        AND  (Q1.DATE_COMMIT  BETWEEN :DATE_FROM AND :DATE_TO)
        AND  (Q1.FLAG_DEBET = 0)
      INTO   :SKRD_PRICE, :SKRD_QUANT, :SKRD_TOTAL, :SKRD_TOTALS
            ,:J_IDS_KRD;
      SEND_QUANT = :SBEG_QUANT + :SDEB_QUANT - :SKRD_QUANT;
      SEND_TOTAL = :SBEG_TOTAL + :SDEB_TOTAL - :SKRD_TOTAL;
      SKRD_TOTALG = :SKRD_TOTALS - :SKRD_TOTAL;
      IF(:SEND_QUANT <> 0)THEN SEND_PRICE = :SBEG_PRICE;
      SUSPEND;
      END
  END
END
