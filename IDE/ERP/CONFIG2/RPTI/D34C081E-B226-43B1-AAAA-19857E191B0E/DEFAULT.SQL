EXECUTE BLOCK (
  Q_DATE_FROM TYPE OF COLUMN TABL$J_4.DATE_COMMIT = ?DATE_FROM
 ,Q_DATE_TO   TYPE OF COLUMN TABL$J_4.DATE_COMMIT = ?DATE_TO
 ,Q_FIRM_IDS  TYPE OF COLUMN TABL$J_4.DOCSTR      = ?FIRM_IDS
)RETURNS ( 
  DATE_FROM             TYPE OF COLUMN TABL$J_4.DATE_COMMIT
 ,DATE_TO               TYPE OF COLUMN TABL$J_4.DATE_COMMIT
 ,FIRM_IDS              TYPE OF COLUMN TABL$J_4.DOCSTR
 ,FIRM_NAMES            TYPE OF COLUMN TABL$J_4.DOCSTR
 ,BUHG_ACCS_ID          TYPE OF COLUMN TABL$R_BUHG_ACCS.ID
 ,BUHG_ACCS_PARENT_ID   TYPE OF COLUMN TABL$R_BUHG_ACCS.PARENT_ID
 ,BUHG_ACCS_NAME        TYPE OF COLUMN TABL$R_BUHG_ACCS.NAME
 ,BUHG_ACCS_NAMEPATH    TYPE OF COLUMN TABL$J_4.DOCSTR
 ,BUHG_ACCS_IDS         TYPE OF COLUMN TABL$J_4.DOCSTR
 ,BUHG_ACCS_SALDO       TYPE OF COLUMN TABL$J_4.DOCSUM
 ,BUHG_ACCS_SALDODIFF   TYPE OF COLUMN TABL$J_4.DOCSUM
 ,BUHG_ACCS_SUBKONTO    TYPE OF COLUMN TABL$R_BUHG_ACCS.SUBKONTO
 ,BUHG_ACCS_SUBKONTO_ID TYPE OF COLUMN TABL$J_4.ID
 ,BUHG_ACCS_SUBKONTO_NAME TYPE OF COLUMN TABL$J_4.DOCSTR
 ,SALDOBEGIN            TYPE OF COLUMN TABL$J_4.DOCSUM
 ,SALDOBEGINDEB         TYPE OF COLUMN TABL$J_4.DOCSUM
 ,SALDOBEGINKRD         TYPE OF COLUMN TABL$J_4.DOCSUM
 ,DEBET                 TYPE OF COLUMN TABL$J_4.DOCSUM
 ,KREDIT                TYPE OF COLUMN TABL$J_4.DOCSUM
 ,SALDOEND              TYPE OF COLUMN TABL$J_4.DOCSUM
 ,SALDOENDDEB           TYPE OF COLUMN TABL$J_4.DOCSUM
 ,SALDOENDKRD           TYPE OF COLUMN TABL$J_4.DOCSUM
 ,SALDOBEGINDEB_        TYPE OF COLUMN TABL$J_4.DOCSUM
 ,SALDOBEGINKRD_        TYPE OF COLUMN TABL$J_4.DOCSUM
 ,DEBET_                TYPE OF COLUMN TABL$J_4.DOCSUM
 ,KREDIT_               TYPE OF COLUMN TABL$J_4.DOCSUM
 ,SALDOENDDEB_          TYPE OF COLUMN TABL$J_4.DOCSUM
 ,SALDOENDKRD_          TYPE OF COLUMN TABL$J_4.DOCSUM
)AS
  DECLARE VARIABLE P_ACC_IDS TYPE OF COLUMN TABL$P_CND.ACC_IDS_DEB;
  DECLARE VARIABLE P_DEBET   TYPE OF COLUMN TABL$J_4.DOCSUM;
  DECLARE VARIABLE P_KREDIT  TYPE OF COLUMN TABL$J_4.DOCSUM;
  DECLARE VARIABLE P_DEB_CNT TYPE OF COLUMN TABL$J_4.ID;
  DECLARE VARIABLE P_KRD_CNT TYPE OF COLUMN TABL$J_4.ID;
  DECLARE VARIABLE P_FLAG    TYPE OF COLUMN TABL$J_4.FLAG_COMMIT ;
BEGIN 
  DATE_FROM = :Q_DATE_FROM;
  DATE_TO   = :Q_DATE_TO;
  FIRM_IDS  = :Q_FIRM_IDS;
  SALDOBEGINDEB_ = 0; SALDOBEGINKRD_ = 0;
  DEBET_         = 0; KREDIT_        = 0;
  SALDOENDDEB_   = 0; SALDOENDKRD_   = 0;
  SELECT FIRST 1 LIST(F.NAME,'; ') FROM TABL$R_FIRMS F WHERE(:FIRM_IDS CONTAINING '~'||F.ID||'~') INTO :FIRM_NAMES;
/*
  P_ACC_IDS = '';
  SELECT '~'||LIST(DISTINCT TMP.ACC_ID,'~')||'~'
  FROM   (SELECT DISTINCT CD.ACC_ID_DEB  AS ACC_ID FROM TABL$P_CND CD
          UNION ALL
          SELECT DISTINCT CD.ACC_ID_KRED AS ACC_ID FROM TABL$P_CND CD
          )TMP
  INTO    :P_ACC_IDS;

  FOR
    SELECT B1.ID, B1.PARENT_ID
    FROM   TABL$R_BUHG_ACCS B1
    WHERE  (B1.PARENT_ID = -1000000)
    INTO   :BUHG_ACCS_ID, :BUHG_ACCS_PARENT_ID
  DO
    BEGIN
    SALDOBEGIN    = 0; DEBET = 0; KREDIT = 0; SALDOEND  = 0;
    SALDOBEGINDEB = 0; SALDOBEGINKRD = 0;
    SALDOENDDEB   = 0; SALDOENDKRD   = 0;
    P_DEBET       = 0; P_KREDIT      = 0;
    SELECT COALESCE(SUM(C1.CND_VALUE),0)
    FROM   TABL$P_CND C1
    WHERE  (C1.DATE_COMMIT < :DATE_FROM)
      AND  (C1.ACC_IDS_DEB CONTAINING '~'||:BUHG_ACCS_ID||'~')
      AND  (:FIRM_IDS      CONTAINING '~'||C1.FIRM_ID||'~')
    INTO   :P_DEBET;
    SELECT COALESCE(SUM(C2.CND_VALUE),0)
    FROM   TABL$P_CND C2
    WHERE  (C2.DATE_COMMIT < :DATE_FROM)
      AND  (C2.ACC_IDS_KRED CONTAINING '~'||:BUHG_ACCS_ID||'~')
      AND  (:FIRM_IDS       CONTAINING '~'||C2.FIRM_ID||'~')
    INTO   :P_KREDIT;
    SELECT COALESCE(SUM(C1.CND_VALUE),0)
    FROM   TABL$P_CND C1
    WHERE  (C1.DATE_COMMIT BETWEEN :DATE_FROM AND :DATE_TO)
      AND  (C1.ACC_IDS_DEB CONTAINING '~'||:BUHG_ACCS_ID||'~')
      AND  (:FIRM_IDS      CONTAINING '~'||C1.FIRM_ID||'~')
    INTO   :DEBET;
    SELECT COALESCE(SUM(C2.CND_VALUE),0)
    FROM   TABL$P_CND C2
    WHERE  (C2.DATE_COMMIT BETWEEN :DATE_FROM AND :DATE_TO)
      AND  (C2.ACC_IDS_KRED CONTAINING '~'||:BUHG_ACCS_ID||'~')
      AND  (:FIRM_IDS      CONTAINING '~'||C2.FIRM_ID||'~')
    INTO   :KREDIT;
    SALDOBEGIN = :P_DEBET - :P_KREDIT;
    SALDOEND   = :SALDOBEGIN + :DEBET - :KREDIT;
    IF(:SALDOBEGIN >= 0)THEN SALDOBEGINDEB = :SALDOBEGIN; ELSE SALDOBEGINKRD = ABS(:SALDOBEGIN);
    IF(:SALDOEND   >= 0)THEN SALDOENDDEB   = :SALDOEND  ; ELSE SALDOENDKRD   = ABS(:SALDOEND);
    SALDOBEGINDEB_ = :SALDOBEGINDEB_ + :SALDOBEGINDEB;
    SALDOBEGINKRD_ = :SALDOBEGINKRD_ + :SALDOBEGINKRD;
    DEBET_         = :DEBET_         + :DEBET;
    KREDIT_        = :KREDIT_        + :KREDIT;
    SALDOENDDEB_   = :SALDOENDDEB_   + :SALDOENDDEB;
    SALDOENDKRD_   = :SALDOENDKRD_   + :SALDOENDKRD;
    END
*/
  FOR
    SELECT TMP.ID, TMP.PARENT_ID, TMP.NAME, TMP.NAMEPATH, TMP.SUBKONTO
    FROM   (WITH RECURSIVE BA AS(
              SELECT B1.ID, B1.PARENT_ID, B1.NAME, B1.SUBKONTO, CAST('' AS VARCHAR(1)) AS NAMEPATH
              FROM   TABL$R_BUHG_ACCS B1
              WHERE  (B1.PARENT_ID = -1000000)
              UNION ALL
              SELECT B2.ID, B2.PARENT_ID, B2.NAME, B2.SUBKONTO, CAST('  '||B3.NAMEPATH AS VARCHAR(255)) AS NAMEPATH
              FROM   TABL$R_BUHG_ACCS B2, BA B3
              WHERE  (B2.PARENT_ID = B3.ID)
            )SELECT B.ID, B.PARENT_ID, B.NAME, B.NAMEPATH, B.SUBKONTO FROM BA B
            )TMP
--    WHERE  (:P_ACC_IDS CONTAINING '~'||TMP.ID||'~')
    INTO   :BUHG_ACCS_ID, :BUHG_ACCS_PARENT_ID, :BUHG_ACCS_NAME, :BUHG_ACCS_NAMEPATH, :BUHG_ACCS_SUBKONTO
  DO 
    BEGIN
    BUHG_ACCS_NAMEPATH = :BUHG_ACCS_NAMEPATH||:BUHG_ACCS_NAME;
    P_FLAG                  = 0;
    BUHG_ACCS_SALDO         = 0;
    BUHG_ACCS_SUBKONTO_ID   = -1000000;
    BUHG_ACCS_SUBKONTO_NAME = '';
    SALDOBEGIN    = 0; DEBET = 0; KREDIT = 0; SALDOEND  = 0;
    SALDOBEGINDEB = 0; SALDOBEGINKRD = 0;
    SALDOENDDEB   = 0; SALDOENDKRD   = 0;
    P_DEBET       = 0; P_KREDIT      = 0;
    P_DEB_CNT     = 0; P_KRD_CNT     = 0;
    WITH RECURSIVE BA AS(
      SELECT B1.ID, B1.PARENT_ID
      FROM   TABL$R_BUHG_ACCS B1
      WHERE  (B1.ID = :BUHG_ACCS_ID)
      UNION ALL
      SELECT B2.ID, B2.PARENT_ID
      FROM   TABL$R_BUHG_ACCS B2, BA B3
      WHERE  (B2.PARENT_ID = B3.ID)
    )
    SELECT COALESCE('~'||LIST(B.ID,'~')||'~', '')
    FROM   BA B
    WHERE  EXISTS(
             SELECT FIRST 1 C.ID
             FROM   TABL$P_CND C
             WHERE  ( (C.ACC_ID_DEB=B.ID) OR (C.ACC_ID_KRED=B.ID) )
               AND  (:FIRM_IDS CONTAINING '~'||C.FIRM_ID||'~')
           )
    INTO :BUHG_ACCS_IDS;
    IF( (:BUHG_ACCS_IDS <> '') --AND (:BUHG_ACCS_ID <> 0) 
    )THEN
      BEGIN
      
      SELECT COALESCE(SUM(P.ACCOUNT_VALUE),0)
      FROM   TABL$P_BUHG_ACCS P
      WHERE  (P.ACC_ID = :BUHG_ACCS_ID)
        AND  (:FIRM_IDS CONTAINING '~'||P.FIRM_ID||'~')
      INTO   :BUHG_ACCS_SALDO;

      SELECT COALESCE(SUM(C1.CND_VALUE),0)
      FROM   TABL$P_CND C1
      WHERE  (C1.DATE_COMMIT < :DATE_FROM)
        AND  (C1.ACC_IDS_DEB CONTAINING '~'||:BUHG_ACCS_ID||'~')
        AND  (:FIRM_IDS      CONTAINING '~'||C1.FIRM_ID||'~')
      INTO   :P_DEBET;
  
      SELECT COALESCE(SUM(C2.CND_VALUE),0)
      FROM   TABL$P_CND C2
      WHERE  (C2.DATE_COMMIT < :DATE_FROM)
        AND  (C2.ACC_IDS_KRED CONTAINING '~'||:BUHG_ACCS_ID||'~')
        AND  (:FIRM_IDS      CONTAINING '~'||C2.FIRM_ID||'~')
      INTO   :P_KREDIT;
  
      SALDOBEGIN = :P_DEBET - :P_KREDIT;
  
      SELECT COALESCE(SUM(C1.CND_VALUE),0), COALESCE(COUNT(C1.ID),0)
      FROM   TABL$P_CND C1
      WHERE  (C1.DATE_COMMIT BETWEEN :DATE_FROM AND :DATE_TO)
        AND  (C1.ACC_IDS_DEB CONTAINING '~'||:BUHG_ACCS_ID||'~')
        AND  (:FIRM_IDS      CONTAINING '~'||C1.FIRM_ID||'~')
      INTO   :DEBET, :P_DEB_CNT;
  
      SELECT COALESCE(SUM(C2.CND_VALUE),0), COALESCE(COUNT(C2.ID),0)
      FROM   TABL$P_CND C2
      WHERE  (C2.DATE_COMMIT BETWEEN :DATE_FROM AND :DATE_TO)
        AND  (C2.ACC_IDS_KRED CONTAINING '~'||:BUHG_ACCS_ID||'~')
        AND  (:FIRM_IDS      CONTAINING '~'||C2.FIRM_ID||'~')
      INTO   :KREDIT, :P_KRD_CNT;
  
      SALDOEND = :SALDOBEGIN + :DEBET - :KREDIT;
      BUHG_ACCS_SALDODIFF = :BUHG_ACCS_SALDO - :SALDOEND;
      
      IF(:SALDOBEGIN >= 0)THEN SALDOBEGINDEB = :SALDOBEGIN; ELSE SALDOBEGINKRD = ABS(:SALDOBEGIN);
      IF(:SALDOEND   >= 0)THEN SALDOENDDEB   = :SALDOEND  ; ELSE SALDOENDKRD   = ABS(:SALDOEND);
      END
    IF(   (:SALDOBEGINDEB <> 0) OR (:SALDOBEGINKRD <> 0) 
        OR(:P_DEB_CNT     <> 0) OR (:P_KRD_CNT     <> 0) 
        OR(:DEBET         <> 0) OR (:KREDIT        <> 0) 
        OR(:SALDOENDDEB   <> 0) OR (:SALDOENDKRD   <> 0)
    )THEN
      BEGIN
      SUSPEND;
      P_FLAG = 1;
      END
    IF(TRIM(UPPER(:BUHG_ACCS_SUBKONTO)) <> ''          )THEN P_FLAG = 1;
    IF(TRIM(UPPER(:BUHG_ACCS_SUBKONTO)) =  'TABL$R_TMC')THEN P_FLAG = 0;
    IF (:P_FLAG = 1)THEN
    FOR
      SELECT DISTINCT H.SUBKONTO_ID
      FROM   (SELECT C1.SUBKONTO_ID_DEB AS SUBKONTO_ID
              FROM   TABL$P_CND C1
              WHERE  (:FIRM_IDS CONTAINING '~'||C1.FIRM_ID||'~')
                AND  ((C1.ACC_ID_DEB+0) = :BUHG_ACCS_ID)
              UNION ALL
              SELECT C1.SUBKONTO_ID_KRED AS SUBKONTO_ID
              FROM   TABL$P_CND C1
              WHERE  (:FIRM_IDS CONTAINING '~'||C1.FIRM_ID||'~')
                AND  ((C1.ACC_ID_KRED+0) = :BUHG_ACCS_ID)
              ) H
      INTO   :BUHG_ACCS_SUBKONTO_ID
    DO
      BEGIN
      BUHG_ACCS_SALDO    = 0;
      SALDOBEGIN    = 0; DEBET = 0; KREDIT = 0; SALDOEND  = 0;
      SALDOBEGINDEB = 0; SALDOBEGINKRD = 0;
      SALDOENDDEB   = 0; SALDOENDKRD   = 0;
      P_DEBET       = 0; P_KREDIT      = 0;
      P_DEB_CNT     = 0; P_KRD_CNT     = 0;
      BUHG_ACCS_SUBKONTO_NAME = '';
      SELECT FIRST 1 P.SUBKONTO_NAME
      FROM   PROC$R_BUHG_ACCS_SUBKONTO(:BUHG_ACCS_ID, :BUHG_ACCS_SUBKONTO_ID) P
      INTO   :BUHG_ACCS_SUBKONTO_NAME;

      SELECT COALESCE(SUM(C.CND_VALUE),0)
      FROM   TABL$P_CND C
      WHERE  (C.DATE_COMMIT < :DATE_FROM)
        AND  (:FIRM_IDS CONTAINING '~'||C.FIRM_ID||'~')
        AND  ((C.ACC_ID_DEB+0)  = :BUHG_ACCS_ID)
        AND  (C.SUBKONTO_ID_DEB = :BUHG_ACCS_SUBKONTO_ID)
      INTO   :SALDOBEGINDEB;
      SELECT COALESCE(SUM(C.CND_VALUE),0)
      FROM   TABL$P_CND C
      WHERE  (C.DATE_COMMIT < :DATE_FROM)
        AND  (:FIRM_IDS CONTAINING '~'||C.FIRM_ID||'~')
        AND  ((C.ACC_ID_KRED+0)  = :BUHG_ACCS_ID)
        AND  (C.SUBKONTO_ID_KRED = :BUHG_ACCS_SUBKONTO_ID)
      INTO   :SALDOBEGINKRD;
      SALDOBEGIN    = :SALDOBEGINDEB - :SALDOBEGINKRD;
      SALDOBEGINDEB = 0;
      SALDOBEGINKRD = 0;
      IF(:SALDOBEGIN < 0)THEN SALDOBEGINKRD = ABS(:SALDOBEGIN); ELSE SALDOBEGINDEB = :SALDOBEGIN;
      SELECT COALESCE(SUM(C.CND_VALUE),0)
      FROM   TABL$P_CND C
      WHERE  (C.DATE_COMMIT BETWEEN :DATE_FROM AND :DATE_TO)
        AND  (:FIRM_IDS CONTAINING '~'||C.FIRM_ID||'~')
        AND  ((C.ACC_ID_DEB+0)  = :BUHG_ACCS_ID)
        AND  (C.SUBKONTO_ID_DEB = :BUHG_ACCS_SUBKONTO_ID)
      INTO   :DEBET;
      SELECT COALESCE(SUM(C.CND_VALUE),0)
      FROM   TABL$P_CND C
      WHERE  (C.DATE_COMMIT BETWEEN :DATE_FROM AND :DATE_TO)
        AND  (:FIRM_IDS CONTAINING '~'||C.FIRM_ID||'~')
        AND  ((C.ACC_ID_KRED+0)  = :BUHG_ACCS_ID)
        AND  (C.SUBKONTO_ID_KRED = :BUHG_ACCS_SUBKONTO_ID)
      INTO   :KREDIT;
      SALDOEND    = :SALDOBEGIN + :DEBET - :KREDIT;
      SALDOENDDEB = 0;
      SALDOENDKRD = 0;
      IF(:SALDOEND < 0)THEN SALDOENDKRD = ABS(:SALDOEND); ELSE SALDOENDDEB = :SALDOEND;
      IF(   (:SALDOBEGINDEB <> 0) OR (:SALDOBEGINKRD <> 0) 
          OR(:DEBET         <> 0) OR (:KREDIT        <> 0)
          OR(:SALDOENDDEB   <> 0) OR (:SALDOENDKRD   <> 0)
      )THEN
        SUSPEND;
      END
    END
END
