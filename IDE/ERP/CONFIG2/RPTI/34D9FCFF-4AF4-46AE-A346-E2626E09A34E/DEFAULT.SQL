EXECUTE BLOCK (
  Q_DATE_FROM    TYPE OF COLUMN TABL$J_4.DATE_COMMIT = ?DATE_FROM
 ,Q_DATE_TO      TYPE OF COLUMN TABL$J_4.DATE_COMMIT = ?DATE_TO
 ,Q_FIRM_IDS     TYPE OF COLUMN TABL$J_4.DOCSTR      = ?FIRM_IDS
 ,Q_CS_ID        TYPE OF COLUMN TABL$P_CS_MOVE.CS_ID = ?CS_ID
)RETURNS ( 
  DATE_FROM      TYPE OF COLUMN TABL$J_4.DATE_COMMIT
 ,DATE_TO        TYPE OF COLUMN TABL$J_4.DATE_COMMIT
 ,DATE_COMMIT    TYPE OF COLUMN TABL$J_4.DATE_COMMIT
 ,FIRM_IDS       TYPE OF COLUMN TABL$J_4.DOCSTR
 ,CS_ID          TYPE OF COLUMN TABL$R_CS.ID
 ,CS_NAME        TYPE OF COLUMN TABL$R_CS.NAME
 ,FLAG_DEBET     TYPE OF COLUMN TABL$J_4.FLAG_COMMIT
 ,NAME           TYPE OF COLUMN TABL$J_4.DOCSTR
 ,SALDO          TYPE OF COLUMN TABL$J_4.DOCSUM
 ,DEBET          TYPE OF COLUMN TABL$J_4.DOCSUM
 ,KREDIT         TYPE OF COLUMN TABL$J_4.DOCSUM
 ,J_ID           TYPE OF COLUMN TABL$J_4.ID
 ,J_TYPE_ID      TYPE OF COLUMN TABL$J_4.TYPE_ID
 ,J_TYPE_NAME    TYPE OF COLUMN TABL$_TB_TYPES.NAME
 ,J_DOCNUMBERSTR TYPE OF COLUMN TABL$J_4.DOCNUMBERSTR
)AS
  DECLARE VARIABLE P_DEBET       TYPE OF COLUMN TABL$J_4.DOCSUM;
  DECLARE VARIABLE P_KREDIT      TYPE OF COLUMN TABL$J_4.DOCSUM;

  DECLARE VARIABLE P_DEBET_SAVE  TYPE OF COLUMN TABL$J_4.DOCSUM;
  DECLARE VARIABLE P_KREDIT_SAVE TYPE OF COLUMN TABL$J_4.DOCSUM;
BEGIN 
  DATE_FROM  = :Q_DATE_FROM;
  DATE_TO    = :Q_DATE_TO;
  FIRM_IDS   = :Q_FIRM_IDS;
  CS_ID      = :Q_CS_ID; SELECT FIRST 1 C.NAME FROM TABL$R_CS C WHERE (C.ID = :CS_ID) INTO :CS_NAME;
  FLAG_DEBET     = -1;
  NAME           = '';
  SALDO          = 0;
  DEBET          = 0;
  KREDIT         = 0;
  J_ID           = 0;
  J_TYPE_ID      = 0;
  J_TYPE_NAME    = '';
  J_DOCNUMBERSTR = '';
  DATE_COMMIT    = :DATE_FROM;
  SELECT COALESCE(SUM(P.CS_VALUE),0)
  FROM   TABL$P_CS_MOVE P
  WHERE  (P.DATE_COMMIT < :DATE_FROM)
    AND  (:FIRM_IDS CONTAINING '~'||P.FIRM_ID||'~')
    AND  (P.CS_ID = :CS_ID)
    AND  (P.FLAG_DEBET = 1)
  INTO   :DEBET;
  SELECT COALESCE(SUM(P.CS_VALUE),0)
  FROM   TABL$P_CS_MOVE P
  WHERE  (P.DATE_COMMIT < :DATE_FROM)
    AND  (:FIRM_IDS CONTAINING '~'||P.FIRM_ID||'~')
    AND  (P.CS_ID = :CS_ID)
    AND  (P.FLAG_DEBET = 0)
  INTO   :KREDIT;
  SALDO = :DEBET - :KREDIT;
  DEBET = 0;
  KREDIT = 0;
  IF(:SALDO > 0)THEN DEBET = :SALDO; ELSE KREDIT = (-1) * :SALDO;
  SALDO = 0;
  P_DEBET_SAVE  = :DEBET;
  P_KREDIT_SAVE = :KREDIT;
  NAME = 'Œ—“¿“Œ  Õ¿ Õ¿◊¿ÀŒ œ≈–»Œƒ¿';
  SUSPEND;
  NAME = '';
  P_DEBET  = 0;
  P_KREDIT = 0;
  FOR
    SELECT P.FLAG_DEBET, P.CS_VALUE, P.J_ID, J.TYPE_ID, TT.NAME2, J.DOCNUMBERSTR, J.DOCSTR, P.DATE_COMMIT
    FROM   TABL$P_CS_MOVE P, TABL$J_4 J, TABL$_TB_TYPES TT
    WHERE  (P.DATE_COMMIT BETWEEN :DATE_FROM AND :DATE_TO)
      AND  (:FIRM_IDS CONTAINING '~'||P.FIRM_ID||'~')
      AND  (P.CS_ID = :CS_ID)
      AND  (J.ID = P.J_ID)
      AND  (TT.ID = J.TYPE_ID)
    ORDER BY P.DATE_COMMIT, P.J_ID  
    INTO   :FLAG_DEBET, :SALDO, :J_ID, :J_TYPE_ID, :J_TYPE_NAME, :J_DOCNUMBERSTR, :NAME, :DATE_COMMIT
  DO
    BEGIN
    DEBET = 0;
    KREDIT = 0;
    IF(:FLAG_DEBET = 1)THEN
      BEGIN
      DEBET    = :SALDO;
      P_DEBET  = :P_DEBET + :DEBET;
      END
     ELSE
      BEGIN
      KREDIT   = :SALDO;
      P_KREDIT = :P_KREDIT + :KREDIT;
      END
    SALDO = 0;
    SUSPEND;
    END
  FLAG_DEBET     = -1;
  NAME           = 'Œ¡Œ–Œ“ «¿ œ≈–»Œƒ';
  SALDO          = 0;
  DEBET          = :P_DEBET;
  KREDIT         = :P_KREDIT;
  J_ID           = 0;
  J_TYPE_ID      = 0;
  J_TYPE_NAME    = '';
  J_DOCNUMBERSTR = '';
  SUSPEND;
  SALDO = :P_DEBET_SAVE - :P_KREDIT_SAVE + :P_DEBET - :P_KREDIT;
  DEBET = 0;
  KREDIT = 0;
  IF(:SALDO > 0)THEN DEBET = :SALDO; ELSE KREDIT = (-1) * :SALDO;
  SALDO = 0;
  NAME = 'Œ—“¿“Œ  Õ¿  ŒÕ≈÷ œ≈–»Œƒ¿';
  SUSPEND;
END
