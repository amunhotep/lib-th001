CREATE OR ALTER PROCEDURE PROC$_EXCHANGE_R_CS_DOCS_ARC (
  Q_DATABASEPATH TYPE OF COLUMN TABL$R_FILIALS.DATABASE_NAME,
  Q_USERNAME     TYPE OF COLUMN TABL$_USERS.ID,
  Q_USERPWD      TYPE OF COLUMN TABL$_USERS.PWD,
  Q_FILIAL_ID    TYPE OF COLUMN TABL$R_FILIALS.ID)
RETURNS (
  TYPE_ID TYPE OF COLUMN TABL$_TB_TYPES.ID,
  NAME    TYPE OF COLUMN TABL$_TB.NAME,
  CNT     TYPE OF COLUMN TABL$J_4.ID)
AS
  DECLARE VARIABLE P_CS_ID          TYPE OF COLUMN TABL$R_CS_DOCS.CS_ID;
  DECLARE VARIABLE P_ID             TYPE OF COLUMN TABL$R_CS_DOCS.ID;
  DECLARE VARIABLE P_ID_NEW         TYPE OF COLUMN TABL$R_CS_DOCS.ID;
  DECLARE VARIABLE P_NAME           TYPE OF COLUMN TABL$R_CS_DOCS.NAME;
  DECLARE VARIABLE P_FLAG_DELETE    TYPE OF COLUMN TABL$R_CS_DOCS.FLAG_DELETE;
  DECLARE VARIABLE P_DOCTYPE_ID     TYPE OF COLUMN TABL$R_CS_DOCS.DOCTYPE_ID;
  DECLARE VARIABLE P_DOC_SERIAL     TYPE OF COLUMN TABL$R_CS_DOCS.DOC_SERIAL;
  DECLARE VARIABLE P_DOC_NUMBER     TYPE OF COLUMN TABL$R_CS_DOCS.DOC_NUMBER;
  DECLARE VARIABLE P_DOC_DATE       TYPE OF COLUMN TABL$R_CS_DOCS.DOC_DATE;
  DECLARE VARIABLE P_DOC_DATEEND    TYPE OF COLUMN TABL$R_CS_DOCS.DOC_DATEEND;
  DECLARE VARIABLE P_COMENT         TYPE OF COLUMN TABL$R_CS_DOCS.COMENT;

  DECLARE VARIABLE P_SQL_STMT       TYPE OF COLUMN TABL$J_4.DOCSTR;
BEGIN
  TYPE_ID = 2;
  CNT     = 0;
  SELECT FIRST 1 TB.NAME FROM TABL$_TB TB WHERE(TRIM(UPPER(TB.ID)) = 'TABL$R_CS_DOCS') INTO :NAME;
  -- EXECUTE LOCAL !
  EXECUTE STATEMENT 'ALTER SEQUENCE GENR$R_CS_DOCS_ID RESTART WITH -999999;';

  P_SQL_STMT =
    'SELECT D.CS_ID, D.ID, D.NAME, D.FLAG_DELETE, D.DOCTYPE_ID, D.DOC_SERIAL, '||
    '       D.DOC_NUMBER, D.DOC_DATE, D.DOC_DATEEND, D.COMENT '||
    'FROM   TABL$R_CS_DOCS D '||
    'WHERE  (D.ID > 0) '||
    '  AND  (D.CS_ID > 0) '||
    'ORDER BY D.ID ';
  FOR
    EXECUTE STATEMENT :P_SQL_STMT
      ON EXTERNAL DATA SOURCE :Q_DATABASEPATH AS USER :Q_USERNAME PASSWORD :Q_USERPWD
      WITH AUTONOMOUS TRANSACTION
    INTO :P_CS_ID, :P_ID, :P_NAME, :P_FLAG_DELETE, :P_DOCTYPE_ID, :P_DOC_SERIAL,
         :P_DOC_NUMBER, :P_DOC_DATE, :P_DOC_DATEEND, :P_COMENT
  DO
    BEGIN
    UPDATE OR INSERT INTO TABL$R_CS_DOCS (CS_ID, ID, NAME, FLAG_DELETE, DOCTYPE_ID,
      DOC_SERIAL, DOC_NUMBER, DOC_DATE, DOC_DATEEND, COMENT
    )VALUES (:P_CS_ID, :P_ID, :P_NAME, :P_FLAG_DELETE, :P_DOCTYPE_ID,
      :P_DOC_SERIAL, :P_DOC_NUMBER, :P_DOC_DATE, :P_DOC_DATEEND, :P_COMENT
    )MATCHING(ID)RETURNING ID INTO :P_ID_NEW;

    UPDATE TABL$R_CS_DOCS CSD SET CSD.ID = :P_ID WHERE (CSD.ID = :P_ID_NEW);
    CNT = :CNT + 1;
    END
  SUSPEND;

  -- GET SEQUENCE VALUE
  P_ID = 0;
  P_SQL_STMT = 'SELECT FIRST 1 GEN_ID(GENR$R_CS_DOCS_ID, 0) FROM RDB$DATABASE ';
  EXECUTE STATEMENT :P_SQL_STMT
    ON EXTERNAL DATA SOURCE :Q_DATABASEPATH AS USER :Q_USERNAME PASSWORD :Q_USERPWD
    WITH AUTONOMOUS TRANSACTION
    INTO :P_ID;
  -- EXECUTE LOCAL !
  EXECUTE STATEMENT 'ALTER SEQUENCE GENR$R_CS_DOCS_ID RESTART WITH '||:P_ID||';';
END
